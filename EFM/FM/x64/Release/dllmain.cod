; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30153.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	?g_safeToRun@@3HA				; g_safeToRun
PUBLIC	?g_log@@3PEAU_iobuf@@EA				; g_log
PUBLIC	??_C@_0BI@KONLDKKE@YF23A_EFM_RADIO_DISABLE@	; `string'
EXTRN	__imp_getenv_s:PROC
?g_safeToRun@@3HA DD 01H DUP (?)			; g_safeToRun
	ALIGN	8

?g_log@@3PEAU_iobuf@@EA DQ 01H DUP (?)			; g_log
_BSS	ENDS
;	COMDAT ??_C@_0BI@KONLDKKE@YF23A_EFM_RADIO_DISABLE@
CONST	SEGMENT
??_C@_0BI@KONLDKKE@YF23A_EFM_RADIO_DISABLE@ DB 'YF23A_EFM_RADIO_DISABLE', 00H ; `string'
PUBLIC	DllMain
;	COMDAT pdata
pdata	SEGMENT
$pdata$DllMain DD imagerel $LN12
	DD	imagerel $LN12+42
	DD	imagerel $unwind$DllMain
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$DllMain DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\dllmain.cpp
;	COMDAT DllMain
_TEXT	SEGMENT
hModule$ = 48
ul_reason_for_call$ = 56
lpReserved$ = 64
size$1 = 72
DllMain	PROC						; COMDAT

; 20   : {

$LN12:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 21   : 	switch (ul_reason_for_call)

  00004	83 fa 01	 cmp	 edx, 1
  00007	75 17		 jne	 SHORT $LN10@DllMain

; 22   : 	{
; 23   : 	case DLL_PROCESS_ATTACH:
; 24   : #ifdef DEBUG_CONSOLE
; 25   : 		if (AllocConsole())
; 26   : 		{
; 27   : 			freopen_s(&stream, "CONOUT$", "w", stdout);
; 28   : 			SetConsoleTitle((L"DCS YF-23A Debug Console"));
; 29   : 			SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), FOREGROUND_BLUE | FOREGROUND_GREEN | FOREGROUND_BLUE);
; 30   : 		}
; 31   : #endif
; 32   : 		size_t size;
; 33   : 		getenv_s(&size, NULL, 0, "YF23A_EFM_RADIO_DISABLE");

  00009	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_0BI@KONLDKKE@YF23A_EFM_RADIO_DISABLE@
  00010	45 33 c0	 xor	 r8d, r8d
  00013	33 d2		 xor	 edx, edx
  00015	48 8d 4c 24 48	 lea	 rcx, QWORD PTR size$1[rsp]
  0001a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_getenv_s
$LN10@DllMain:

; 34   : 
; 35   : 		if (size)
; 36   : 			g_disableRadio = true;
; 37   : 
; 38   : #ifdef LOGGING_OLD
; 39   : 		size_t size;
; 40   : 		getenv_s(&size, NULL, 0, "YF23A_EFM_LOGGING");
; 41   : 		if (size)
; 42   : 		{
; 43   : 			g_logging = true;
; 44   : 		}
; 45   : 
; 46   : 		getenv_s(&size, NULL, 0, "ENV_DISABLE_COPY_PROTECTION");
; 47   : 		if (g_logging)
; 48   : 		{
; 49   : 			fopen_s(&g_log, "C:/tmp/log.txt", "w");
; 50   : 		}
; 51   : #endif
; 52   : 		break;
; 53   : 	case DLL_THREAD_ATTACH:
; 54   : 	case DLL_THREAD_DETACH:
; 55   : 	case DLL_PROCESS_DETACH:
; 56   : 		break;
; 57   : 	}
; 58   : 	return TRUE;
; 59   : }

  00020	b8 01 00 00 00	 mov	 eax, 1
  00025	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00029	c3		 ret	 0
DllMain	ENDP
_TEXT	ENDS
END
