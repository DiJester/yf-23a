; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30153.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BC@NKBKLCNF@aircraft?5init?4?4?4?6@	; `string'
PUBLIC	??_C@_0BB@ENPFDANH@Have?5window?3?5?$CFp?6@	; `string'
PUBLIC	??_C@_0BJ@KKAIJPL@aircraft?5init?5complete?5?6@	; `string'
PUBLIC	??_C@_0BG@CMFOKJLF@aircraft?5simulate?4?4?4?6@	; `string'
PUBLIC	??_C@_0BJ@PEIMFPFO@aircraft?5stick?5roll?3?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BM@JFGCJAHJ@aircraft?5simulate?5complete?6@ ; `string'
PUBLIC	??_C@_0BI@BFHMAGFM@aircraft?5cold?5start?4?4?4?6@ ; `string'
PUBLIC	??_C@_0BH@GEHOAKIO@aircraft?5hot?5start?4?4?4?6@ ; `string'
PUBLIC	??_C@_0BK@FFHCECAO@aircraft?5start?5in?5air?4?4?4?6@ ; `string'
PUBLIC	??_C@_0P@HEFKKHPJ@?$CFs?1efm_log?4txt@		; `string'
PUBLIC	??_C@_02DPNLHKJD@a?$CL@				; `string'
PUBLIC	??_C@_03OFAPEBGM@?$CFs?6@			; `string'
PUBLIC	??_C@_0BF@HCDPKGIN@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?6@ ; `string'
PUBLIC	??_C@_0P@DMMMFIGI@Begin?5Log?0?5?$CFs?6@	; `string'
PUBLIC	??_C@_0BM@BGPAKLO@Initializing?5Components?4?4?4?6@ ; `string'
PUBLIC	??_C@_0BJ@BIFCCFJO@Releasing?5Components?4?4?4?6@ ; `string'
PUBLIC	??_C@_0BA@CIMAFJHJ@Closing?5Log?4?4?4?6@	; `string'
PUBLIC	??_C@_0BA@GDCNBPJJ@Something?5Else?6@		; `string'
PUBLIC	??_C@_09MDKJOJFC@Type?3?5?$CFd?6@		; `string'
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
EXTRN	__imp_fclose:PROC
EXTRN	__imp_fopen_s:PROC
EXTRN	__imp_GetActiveWindow:PROC
EXTRN	__imp_srand:PROC
EXTRN	__imp_copysign:PROC
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp___stdio_common_vsprintf_s:PROC
EXTRN	__imp___stdio_common_vfprintf:PROC
EXTRN	__imp___acrt_iob_func:PROC
EXTRN	__imp___std_terminate:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__imp___CxxFrameHandler4:PROC
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
?srcvers@@3QBDB DB 'YF-23A Version 0.0.1', 00H		; srcvers
	ORG $+3
?SPEED_OF_SOUND@@3NA DQ 04074000000000000r	; 320	; SPEED_OF_SOUND
CONST	ENDS
;	COMDAT ??_C@_09MDKJOJFC@Type?3?5?$CFd?6@
CONST	SEGMENT
??_C@_09MDKJOJFC@Type?3?5?$CFd?6@ DB 'Type: %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GDCNBPJJ@Something?5Else?6@
CONST	SEGMENT
??_C@_0BA@GDCNBPJJ@Something?5Else?6@ DB 'Something Else', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CIMAFJHJ@Closing?5Log?4?4?4?6@
CONST	SEGMENT
??_C@_0BA@CIMAFJHJ@Closing?5Log?4?4?4?6@ DB 'Closing Log...', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BIFCCFJO@Releasing?5Components?4?4?4?6@
CONST	SEGMENT
??_C@_0BJ@BIFCCFJO@Releasing?5Components?4?4?4?6@ DB 'Releasing Component'
	DB	's...', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BGPAKLO@Initializing?5Components?4?4?4?6@
CONST	SEGMENT
??_C@_0BM@BGPAKLO@Initializing?5Components?4?4?4?6@ DB 'Initializing Comp'
	DB	'onents...', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DMMMFIGI@Begin?5Log?0?5?$CFs?6@
CONST	SEGMENT
??_C@_0P@DMMMFIGI@Begin?5Log?0?5?$CFs?6@ DB 'Begin Log, %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HCDPKGIN@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?6@
CONST	SEGMENT
??_C@_0BF@HCDPKGIN@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?6@ DB '='
	DB	'==================', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03OFAPEBGM@?$CFs?6@
CONST	SEGMENT
??_C@_03OFAPEBGM@?$CFs?6@ DB '%s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPNLHKJD@a?$CL@
CONST	SEGMENT
??_C@_02DPNLHKJD@a?$CL@ DB 'a+', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HEFKKHPJ@?$CFs?1efm_log?4txt@
CONST	SEGMENT
??_C@_0P@HEFKKHPJ@?$CFs?1efm_log?4txt@ DB '%s/efm_log.txt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FFHCECAO@aircraft?5start?5in?5air?4?4?4?6@
CONST	SEGMENT
??_C@_0BK@FFHCECAO@aircraft?5start?5in?5air?4?4?4?6@ DB 'aircraft start i'
	DB	'n air...', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GEHOAKIO@aircraft?5hot?5start?4?4?4?6@
CONST	SEGMENT
??_C@_0BH@GEHOAKIO@aircraft?5hot?5start?4?4?4?6@ DB 'aircraft hot start..'
	DB	'.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@BFHMAGFM@aircraft?5cold?5start?4?4?4?6@
CONST	SEGMENT
??_C@_0BI@BFHMAGFM@aircraft?5cold?5start?4?4?4?6@ DB 'aircraft cold start'
	DB	'...', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JFGCJAHJ@aircraft?5simulate?5complete?6@
CONST	SEGMENT
??_C@_0BM@JFGCJAHJ@aircraft?5simulate?5complete?6@ DB 'aircraft simulate '
	DB	'complete', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@PEIMFPFO@aircraft?5stick?5roll?3?5?$CFf?6@
CONST	SEGMENT
??_C@_0BJ@PEIMFPFO@aircraft?5stick?5roll?3?5?$CFf?6@ DB 'aircraft stick r'
	DB	'oll: %f', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@CMFOKJLF@aircraft?5simulate?4?4?4?6@
CONST	SEGMENT
??_C@_0BG@CMFOKJLF@aircraft?5simulate?4?4?4?6@ DB 'aircraft simulate...', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@KKAIJPL@aircraft?5init?5complete?5?6@
CONST	SEGMENT
??_C@_0BJ@KKAIJPL@aircraft?5init?5complete?5?6@ DB 'aircraft init complet'
	DB	'e ', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@ENPFDANH@Have?5window?3?5?$CFp?6@
CONST	SEGMENT
??_C@_0BB@ENPFDANH@Have?5window?3?5?$CFp?6@ DB 'Have window: %p', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NKBKLCNF@aircraft?5init?4?4?4?6@
CONST	SEGMENT
??_C@_0BC@NKBKLCNF@aircraft?5init?4?4?4?6@ DB 'aircraft init...', 0aH, 00H ; `string'
CONST	ENDS
PUBLIC	??$max@N@std@@YAAEBNAEBN0@Z			; std::max<double>
PUBLIC	??$min@N@std@@YAAEBNAEBN0@Z			; std::min<double>
PUBLIC	ed_fm_set_surface
PUBLIC	ed_fm_suspension_feedback
PUBLIC	ed_fm_enable_debug_info
PUBLIC	ed_fm_release
PUBLIC	ed_fm_set_plugin_data_install_path
PUBLIC	ed_fm_add_global_moment_component
PUBLIC	ed_fm_add_local_moment_component
PUBLIC	ed_fm_add_global_force_component
PUBLIC	ed_fm_add_local_force_component
PUBLIC	ed_fm_hot_start_in_air
PUBLIC	ed_fm_hot_start
PUBLIC	ed_fm_cold_start
PUBLIC	ed_fm_get_param
PUBLIC	ed_fm_configure
PUBLIC	ed_fm_set_draw_args
PUBLIC	ed_fm_get_external_fuel
PUBLIC	ed_fm_set_external_fuel
PUBLIC	ed_fm_get_internal_fuel
PUBLIC	ed_fm_set_internal_fuel
PUBLIC	ed_fm_change_mass
PUBLIC	ed_fm_set_command
PUBLIC	ed_fm_set_current_state_body_axis
PUBLIC	ed_fm_set_current_state
PUBLIC	ed_fm_set_current_mass_state
PUBLIC	ed_fm_set_atmosphere
PUBLIC	ed_fm_simulate
PUBLIC	ed_fm_add_local_moment
PUBLIC	ed_fm_add_global_moment
PUBLIC	ed_fm_add_global_force
PUBLIC	ed_fm_add_local_force
PUBLIC	??_GAirFrame@Aircraft@@QEAAPEAXI@Z		; Aircraft::AirFrame::`scalar deleting destructor'
PUBLIC	??_GInput@Aircraft@@QEAAPEAXI@Z			; Aircraft::Input::`scalar deleting destructor'
PUBLIC	??_GEngine@Aircraft@@QEAAPEAXI@Z		; Aircraft::Engine::`scalar deleting destructor'
PUBLIC	??_GFuelSys@Aircraft@@QEAAPEAXI@Z		; Aircraft::FuelSys::`scalar deleting destructor'
PUBLIC	??_GAeroModel@Aircraft@@QEAAPEAXI@Z		; Aircraft::AeroModel::`scalar deleting destructor'
PUBLIC	??_GState@Aircraft@@QEAAPEAXI@Z			; Aircraft::State::`scalar deleting destructor'
PUBLIC	??_GWorld@Aircraft@@QEAAPEAXI@Z			; Aircraft::World::`scalar deleting destructor'
PUBLIC	?cleanup@@YAXXZ					; cleanup
PUBLIC	?init@@YAXXZ					; init
PUBLIC	?getPedalYaw@Input@Aircraft@@QEAANXZ		; Aircraft::Input::getPedalYaw
PUBLIC	?getStickRoll@Input@Aircraft@@QEAANXZ		; Aircraft::Input::getStickRoll
PUBLIC	?getStickPitch@Input@Aircraft@@QEAANXZ		; Aircraft::Input::getStickPitch
PUBLIC	?getThrottle@Input@Aircraft@@QEAANXZ		; Aircraft::Input::getThrottle
PUBLIC	?setPedalYaw@Input@Aircraft@@QEAAXN@Z		; Aircraft::Input::setPedalYaw
PUBLIC	?setStickRoll@Input@Aircraft@@QEAAXN@Z		; Aircraft::Input::setStickRoll
PUBLIC	?setStickPitch@Input@Aircraft@@QEAAXN@Z		; Aircraft::Input::setStickPitch
PUBLIC	?setThrottle@Input@Aircraft@@QEAAXN@Z		; Aircraft::Input::setThrottle
PUBLIC	?getYawTrim@Input@Aircraft@@QEBANXZ		; Aircraft::Input::getYawTrim
PUBLIC	?getRollTrim@Input@Aircraft@@QEBANXZ		; Aircraft::Input::getRollTrim
PUBLIC	?getPitchTrim@Input@Aircraft@@QEBANXZ		; Aircraft::Input::getPitchTrim
PUBLIC	?setRightBrk@Input@Aircraft@@QEBAAEBNXZ		; Aircraft::Input::setRightBrk
PUBLIC	?getYawDamper@Input@Aircraft@@QEBANXZ		; Aircraft::Input::getYawDamper
PUBLIC	?setLeftBrk@Input@Aircraft@@QEBAAEBNXZ		; Aircraft::Input::setLeftBrk
PUBLIC	??1Input@Aircraft@@QEAA@XZ			; Aircraft::Input::~Input
PUBLIC	??0Input@Aircraft@@QEAA@XZ			; Aircraft::Input::Input
PUBLIC	?getValue@Axis@@QEBA?BNXZ			; Axis::getValue
PUBLIC	?updateAxis@Axis@@QEAAXN@Z			; Axis::updateAxis
PUBLIC	??1Axis@@QEAA@XZ				; Axis::~Axis
PUBLIC	??0Axis@@QEAA@NNNNN@Z				; Axis::Axis
PUBLIC	?setSurfHeight@World@Aircraft@@QEAAXN@Z		; Aircraft::World::setSurfHeight
PUBLIC	?setSurfNorm@World@Aircraft@@QEAAXAEBUVec3@@@Z	; Aircraft::World::setSurfNorm
PUBLIC	?setGlobalDown@World@Aircraft@@QEAAXAEBUVec3@@@Z ; Aircraft::World::setGlobalDown
PUBLIC	?setDirection@World@Aircraft@@QEAAXAEBUVec3@@@Z	; Aircraft::World::setDirection
PUBLIC	?setVelocity@World@Aircraft@@QEAAXAEBUVec3@@@Z	; Aircraft::World::setVelocity
PUBLIC	?setPos@World@Aircraft@@QEAAXAEBUVec3@@@Z	; Aircraft::World::setPos
PUBLIC	?getPos@World@Aircraft@@QEBA?AUVec3@@XZ		; Aircraft::World::getPos
PUBLIC	?setAltitude@World@Aircraft@@QEAAXN@Z		; Aircraft::World::setAltitude
PUBLIC	?setAtmPre@World@Aircraft@@QEAAXN@Z		; Aircraft::World::setAtmPre
PUBLIC	?setAtmDensity@World@Aircraft@@QEAAXN@Z		; Aircraft::World::setAtmDensity
PUBLIC	?getAtmDensity@World@Aircraft@@QEBANXZ		; Aircraft::World::getAtmDensity
PUBLIC	?setAtmTemp@World@Aircraft@@QEAAXN@Z		; Aircraft::World::setAtmTemp
PUBLIC	?setWind@World@Aircraft@@QEAAXAEBUVec3@@@Z	; Aircraft::World::setWind
PUBLIC	??1World@Aircraft@@QEAA@XZ			; Aircraft::World::~World
PUBLIC	??0World@Aircraft@@QEAA@XZ			; Aircraft::World::World
PUBLIC	?resetForce@State@Aircraft@@QEAAXXZ		; Aircraft::State::resetForce
PUBLIC	?addForce@State@Aircraft@@QEAAXAEBUForce@@@Z	; Aircraft::State::addForce
PUBLIC	?setAccel@State@Aircraft@@QEAAXAEBUVec3@@@Z	; Aircraft::State::setAccel
PUBLIC	?setLocalSpeed@State@Aircraft@@QEAAXAEBUVec3@@@Z ; Aircraft::State::setLocalSpeed
PUBLIC	?setAngVelo@State@Aircraft@@QEAAXAEBUVec3@@@Z	; Aircraft::State::setAngVelo
PUBLIC	?setAngAcc@State@Aircraft@@QEAAXAEBUVec3@@@Z	; Aircraft::State::setAngAcc
PUBLIC	?setAngle@State@Aircraft@@QEAAXAEBUVec3@@@Z	; Aircraft::State::setAngle
PUBLIC	?setAos@State@Aircraft@@QEAAXN@Z		; Aircraft::State::setAos
PUBLIC	?setMass@State@Aircraft@@QEAAXN@Z		; Aircraft::State::setMass
PUBLIC	?getForce@State@Aircraft@@QEBA?AUVec3@@XZ	; Aircraft::State::getForce
PUBLIC	?getMoment@State@Aircraft@@QEBA?AUVec3@@XZ	; Aircraft::State::getMoment
PUBLIC	?setAirspeed@State@Aircraft@@QEAAXAEBUVec3@@@Z	; Aircraft::State::setAirspeed
PUBLIC	?getAirspeed@State@Aircraft@@QEBA?AUVec3@@XZ	; Aircraft::State::getAirspeed
PUBLIC	?setCg@State@Aircraft@@QEAAXAEBUVec3@@@Z	; Aircraft::State::setCg
PUBLIC	?getCg@State@Aircraft@@QEBA?AUVec3@@XZ		; Aircraft::State::getCg
PUBLIC	?setAoa@State@Aircraft@@QEAAXN@Z		; Aircraft::State::setAoa
PUBLIC	?getAoa@State@Aircraft@@QEBANXZ			; Aircraft::State::getAoa
PUBLIC	??1State@Aircraft@@QEAA@XZ			; Aircraft::State::~State
PUBLIC	??0State@Aircraft@@QEAA@XZ			; Aircraft::State::State
PUBLIC	?setRightWhlGS@AirFrame@Aircraft@@QEAAXN@Z	; Aircraft::AirFrame::setRightWhlGS
PUBLIC	?setLeftWhlGS@AirFrame@Aircraft@@QEAAXN@Z	; Aircraft::AirFrame::setLeftWhlGS
PUBLIC	?setNoseWhlComp@AirFrame@Aircraft@@QEAAXN@Z	; Aircraft::AirFrame::setNoseWhlComp
PUBLIC	?setRightWhlComp@AirFrame@Aircraft@@QEAAXN@Z	; Aircraft::AirFrame::setRightWhlComp
PUBLIC	?setLeftWhlComp@AirFrame@Aircraft@@QEAAXN@Z	; Aircraft::AirFrame::setLeftWhlComp
PUBLIC	?setNoseWhlGS@AirFrame@Aircraft@@QEAAXN@Z	; Aircraft::AirFrame::setNoseWhlGS
PUBLIC	?getNoseWhlAng@AirFrame@Aircraft@@QEBANXZ	; Aircraft::AirFrame::getNoseWhlAng
PUBLIC	?setNoseWhlForce@AirFrame@Aircraft@@QEAAXAEBUForce@@@Z ; Aircraft::AirFrame::setNoseWhlForce
PUBLIC	?setLeftWhlArg@AirFrame@Aircraft@@QEAAXN@Z	; Aircraft::AirFrame::setLeftWhlArg
PUBLIC	?setRightWhlArg@AirFrame@Aircraft@@QEAAXN@Z	; Aircraft::AirFrame::setRightWhlArg
PUBLIC	?calWhlArgChange@AirFrame@Aircraft@@SANNN@Z	; Aircraft::AirFrame::calWhlArgChange
PUBLIC	?getNoseGrPos@AirFrame@Aircraft@@QEBANXZ	; Aircraft::AirFrame::getNoseGrPos
PUBLIC	?getLeftGrPos@AirFrame@Aircraft@@QEBANXZ	; Aircraft::AirFrame::getLeftGrPos
PUBLIC	?updateWheels@AirFrame@Aircraft@@QEAAXN@Z	; Aircraft::AirFrame::updateWheels
PUBLIC	?simulate@AirFrame@Aircraft@@QEAAXNNNNNNNNN@Z	; Aircraft::AirFrame::simulate
PUBLIC	?getRightFlpPos@AirFrame@Aircraft@@QEBANXZ	; Aircraft::AirFrame::getRightFlpPos
PUBLIC	?getLeftFlpPos@AirFrame@Aircraft@@QEBANXZ	; Aircraft::AirFrame::getLeftFlpPos
PUBLIC	?getRightSltPos@AirFrame@Aircraft@@QEBANXZ	; Aircraft::AirFrame::getRightSltPos
PUBLIC	?getLeftSltPos@AirFrame@Aircraft@@QEBANXZ	; Aircraft::AirFrame::getLeftSltPos
PUBLIC	?getStabAnim@AirFrame@Aircraft@@QEBANXZ		; Aircraft::AirFrame::getStabAnim
PUBLIC	?getRudderPos@AirFrame@Aircraft@@QEBANXZ	; Aircraft::AirFrame::getRudderPos
PUBLIC	?getRightElePos@AirFrame@Aircraft@@QEBANXZ	; Aircraft::AirFrame::getRightElePos
PUBLIC	?getLeftElePos@AirFrame@Aircraft@@QEBANXZ	; Aircraft::AirFrame::getLeftElePos
PUBLIC	?getRightAlrnPos@AirFrame@Aircraft@@QEBANXZ	; Aircraft::AirFrame::getRightAlrnPos
PUBLIC	?getLeftAlrnPos@AirFrame@Aircraft@@QEBANXZ	; Aircraft::AirFrame::getLeftAlrnPos
PUBLIC	?updateActRudder@AirFrame@Aircraft@@QEAAXNNNN@Z	; Aircraft::AirFrame::updateActRudder
PUBLIC	?updateActLeftAlrn@AirFrame@Aircraft@@QEAAXNNN@Z ; Aircraft::AirFrame::updateActLeftAlrn
PUBLIC	?getSpdBrkPos@AirFrame@Aircraft@@QEBANXZ	; Aircraft::AirFrame::getSpdBrkPos
PUBLIC	?updateStabilizer@AirFrame@Aircraft@@QEAAXNN@Z	; Aircraft::AirFrame::updateStabilizer
PUBLIC	?updateActEle@AirFrame@Aircraft@@QEAAXNNN@Z	; Aircraft::AirFrame::updateActEle
PUBLIC	??1AirFrame@Aircraft@@QEAA@XZ			; Aircraft::AirFrame::~AirFrame
PUBLIC	??0AirFrame@Aircraft@@QEAA@XZ			; Aircraft::AirFrame::AirFrame
PUBLIC	?physicsUpdate@Actuator@Aircraft@@QEAAXN@Z	; Aircraft::Actuator::physicsUpdate
PUBLIC	?inputUpdate@Actuator@Aircraft@@QEAANNN@Z	; Aircraft::Actuator::inputUpdate
PUBLIC	?setActuatorFactor@Actuator@Aircraft@@QEAAXN@Z	; Aircraft::Actuator::setActuatorFactor
PUBLIC	??1Actuator@Aircraft@@QEAA@XZ			; Aircraft::Actuator::~Actuator
PUBLIC	??0Actuator@Aircraft@@QEAA@XZ			; Aircraft::Actuator::Actuator
PUBLIC	?getRPMNorm@Engine@Aircraft@@QEAANXZ		; Aircraft::Engine::getRPMNorm
PUBLIC	?getRPM@Engine@Aircraft@@QEAANN@Z		; Aircraft::Engine::getRPM
PUBLIC	?setPos@Engine@Aircraft@@QEAAXAEAUVec3@@@Z	; Aircraft::Engine::setPos
PUBLIC	?getThrust@Engine@Aircraft@@QEAA?AUForce@@N@Z	; Aircraft::Engine::getThrust
PUBLIC	??1Engine@Aircraft@@QEAA@XZ			; Aircraft::Engine::~Engine
PUBLIC	??0Engine@Aircraft@@QEAA@XZ			; Aircraft::Engine::Engine
PUBLIC	?getFuelQtyDelta@FuelSys@Aircraft@@QEBANXZ	; Aircraft::FuelSys::getFuelQtyDelta
PUBLIC	?simulate@FuelSys@Aircraft@@QEAAXNN@Z		; Aircraft::FuelSys::simulate
PUBLIC	?getFuelFlow@FuelSys@Aircraft@@QEAANXZ		; Aircraft::FuelSys::getFuelFlow
PUBLIC	?getInternalFuel@FuelSys@Aircraft@@QEAANXZ	; Aircraft::FuelSys::getInternalFuel
PUBLIC	?setInternalFuel@FuelSys@Aircraft@@QEAAXN@Z	; Aircraft::FuelSys::setInternalFuel
PUBLIC	?setPreInterFuel@FuelSys@Aircraft@@QEAAXXZ	; Aircraft::FuelSys::setPreInterFuel
PUBLIC	?getPos@FuelSys@Aircraft@@QEBA?AUVec3@@XZ	; Aircraft::FuelSys::getPos
PUBLIC	??1FuelSys@Aircraft@@QEAA@XZ			; Aircraft::FuelSys::~FuelSys
PUBLIC	??0FuelSys@Aircraft@@QEAA@XZ			; Aircraft::FuelSys::FuelSys
PUBLIC	?getRudderForce@AeroModel@Aircraft@@QEAA?AUForce@@NN@Z ; Aircraft::AeroModel::getRudderForce
PUBLIC	?getRightEleForce@AeroModel@Aircraft@@QEAA?AUForce@@NN@Z ; Aircraft::AeroModel::getRightEleForce
PUBLIC	?getLeftEleForce@AeroModel@Aircraft@@QEAA?AUForce@@NN@Z ; Aircraft::AeroModel::getLeftEleForce
PUBLIC	?getRightAlrnForce@AeroModel@Aircraft@@QEAA?AUForce@@NN@Z ; Aircraft::AeroModel::getRightAlrnForce
PUBLIC	?getLeftAlrnForce@AeroModel@Aircraft@@QEAA?AUForce@@NN@Z ; Aircraft::AeroModel::getLeftAlrnForce
PUBLIC	?calCx@AeroModel@Aircraft@@AEAAXXZ		; Aircraft::AeroModel::calCx
PUBLIC	?calCy@AeroModel@Aircraft@@AEAAXN@Z		; Aircraft::AeroModel::calCy
PUBLIC	?calAeroCoeffs@AeroModel@Aircraft@@AEAAXNN@Z	; Aircraft::AeroModel::calAeroCoeffs
PUBLIC	?getAeroForce@AeroModel@Aircraft@@QEAA?AUForce@@NNN@Z ; Aircraft::AeroModel::getAeroForce
PUBLIC	??1AeroModel@Aircraft@@QEAA@XZ			; Aircraft::AeroModel::~AeroModel
PUBLIC	??0AeroModel@Aircraft@@QEAA@XZ			; Aircraft::AeroModel::AeroModel
PUBLIC	?getMach@@YANN@Z				; getMach
PUBLIC	?abs@@YANN@Z					; abs
PUBLIC	sprintf_s
PUBLIC	_vsprintf_s_l
PUBLIC	printf
PUBLIC	fprintf
PUBLIC	_vfprintf_l
PUBLIC	__local_stdio_printf_options
PUBLIC	?lerp@@YANPEAN0IN@Z				; lerp
PUBLIC	??0Force@@QEAA@XZ				; Force::Force
PUBLIC	??0Force@@QEAA@AEBUVec3@@0@Z			; Force::Force
PUBLIC	?magnitude@@YANAEBUVec3@@@Z			; magnitude
PUBLIC	?dot@@YANAEBUVec3@@0@Z				; dot
PUBLIC	?cross@@YA?AUVec3@@AEBU1@0@Z			; cross
PUBLIC	??GVec3@@QEBA?AU0@AEBU0@@Z			; Vec3::operator-
PUBLIC	??HVec3@@QEBA?AU0@AEBU0@@Z			; Vec3::operator+
PUBLIC	??GVec3@@QEBA?AU0@XZ				; Vec3::operator-
PUBLIC	??0Vec3@@QEAA@N@Z				; Vec3::Vec3
PUBLIC	??0Vec3@@QEAA@NNN@Z				; Vec3::Vec3
PUBLIC	??0Vec3@@QEAA@XZ				; Vec3::Vec3
PUBLIC	__real@3fa999999999999a
PUBLIC	__real@3fb999999999999a
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3ff9218202ae3da8
PUBLIC	__real@4008000000000000
PUBLIC	__real@400921fb54442eea
PUBLIC	__real@400e9c96fba0df07
PUBLIC	__real@4028800000000000
PUBLIC	__real@4037000000000000
PUBLIC	__real@404ca66666666666
PUBLIC	__real@4062c00000000000
PUBLIC	__real@4066800000000000
PUBLIC	__real@4074000000000000
PUBLIC	__real@4082c00000000000
PUBLIC	__real@408f400000000000
PUBLIC	__real@40a7700000000000
PUBLIC	__real@40c9640000000000
PUBLIC	__real@bff0000000000000
PUBLIC	__real@c02a800000000000
PUBLIC	__xmm@0000000000000000c020000000000000
PUBLIC	__xmm@7fffffffffffffff7fffffffffffffff
PUBLIC	__xmm@80000000000000008000000000000000
EXTRN	__GSHandlerCheck:PROC
EXTRN	pow:PROC
EXTRN	sqrt:PROC
EXTRN	__ImageBase:BYTE
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
?world@@3PEAVWorld@Aircraft@@EA DQ 01H DUP (?)		; world
?state@@3PEAVState@Aircraft@@EA DQ 01H DUP (?)		; state
?aeroModel@@3PEAVAeroModel@Aircraft@@EA DQ 01H DUP (?)	; aeroModel
?fuelSys@@3PEAVFuelSys@Aircraft@@EA DQ 01H DUP (?)	; fuelSys
?engineL@@3PEAVEngine@Aircraft@@EA DQ 01H DUP (?)	; engineL
?engineR@@3PEAVEngine@Aircraft@@EA DQ 01H DUP (?)	; engineR
?input@@3PEAVInput@Aircraft@@EA DQ 01H DUP (?)		; input
?airFrame@@3PEAVAirFrame@Aircraft@@EA DQ 01H DUP (?)	; airFrame
?window@@3PEAUHWND__@@EA DQ 01H DUP (?)			; window
?aircraftInited@@3_NA DB 01H DUP (?)			; aircraftInited
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$ed_fm_set_surface DD imagerel $LN10
	DD	imagerel $LN10+114
	DD	imagerel $unwind$ed_fm_set_surface
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$ed_fm_suspension_feedback DD imagerel $LN16
	DD	imagerel $LN16+204
	DD	imagerel $unwind$ed_fm_suspension_feedback
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$ed_fm_release DD imagerel $LN50
	DD	imagerel $LN50+338
	DD	imagerel $unwind$ed_fm_release
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$ed_fm_set_plugin_data_install_path DD imagerel $LN7
	DD	imagerel $LN7+212
	DD	imagerel $unwind$ed_fm_set_plugin_data_install_path
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$ed_fm_change_mass DD imagerel $LN10
	DD	imagerel $LN10+69
	DD	imagerel $unwind$ed_fm_change_mass
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$ed_fm_set_current_state_body_axis DD imagerel $LN30
	DD	imagerel $LN30+190
	DD	imagerel $unwind$ed_fm_set_current_state_body_axis
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$ed_fm_set_current_state DD imagerel $LN24
	DD	imagerel $LN24+348
	DD	imagerel $unwind$ed_fm_set_current_state
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$ed_fm_set_current_mass_state DD imagerel $LN8
	DD	imagerel $LN8+46
	DD	imagerel $unwind$ed_fm_set_current_mass_state
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$ed_fm_simulate DD imagerel $LN85
	DD	imagerel $LN85+874
	DD	imagerel $unwind$ed_fm_simulate
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$ed_fm_add_local_moment DD imagerel $LN10
	DD	imagerel $LN10+52
	DD	imagerel $unwind$ed_fm_add_local_moment
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$ed_fm_add_local_force DD imagerel $LN16
	DD	imagerel $LN16+104
	DD	imagerel $unwind$ed_fm_add_local_force
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GAirFrame@Aircraft@@QEAAPEAXI@Z DD imagerel $LN6
	DD	imagerel $LN6+28
	DD	imagerel $unwind$??_GAirFrame@Aircraft@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GInput@Aircraft@@QEAAPEAXI@Z DD imagerel $LN6
	DD	imagerel $LN6+28
	DD	imagerel $unwind$??_GInput@Aircraft@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GEngine@Aircraft@@QEAAPEAXI@Z DD imagerel $LN6
	DD	imagerel $LN6+28
	DD	imagerel $unwind$??_GEngine@Aircraft@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GFuelSys@Aircraft@@QEAAPEAXI@Z DD imagerel $LN6
	DD	imagerel $LN6+28
	DD	imagerel $unwind$??_GFuelSys@Aircraft@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GAeroModel@Aircraft@@QEAAPEAXI@Z DD imagerel $LN6
	DD	imagerel $LN6+28
	DD	imagerel $unwind$??_GAeroModel@Aircraft@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GState@Aircraft@@QEAAPEAXI@Z DD imagerel $LN6
	DD	imagerel $LN6+28
	DD	imagerel $unwind$??_GState@Aircraft@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GWorld@Aircraft@@QEAAPEAXI@Z DD imagerel $LN6
	DD	imagerel $LN6+28
	DD	imagerel $unwind$??_GWorld@Aircraft@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?cleanup@@YAXXZ DD imagerel $LN45
	DD	imagerel $LN45+250
	DD	imagerel $unwind$?cleanup@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?init@@YAXXZ DD imagerel $LN133
	DD	imagerel $LN133+1627
	DD	imagerel $unwind$?init@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resetForce@State@Aircraft@@QEAAXXZ DD imagerel $LN8
	DD	imagerel $LN8+52
	DD	imagerel $unwind$?resetForce@State@Aircraft@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?addForce@State@Aircraft@@QEAAXAEBUForce@@@Z DD imagerel $LN20
	DD	imagerel $LN20+255
	DD	imagerel $unwind$?addForce@State@Aircraft@@QEAAXAEBUForce@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?updateWheels@AirFrame@Aircraft@@QEAAXN@Z DD imagerel $LN41
	DD	imagerel $LN41+523
	DD	imagerel $unwind$?updateWheels@AirFrame@Aircraft@@QEAAXN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?simulate@AirFrame@Aircraft@@QEAAXNNNNNNNNN@Z DD imagerel $LN61
	DD	imagerel $LN61+684
	DD	imagerel $unwind$?simulate@AirFrame@Aircraft@@QEAAXNNNNNNNNN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?updateActRudder@AirFrame@Aircraft@@QEAAXNNNN@Z DD imagerel $LN4
	DD	imagerel $LN4+38
	DD	imagerel $unwind$?updateActRudder@AirFrame@Aircraft@@QEAAXNNNN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?updateActLeftAlrn@AirFrame@Aircraft@@QEAAXNNN@Z DD imagerel $LN4
	DD	imagerel $LN4+32
	DD	imagerel $unwind$?updateActLeftAlrn@AirFrame@Aircraft@@QEAAXNNN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?updateActEle@AirFrame@Aircraft@@QEAAXNNN@Z DD imagerel $LN13
	DD	imagerel $LN13+68
	DD	imagerel $unwind$?updateActEle@AirFrame@Aircraft@@QEAAXNNN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?physicsUpdate@Actuator@Aircraft@@QEAAXN@Z DD imagerel $LN22
	DD	imagerel $LN22+220
	DD	imagerel $unwind$?physicsUpdate@Actuator@Aircraft@@QEAAXN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?inputUpdate@Actuator@Aircraft@@QEAANNN@Z DD imagerel $LN24
	DD	imagerel $LN24+229
	DD	imagerel $unwind$?inputUpdate@Actuator@Aircraft@@QEAANNN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?calAeroCoeffs@AeroModel@Aircraft@@AEAAXNN@Z DD imagerel $LN70
	DD	imagerel $LN70+864
	DD	imagerel $unwind$?calAeroCoeffs@AeroModel@Aircraft@@AEAAXNN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getAeroForce@AeroModel@Aircraft@@QEAA?AUForce@@NNN@Z DD imagerel $LN8
	DD	imagerel $LN8+70
	DD	imagerel $unwind$?getAeroForce@AeroModel@Aircraft@@QEAA?AUForce@@NNN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$sprintf_s DD imagerel $LN6
	DD	imagerel $LN6+88
	DD	imagerel $unwind$sprintf_s
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsprintf_s_l DD imagerel $LN4
	DD	imagerel $LN4+92
	DD	imagerel $unwind$_vsprintf_s_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$printf DD imagerel $LN6
	DD	imagerel $LN6+82
	DD	imagerel $unwind$printf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$fprintf DD imagerel $LN6
	DD	imagerel $LN6+69
	DD	imagerel $unwind$fprintf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vfprintf_l DD imagerel $LN4
	DD	imagerel $LN4+68
	DD	imagerel $unwind$_vfprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?lerp@@YANPEAN0IN@Z DD imagerel $LN14
	DD	imagerel $LN14+163
	DD	imagerel $unwind$?lerp@@YANPEAN0IN@Z
;	COMDAT __xmm@80000000000000008000000000000000
CONST	SEGMENT
__xmm@80000000000000008000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@7fffffffffffffff7fffffffffffffff
CONST	SEGMENT
__xmm@7fffffffffffffff7fffffffffffffff DB 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH
	DB	0ffH, 07fH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 07fH
CONST	ENDS
;	COMDAT __xmm@0000000000000000c020000000000000
CONST	SEGMENT
__xmm@0000000000000000c020000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, ' '
	DB	0c0H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __real@c02a800000000000
CONST	SEGMENT
__real@c02a800000000000 DQ 0c02a800000000000r	; -13.25
CONST	ENDS
;	COMDAT __real@bff0000000000000
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
CONST	ENDS
;	COMDAT __real@40c9640000000000
CONST	SEGMENT
__real@40c9640000000000 DQ 040c9640000000000r	; 13000
CONST	ENDS
;	COMDAT __real@40a7700000000000
CONST	SEGMENT
__real@40a7700000000000 DQ 040a7700000000000r	; 3000
CONST	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT __real@4082c00000000000
CONST	SEGMENT
__real@4082c00000000000 DQ 04082c00000000000r	; 600
CONST	ENDS
;	COMDAT __real@4074000000000000
CONST	SEGMENT
__real@4074000000000000 DQ 04074000000000000r	; 320
CONST	ENDS
;	COMDAT __real@4066800000000000
CONST	SEGMENT
__real@4066800000000000 DQ 04066800000000000r	; 180
CONST	ENDS
;	COMDAT __real@4062c00000000000
CONST	SEGMENT
__real@4062c00000000000 DQ 04062c00000000000r	; 150
CONST	ENDS
;	COMDAT __real@404ca66666666666
CONST	SEGMENT
__real@404ca66666666666 DQ 0404ca66666666666r	; 57.3
CONST	ENDS
;	COMDAT __real@4037000000000000
CONST	SEGMENT
__real@4037000000000000 DQ 04037000000000000r	; 23
CONST	ENDS
;	COMDAT __real@4028800000000000
CONST	SEGMENT
__real@4028800000000000 DQ 04028800000000000r	; 12.25
CONST	ENDS
;	COMDAT __real@400e9c96fba0df07
CONST	SEGMENT
__real@400e9c96fba0df07 DQ 0400e9c96fba0df07r	; 3.82646
CONST	ENDS
;	COMDAT __real@400921fb54442eea
CONST	SEGMENT
__real@400921fb54442eea DQ 0400921fb54442eear	; 3.14159
CONST	ENDS
;	COMDAT __real@4008000000000000
CONST	SEGMENT
__real@4008000000000000 DQ 04008000000000000r	; 3
CONST	ENDS
;	COMDAT __real@3ff9218202ae3da8
CONST	SEGMENT
__real@3ff9218202ae3da8 DQ 03ff9218202ae3da8r	; 1.57068
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fb999999999999a
CONST	SEGMENT
__real@3fb999999999999a DQ 03fb999999999999ar	; 0.1
CONST	ENDS
;	COMDAT __real@3fa999999999999a
CONST	SEGMENT
__real@3fa999999999999a DQ 03fa999999999999ar	; 0.05
?MATCH_TABLE@@3PANA DQ 00000000000000000r	; 0	; MATCH_TABLE
	DQ	03fc999999999999ar		; 0.2
	DQ	03fd999999999999ar		; 0.4
	DQ	03fe3333333333333r		; 0.6
	DQ	03fe6666666666666r		; 0.7
	DQ	03fe999999999999ar		; 0.8
	DQ	03feccccccccccccdr		; 0.9
	DQ	03ff0000000000000r		; 1
	DQ	03ff0cccccccccccdr		; 1.05
	DQ	03ff199999999999ar		; 1.1
	DQ	03ff3333333333333r		; 1.2
	DQ	03ff4cccccccccccdr		; 1.3
	DQ	03ff8000000000000r		; 1.5
	DQ	03ffb333333333333r		; 1.7
	DQ	03ffccccccccccccdr		; 1.8
	DQ	04000000000000000r		; 2
	DQ	0400199999999999ar		; 2.2
	DQ	04004000000000000r		; 2.5
	DQ	0400f333333333333r		; 3.9
	ORG $+8
?CX0@@3PANA DQ	03f90e5604189374cr		; 0.0165 ; CX0
	DQ	03f90e5604189374cr		; 0.0165
	DQ	03f90e5604189374cr		; 0.0165
	DQ	03f90e5604189374cr		; 0.0165
	DQ	03f916872b020c49cr		; 0.017
	DQ	03f923a29c779a6b5r		; 0.0178
	DQ	03f9604189374bc6ar		; 0.0215
	DQ	03f9fbe76c8b43958r		; 0.031
	DQ	03fa59b3d07c84b5er		; 0.0422
	DQ	03fa6872b020c49bar		; 0.044
	DQ	03fa61e4f765fd8aer		; 0.0432
	DQ	03fa5a858793dd97fr		; 0.0423
	DQ	03fa54c985f06f694r		; 0.0416
	DQ	03fa54c985f06f694r		; 0.0416
	DQ	03fa54c985f06f694r		; 0.0416
	DQ	03fa4fdf3b645a1cbr		; 0.041
	DQ	03fa4395810624dd3r		; 0.0395
	ORG $+8
?CYA@@3PANA DQ	03fb3b645a1cac083r		; 0.077	; CYA
	DQ	03fb3b645a1cac083r		; 0.077
	DQ	03fb3b645a1cac083r		; 0.077
	DQ	03fb47ae147ae147br		; 0.08
	DQ	03fb53f7ced916873r		; 0.083
	DQ	03fb645a1cac08312r		; 0.087
	DQ	03fb74bc6a7ef9db2r		; 0.091
	DQ	03fb810624dd2f1aar		; 0.094
	DQ	03fb810624dd2f1aar		; 0.094
	DQ	03fb74bc6a7ef9db2r		; 0.091
	DQ	03fb5c28f5c28f5c3r		; 0.085
	DQ	03fb16872b020c49cr		; 0.068
	DQ	03faa1cac083126e9r		; 0.051
	DQ	03fa604189374bc6ar		; 0.043
	DQ	03fa2f1a9fbe76c8br		; 0.037
	DQ	03fa26e978d4fdf3br		; 0.036
	DQ	03fa0e5604189374cr		; 0.033
	ORG $+8
?B@@3PANA DQ	03fb999999999999ar		; 0.1	; B
	DQ	03fb999999999999ar		; 0.1
	DQ	03fb999999999999ar		; 0.1
	DQ	03fb810624dd2f1aar		; 0.094
	DQ	03fb810624dd2f1aar		; 0.094
	DQ	03fb810624dd2f1aar		; 0.094
	DQ	03fbc28f5c28f5c29r		; 0.11
	DQ	03fc3333333333333r		; 0.15
	DQ	03fc3333333333333r		; 0.15
	DQ	03fc1eb851eb851ecr		; 0.14
	DQ	03fc5c28f5c28f5c3r		; 0.17
	DQ	03fcd70a3d70a3d71r		; 0.23
	DQ	03fcd70a3d70a3d71r		; 0.23
	DQ	03fb47ae147ae147br		; 0.08
	DQ	03fc47ae147ae147br		; 0.16
	DQ	03fd0000000000000r		; 0.25
	DQ	03fd6666666666666r		; 0.35
	ORG $+8
?B4@@3PANA DQ	03fa0624dd2f1a9fcr		; 0.032	; B4
	DQ	03fa0624dd2f1a9fcr		; 0.032
	DQ	03fa0624dd2f1a9fcr		; 0.032
	DQ	03fa604189374bc6ar		; 0.043
	DQ	03fa70a3d70a3d70ar		; 0.045
	DQ	03fa89374bc6a7efar		; 0.048
	DQ	03fa999999999999ar		; 0.05
	DQ	03fb999999999999ar		; 0.1
	DQ	03fb999999999999ar		; 0.1
	DQ	03fb999999999999ar		; 0.1
	DQ	03fb89374bc6a7efar		; 0.096
	DQ	03fb70a3d70a3d70ar		; 0.09
	DQ	03fd851eb851eb852r		; 0.38
	DQ	04004000000000000r		; 2.5
	DQ	0400999999999999ar		; 3.2
	DQ	04012000000000000r		; 4.5
	DQ	04018000000000000r		; 6
	ORG $+8
?CY_MAX@@3PANA DQ 03ff999999999999ar		; 1.6	; CY_MAX
	DQ	03ff999999999999ar		; 1.6
	DQ	03ff999999999999ar		; 1.6
	DQ	03ff8000000000000r		; 1.5
	DQ	03ff7333333333333r		; 1.45
	DQ	03ff6666666666666r		; 1.4
	DQ	03ff4cccccccccccdr		; 1.3
	DQ	03ff3333333333333r		; 1.2
	DQ	03ff199999999999ar		; 1.1
	DQ	03ff0cccccccccccdr		; 1.05
	DQ	03ff0000000000000r		; 1
	DQ	03feccccccccccccdr		; 0.9
	DQ	03fe6666666666666r		; 0.7
	DQ	03fe199999999999ar		; 0.55
	DQ	03fd999999999999ar		; 0.4
	DQ	03fd999999999999ar		; 0.4
	DQ	03fd999999999999ar		; 0.4
_DATA	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?lerp@@YANPEAN0IN@Z DD 030f01H
	DD	0680fH
	DD	02204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vfprintf_l DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$fprintf DD 041601H
	DD	070125216H
	DD	030106011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$printf DD 031a01H
	DD	07016621aH
	DD	03015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsprintf_s_l DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sprintf_s DD 051201H
	DD	0700e6212H
	DD	0500c600dH
	DD	0300bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getAeroForce@AeroModel@Aircraft@@QEAA?AUForce@@NNN@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?calAeroCoeffs@AeroModel@Aircraft@@AEAAXNN@Z DD 0b2e01H
	DD	0a82eH
	DD	019826H
	DD	02881eH
	DD	037815H
	DD	046809H
	DD	0a204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?inputUpdate@Actuator@Aircraft@@QEAANNN@Z DD 083b01H
	DD	02883bH
	DD	037835H
	DD	046824H
	DD	03007920bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?physicsUpdate@Actuator@Aircraft@@QEAAXN@Z DD 083601H
	DD	028836H
	DD	037830H
	DD	04681fH
	DD	030029206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?updateActEle@AirFrame@Aircraft@@QEAAXNNN@Z DD 040e01H
	DD	02680eH
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?updateActLeftAlrn@AirFrame@Aircraft@@QEAAXNNN@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?updateActRudder@AirFrame@Aircraft@@QEAAXNNNN@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?simulate@AirFrame@Aircraft@@QEAAXNNNNNNNNN@Z DD 0c6101H
	DD	02a861H
	DD	03984bH
	DD	04882aH
	DD	057825H
	DD	066821H
	DD	03012d216H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?updateWheels@AirFrame@Aircraft@@QEAAXN@Z DD 0c5201H
	DD	02a852H
	DD	03983fH
	DD	048830H
	DD	057826H
	DD	06681eH
	DD	03002d206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?addForce@State@Aircraft@@QEAAXAEBUForce@@@Z DD 074101H
	DD	028841H
	DD	037819H
	DD	046814H
	DD	0a204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resetForce@State@Aircraft@@QEAAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?init@@YAXXZ DD 040a01H
	DD	0b340aH
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?cleanup@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GWorld@Aircraft@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GState@Aircraft@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GAeroModel@Aircraft@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GFuelSys@Aircraft@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GEngine@Aircraft@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GInput@Aircraft@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GAirFrame@Aircraft@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ed_fm_add_local_force DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ed_fm_add_local_moment DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ed_fm_simulate DD 0f3801H
	DD	01fa838H
	DD	020982fH
	DD	021882aH
	DD	0227825H
	DD	0236821H
	DD	04a3416H
	DD	0480116H
	DD	05008H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ed_fm_set_current_mass_state DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ed_fm_set_current_state DD 0b8f01H
	DD	02a88fH
	DD	039865H
	DD	048841H
	DD	05783bH
	DD	066836H
	DD	0e204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ed_fm_set_current_state_body_axis DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ed_fm_change_mass DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ed_fm_set_plugin_data_install_path DD 021919H
	DD	0210107H
	DD	imagerel __GSHandlerCheck
	DD	0f0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ed_fm_release DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ed_fm_suspension_feedback DD 010401H
	DD	0e204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ed_fm_set_surface DD 051501H
	DD	047815H
	DD	056809H
	DD	0c204H
xdata	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
;	COMDAT ??0Vec3@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0Vec3@@QEAA@XZ PROC					; Vec3::Vec3, COMDAT

; 19   : 	Vec3() : x(0.0), y(0.0), z(0.0) {}

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax
  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??0Vec3@@QEAA@XZ ENDP					; Vec3::Vec3
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
;	COMDAT ??0Vec3@@QEAA@NNN@Z
_TEXT	SEGMENT
this$ = 8
x_$ = 16
y_$ = 24
z_$ = 32
??0Vec3@@QEAA@NNN@Z PROC				; Vec3::Vec3, COMDAT

; 20   : 	Vec3(double x_, double y_, double z_) :x(x_), y(y_), z(z_) {}

  00000	f2 0f 11 09	 movsd	 QWORD PTR [rcx], xmm1
  00004	48 8b c1	 mov	 rax, rcx
  00007	f2 0f 11 51 08	 movsd	 QWORD PTR [rcx+8], xmm2
  0000c	f2 0f 11 59 10	 movsd	 QWORD PTR [rcx+16], xmm3
  00011	c3		 ret	 0
??0Vec3@@QEAA@NNN@Z ENDP				; Vec3::Vec3
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
;	COMDAT ??0Vec3@@QEAA@N@Z
_TEXT	SEGMENT
this$ = 8
v$ = 16
??0Vec3@@QEAA@N@Z PROC					; Vec3::Vec3, COMDAT

; 21   : 	Vec3(double v) : x(v), y(v), z(v) {}

  00000	66 0f 14 c9	 unpcklpd xmm1, xmm1
  00004	48 8b c1	 mov	 rax, rcx
  00007	f2 0f 11 49 10	 movsd	 QWORD PTR [rcx+16], xmm1
  0000c	0f 11 09	 movups	 XMMWORD PTR [rcx], xmm1
  0000f	c3		 ret	 0
??0Vec3@@QEAA@N@Z ENDP					; Vec3::Vec3
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
;	COMDAT ??GVec3@@QEBA?AU0@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
??GVec3@@QEBA?AU0@XZ PROC				; Vec3::operator-, COMDAT

; 29   : 		Vec3 result;
; 30   : 		result.x = -this->x;

  00000	0f 28 15 00 00
	00 00		 movaps	 xmm2, XMMWORD PTR __xmm@80000000000000008000000000000000

; 31   : 		result.y = -this->y;
; 32   : 		result.z = -this->z;
; 33   : 		return result;

  00007	48 8b c2	 mov	 rax, rdx
  0000a	0f 10 01	 movups	 xmm0, XMMWORD PTR [rcx]
  0000d	f2 0f 10 49 10	 movsd	 xmm1, QWORD PTR [rcx+16]
  00012	0f 57 c2	 xorps	 xmm0, xmm2
  00015	0f 57 ca	 xorps	 xmm1, xmm2
  00018	0f 11 02	 movups	 XMMWORD PTR [rdx], xmm0
  0001b	f2 0f 11 4a 10	 movsd	 QWORD PTR [rdx+16], xmm1

; 34   : 	}

  00020	c3		 ret	 0
??GVec3@@QEBA?AU0@XZ ENDP				; Vec3::operator-
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
;	COMDAT ??HVec3@@QEBA?AU0@AEBU0@@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
v$ = 24
??HVec3@@QEBA?AU0@AEBU0@@Z PROC				; Vec3::operator+, COMDAT

; 75   : 		Vec3 result;
; 76   : 		result.x = this->x + v.x;

  00000	f2 41 0f 10 00	 movsd	 xmm0, QWORD PTR [r8]

; 77   : 		result.y = this->y + v.y;
; 78   : 		result.z = this->z + v.z;
; 79   : 		return result;

  00005	48 8b c2	 mov	 rax, rdx
  00008	f2 0f 58 01	 addsd	 xmm0, QWORD PTR [rcx]
  0000c	f2 41 0f 10 48
	08		 movsd	 xmm1, QWORD PTR [r8+8]
  00012	f2 0f 58 49 08	 addsd	 xmm1, QWORD PTR [rcx+8]
  00017	f2 0f 11 02	 movsd	 QWORD PTR [rdx], xmm0
  0001b	f2 41 0f 10 40
	10		 movsd	 xmm0, QWORD PTR [r8+16]
  00021	f2 0f 58 41 10	 addsd	 xmm0, QWORD PTR [rcx+16]
  00026	f2 0f 11 4a 08	 movsd	 QWORD PTR [rdx+8], xmm1
  0002b	f2 0f 11 42 10	 movsd	 QWORD PTR [rdx+16], xmm0

; 80   : 	}

  00030	c3		 ret	 0
??HVec3@@QEBA?AU0@AEBU0@@Z ENDP				; Vec3::operator+
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
;	COMDAT ??GVec3@@QEBA?AU0@AEBU0@@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
v$ = 24
??GVec3@@QEBA?AU0@AEBU0@@Z PROC				; Vec3::operator-, COMDAT

; 85   : 		Vec3 result;
; 86   : 		result.x = this->x - v.x;

  00000	f2 0f 10 01	 movsd	 xmm0, QWORD PTR [rcx]

; 87   : 		result.y = this->y - v.y;
; 88   : 		result.z = this->z - v.z;
; 89   : 		return result;

  00004	48 8b c2	 mov	 rax, rdx
  00007	f2 41 0f 5c 00	 subsd	 xmm0, QWORD PTR [r8]
  0000c	f2 0f 10 49 08	 movsd	 xmm1, QWORD PTR [rcx+8]
  00011	f2 41 0f 5c 48
	08		 subsd	 xmm1, QWORD PTR [r8+8]
  00017	f2 0f 11 02	 movsd	 QWORD PTR [rdx], xmm0
  0001b	f2 0f 10 41 10	 movsd	 xmm0, QWORD PTR [rcx+16]
  00020	f2 41 0f 5c 40
	10		 subsd	 xmm0, QWORD PTR [r8+16]
  00026	f2 0f 11 4a 08	 movsd	 QWORD PTR [rdx+8], xmm1
  0002b	f2 0f 11 42 10	 movsd	 QWORD PTR [rdx+16], xmm0

; 90   : 	}

  00030	c3		 ret	 0
??GVec3@@QEBA?AU0@AEBU0@@Z ENDP				; Vec3::operator-
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
;	COMDAT ?cross@@YA?AUVec3@@AEBU1@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
a$ = 16
b$ = 24
?cross@@YA?AUVec3@@AEBU1@0@Z PROC			; cross, COMDAT

; 140  : 	return Vec3(a.y * b.z - a.z * b.y,

  00000	f2 41 0f 10 48
	10		 movsd	 xmm1, QWORD PTR [r8+16]
  00006	48 8b c1	 mov	 rax, rcx
  00009	f2 0f 59 4a 08	 mulsd	 xmm1, QWORD PTR [rdx+8]
  0000e	f2 41 0f 10 40
	08		 movsd	 xmm0, QWORD PTR [r8+8]
  00014	f2 0f 59 42 10	 mulsd	 xmm0, QWORD PTR [rdx+16]
  00019	f2 41 0f 10 18	 movsd	 xmm3, QWORD PTR [r8]
  0001e	f2 0f 10 22	 movsd	 xmm4, QWORD PTR [rdx]
  00022	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00026	0f 28 c4	 movaps	 xmm0, xmm4
  00029	f2 41 0f 59 40
	10		 mulsd	 xmm0, QWORD PTR [r8+16]
  0002f	f2 41 0f 59 60
	08		 mulsd	 xmm4, QWORD PTR [r8+8]

; 20   : 	Vec3(double x_, double y_, double z_) :x(x_), y(y_), z(z_) {}

  00035	f2 0f 11 09	 movsd	 QWORD PTR [rcx], xmm1

; 140  : 	return Vec3(a.y * b.z - a.z * b.y,

  00039	0f 28 cb	 movaps	 xmm1, xmm3
  0003c	f2 0f 59 4a 10	 mulsd	 xmm1, QWORD PTR [rdx+16]
  00041	f2 0f 59 5a 08	 mulsd	 xmm3, QWORD PTR [rdx+8]
  00046	f2 0f 5c c8	 subsd	 xmm1, xmm0
  0004a	f2 0f 5c e3	 subsd	 xmm4, xmm3

; 20   : 	Vec3(double x_, double y_, double z_) :x(x_), y(y_), z(z_) {}

  0004e	f2 0f 11 49 08	 movsd	 QWORD PTR [rcx+8], xmm1
  00053	f2 0f 11 61 10	 movsd	 QWORD PTR [rcx+16], xmm4

; 141  : 		a.z * b.x - a.x * b.z,
; 142  : 		a.x * b.y - a.y * b.x);
; 143  : }

  00058	c3		 ret	 0
?cross@@YA?AUVec3@@AEBU1@0@Z ENDP			; cross
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
;	COMDAT ?dot@@YANAEBUVec3@@0@Z
_TEXT	SEGMENT
a$ = 8
b$ = 16
?dot@@YANAEBUVec3@@0@Z PROC				; dot, COMDAT

; 157  : 	return a.x * b.x + a.y * b.y + a.z * b.z;

  00000	f2 0f 10 41 08	 movsd	 xmm0, QWORD PTR [rcx+8]
  00005	f2 0f 59 42 08	 mulsd	 xmm0, QWORD PTR [rdx+8]
  0000a	f2 0f 10 09	 movsd	 xmm1, QWORD PTR [rcx]
  0000e	f2 0f 59 0a	 mulsd	 xmm1, QWORD PTR [rdx]
  00012	f2 0f 10 51 10	 movsd	 xmm2, QWORD PTR [rcx+16]
  00017	f2 0f 59 52 10	 mulsd	 xmm2, QWORD PTR [rdx+16]
  0001c	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00020	f2 0f 58 c2	 addsd	 xmm0, xmm2

; 158  : }

  00024	c3		 ret	 0
?dot@@YANAEBUVec3@@0@Z ENDP				; dot
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
;	COMDAT ?magnitude@@YANAEBUVec3@@@Z
_TEXT	SEGMENT
a$ = 8
?magnitude@@YANAEBUVec3@@@Z PROC			; magnitude, COMDAT

; 157  : 	return a.x * b.x + a.y * b.y + a.z * b.z;

  00000	f2 0f 10 41 08	 movsd	 xmm0, QWORD PTR [rcx+8]
  00005	f2 0f 10 11	 movsd	 xmm2, QWORD PTR [rcx]
  00009	f2 0f 10 49 10	 movsd	 xmm1, QWORD PTR [rcx+16]
  0000e	f2 0f 59 d2	 mulsd	 xmm2, xmm2
  00012	f2 0f 59 c0	 mulsd	 xmm0, xmm0
  00016	f2 0f 59 c9	 mulsd	 xmm1, xmm1
  0001a	f2 0f 58 d0	 addsd	 xmm2, xmm0
  0001e	0f 57 c0	 xorps	 xmm0, xmm0
  00021	f2 0f 58 d1	 addsd	 xmm2, xmm1

; 162  : 	return sqrt(dot(a, a));

  00025	66 0f 2e c2	 ucomisd xmm0, xmm2
  00029	77 05		 ja	 SHORT $LN5@magnitude
  0002b	66 0f 51 c2	 sqrtpd	 xmm0, xmm2

; 163  : }

  0002f	c3		 ret	 0
$LN5@magnitude:

; 162  : 	return sqrt(dot(a, a));

  00030	0f 28 c2	 movaps	 xmm0, xmm2
  00033	e9 00 00 00 00	 jmp	 sqrt
?magnitude@@YANAEBUVec3@@@Z ENDP			; magnitude
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
;	COMDAT ??0Force@@QEAA@AEBUVec3@@0@Z
_TEXT	SEGMENT
this$ = 8
force_$ = 16
pos_$ = 24
??0Force@@QEAA@AEBUVec3@@0@Z PROC			; Force::Force, COMDAT

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  00000	0f 10 02	 movups	 xmm0, XMMWORD PTR [rdx]
  00003	48 8b c1	 mov	 rax, rcx
  00006	0f 11 01	 movups	 XMMWORD PTR [rcx], xmm0
  00009	f2 0f 10 4a 10	 movsd	 xmm1, QWORD PTR [rdx+16]
  0000e	f2 0f 11 49 10	 movsd	 QWORD PTR [rcx+16], xmm1
  00013	41 0f 10 00	 movups	 xmm0, XMMWORD PTR [r8]
  00017	0f 11 41 18	 movups	 XMMWORD PTR [rcx+24], xmm0
  0001b	f2 41 0f 10 48
	10		 movsd	 xmm1, QWORD PTR [r8+16]
  00021	f2 0f 11 49 28	 movsd	 QWORD PTR [rcx+40], xmm1
  00026	c3		 ret	 0
??0Force@@QEAA@AEBUVec3@@0@Z ENDP			; Force::Force
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
;	COMDAT ??0Force@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0Force@@QEAA@XZ PROC					; Force::Force, COMDAT
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 19   : 	Vec3() : x(0.0), y(0.0), z(0.0) {}

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax
  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
  0000d	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax
  00011	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax
  00015	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 10   : 	Force() : force(), pos() {}

  00019	48 8b c1	 mov	 rax, rcx
  0001c	c3		 ret	 0
??0Force@@QEAA@XZ ENDP					; Force::Force
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\utilities.h
;	COMDAT ?lerp@@YANPEAN0IN@Z
_TEXT	SEGMENT
x$dead$ = 32
f$ = 40
sz$dead$ = 48
t$ = 56
?lerp@@YANPEAN0IN@Z PROC				; lerp, COMDAT

; 51   : {

$LN14:
  00000	48 83 ec 18	 sub	 rsp, 24

; 52   : 	for (unsigned i = 0; i < sz; i++)

  00004	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:?MATCH_TABLE@@3PANA
  0000b	0f 29 34 24	 movaps	 XMMWORD PTR [rsp], xmm6
  0000f	49 8b c1	 mov	 rax, r9
  00012	0f 28 f3	 movaps	 xmm6, xmm3
  00015	45 33 c0	 xor	 r8d, r8d
  00018	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL4@lerp:

; 53   : 	{
; 54   : 		if (t <= x[i])

  00020	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [rax]
  00024	66 0f 2f c6	 comisd	 xmm0, xmm6
  00028	73 1e		 jae	 SHORT $LN9@lerp

; 52   : 	for (unsigned i = 0; i < sz; i++)

  0002a	41 ff c0	 inc	 r8d
  0002d	48 83 c0 08	 add	 rax, 8
  00031	41 83 f8 13	 cmp	 r8d, 19
  00035	72 e9		 jb	 SHORT $LL4@lerp

; 62   : 		}
; 63   : 	}
; 64   : 	return f[sz - 1];

  00037	f2 0f 10 82 90
	00 00 00	 movsd	 xmm0, QWORD PTR [rdx+144]

; 65   : }

  0003f	0f 28 34 24	 movaps	 xmm6, XMMWORD PTR [rsp]
  00043	48 83 c4 18	 add	 rsp, 24
  00047	c3		 ret	 0
$LN9@lerp:

; 55   : 		{
; 56   : 			if (i > 0)

  00048	45 85 c0	 test	 r8d, r8d
  0004b	74 49		 je	 SHORT $LN6@lerp

; 57   : 			{
; 58   : 				return ((f[i] - f[i - 1]) / (x[i] - x[i - 1]) * t +

  0004d	f2 43 0f 10 04
	c1		 movsd	 xmm0, QWORD PTR [r9+r8*8]
  00053	41 8d 40 ff	 lea	 eax, DWORD PTR [r8-1]
  00057	f2 42 0f 10 2c
	c2		 movsd	 xmm5, QWORD PTR [rdx+r8*8]
  0005d	0f 28 d8	 movaps	 xmm3, xmm0
  00060	f2 0f 59 04 c2	 mulsd	 xmm0, QWORD PTR [rdx+rax*8]
  00065	0f 28 cd	 movaps	 xmm1, xmm5
  00068	f2 41 0f 5c 1c
	c1		 subsd	 xmm3, QWORD PTR [r9+rax*8]
  0006e	f2 0f 5c 2c c2	 subsd	 xmm5, QWORD PTR [rdx+rax*8]
  00073	f2 41 0f 59 0c
	c1		 mulsd	 xmm1, QWORD PTR [r9+rax*8]
  00079	f2 0f 5e eb	 divsd	 xmm5, xmm3
  0007d	f2 0f 5c c1	 subsd	 xmm0, xmm1
  00081	f2 0f 59 ee	 mulsd	 xmm5, xmm6
  00085	f2 0f 5e c3	 divsd	 xmm0, xmm3
  00089	f2 0f 58 c5	 addsd	 xmm0, xmm5

; 65   : }

  0008d	0f 28 34 24	 movaps	 xmm6, XMMWORD PTR [rsp]
  00091	48 83 c4 18	 add	 rsp, 24
  00095	c3		 ret	 0
$LN6@lerp:

; 59   : 					(x[i] * f[i - 1] - x[i - 1] * f[i]) / (x[i] - x[i - 1]));
; 60   : 			}
; 61   : 			return f[0];

  00096	f2 0f 10 02	 movsd	 xmm0, QWORD PTR [rdx]

; 65   : }

  0009a	0f 28 34 24	 movaps	 xmm6, XMMWORD PTR [rsp]
  0009e	48 83 c4 18	 add	 rsp, 24
  000a2	c3		 ret	 0
?lerp@@YANPEAN0IN@Z ENDP				; lerp
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT

; 91   :         static unsigned __int64 _OptionsStorage;
; 92   :         return &_OptionsStorage;

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 93   :     }

  00007	c3		 ret	 0
__local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
;	COMDAT _vfprintf_l
_TEXT	SEGMENT
_Stream$ = 64
_Format$ = 72
_Locale$dead$ = 80
_ArgList$ = 88
_vfprintf_l PROC					; COMDAT

; 644  :     {

$LN4:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	49 8b d9	 mov	 rbx, r9
  00012	48 8b fa	 mov	 rdi, rdx
  00015	48 8b f1	 mov	 rsi, rcx

; 645  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  00018	e8 00 00 00 00	 call	 __local_stdio_printf_options
  0001d	45 33 c9	 xor	 r9d, r9d
  00020	48 89 5c 24 20	 mov	 QWORD PTR [rsp+32], rbx
  00025	4c 8b c7	 mov	 r8, rdi
  00028	48 8b d6	 mov	 rdx, rsi
  0002b	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0002e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___stdio_common_vfprintf

; 646  :     }

  00034	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00039	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  0003e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
_vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
;	COMDAT fprintf
_TEXT	SEGMENT
_Stream$ = 80
_Format$ = 88
fprintf	PROC						; COMDAT

; 837  :     {

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  0000f	53		 push	 rbx
  00010	56		 push	 rsi
  00011	57		 push	 rdi
  00012	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00016	48 8b fa	 mov	 rdi, rdx

; 838  :         int _Result;
; 839  :         va_list _ArgList;
; 840  :         __crt_va_start(_ArgList, _Format);

  00019	48 8d 74 24 60	 lea	 rsi, QWORD PTR _Format$[rsp+8]
  0001e	48 8b d9	 mov	 rbx, rcx

; 645  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  00021	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00026	45 33 c9	 xor	 r9d, r9d
  00029	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  0002e	4c 8b c7	 mov	 r8, rdi
  00031	48 8b d3	 mov	 rdx, rbx
  00034	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00037	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___stdio_common_vfprintf

; 841  :         _Result = _vfprintf_l(_Stream, _Format, NULL, _ArgList);
; 842  :         __crt_va_end(_ArgList);
; 843  :         return _Result;
; 844  :     }

  0003d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00041	5f		 pop	 rdi
  00042	5e		 pop	 rsi
  00043	5b		 pop	 rbx
  00044	c3		 ret	 0
fprintf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
;	COMDAT printf
_TEXT	SEGMENT
_Format$ = 80
printf	PROC						; COMDAT

; 956  :     {

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000f	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00014	53		 push	 rbx
  00015	57		 push	 rdi
  00016	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 957  :         int _Result;
; 958  :         va_list _ArgList;
; 959  :         __crt_va_start(_ArgList, _Format);
; 960  :         _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);

  0001a	b9 01 00 00 00	 mov	 ecx, 1
  0001f	48 8d 7c 24 58	 lea	 rdi, QWORD PTR _Format$[rsp+8]
  00024	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  0002a	48 8b d8	 mov	 rbx, rax

; 645  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  0002d	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00032	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Format$[rsp]
  00037	45 33 c9	 xor	 r9d, r9d
  0003a	48 8b d3	 mov	 rdx, rbx
  0003d	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  00042	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00045	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___stdio_common_vfprintf

; 961  :         __crt_va_end(_ArgList);
; 962  :         return _Result;
; 963  :     }

  0004b	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0004f	5f		 pop	 rdi
  00050	5b		 pop	 rbx
  00051	c3		 ret	 0
printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
;	COMDAT _vsprintf_s_l
_TEXT	SEGMENT
_Buffer$ = 64
_BufferCount$ = 72
_Format$ = 80
_Locale$dead$ = 88
_ArgList$ = 96
_vsprintf_s_l PROC					; COMDAT

; 1490 :     {

$LN4:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	49 8b d8	 mov	 rbx, r8
  00012	48 8b fa	 mov	 rdi, rdx
  00015	48 8b f1	 mov	 rsi, rcx

; 1491 :         int const _Result = __stdio_common_vsprintf_s(

  00018	e8 00 00 00 00	 call	 __local_stdio_printf_options
  0001d	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _ArgList$[rsp]
  00022	4c 8b c7	 mov	 r8, rdi
  00025	4c 89 4c 24 28	 mov	 QWORD PTR [rsp+40], r9
  0002a	48 8b d6	 mov	 rdx, rsi
  0002d	4c 8b cb	 mov	 r9, rbx
  00030	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00039	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0003c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___stdio_common_vsprintf_s

; 1492 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1493 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1494 : 
; 1495 :         return _Result < 0 ? -1 : _Result;
; 1496 :     }

  00042	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00047	b9 ff ff ff ff	 mov	 ecx, -1
  0004c	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  00051	85 c0		 test	 eax, eax
  00053	0f 48 c1	 cmovs	 eax, ecx
  00056	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
_vsprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
;	COMDAT sprintf_s
_TEXT	SEGMENT
_Buffer$ = 96
_BufferCount$ = 104
_Format$ = 112
sprintf_s PROC						; COMDAT

; 1823 :         {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  0000a	53		 push	 rbx
  0000b	55		 push	 rbp
  0000c	56		 push	 rsi
  0000d	57		 push	 rdi
  0000e	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00012	49 8b f0	 mov	 rsi, r8

; 1824 :             int _Result;
; 1825 :             va_list _ArgList;
; 1826 :             __crt_va_start(_ArgList, _Format);

  00015	48 8d 6c 24 78	 lea	 rbp, QWORD PTR _Format$[rsp+8]
  0001a	48 8b da	 mov	 rbx, rdx
  0001d	48 8b f9	 mov	 rdi, rcx

; 1491 :         int const _Result = __stdio_common_vsprintf_s(

  00020	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00025	48 89 6c 24 28	 mov	 QWORD PTR [rsp+40], rbp
  0002a	4c 8b ce	 mov	 r9, rsi
  0002d	4c 8b c3	 mov	 r8, rbx
  00030	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00039	48 8b d7	 mov	 rdx, rdi
  0003c	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0003f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___stdio_common_vsprintf_s

; 1492 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1493 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1494 : 
; 1495 :         return _Result < 0 ? -1 : _Result;

  00045	85 c0		 test	 eax, eax
  00047	b9 ff ff ff ff	 mov	 ecx, -1
  0004c	0f 48 c1	 cmovs	 eax, ecx

; 1827 :             _Result = _vsprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1828 :             __crt_va_end(_ArgList);
; 1829 :             return _Result;
; 1830 :         }

  0004f	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00053	5f		 pop	 rdi
  00054	5e		 pop	 rsi
  00055	5d		 pop	 rbp
  00056	5b		 pop	 rbx
  00057	c3		 ret	 0
sprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib
;	COMDAT ?abs@@YANN@Z
_TEXT	SEGMENT
_Xx$ = 8
?abs@@YANN@Z PROC					; abs, COMDAT

; 24   :     return _CSTD fabs(_Xx);

  00000	0f 54 05 00 00
	00 00		 andps	 xmm0, QWORD PTR __xmm@7fffffffffffffff7fffffffffffffff

; 25   : }

  00007	c3		 ret	 0
?abs@@YANN@Z ENDP					; abs
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\units.h
;	COMDAT ?getMach@@YANN@Z
_TEXT	SEGMENT
speed$ = 8
?getMach@@YANN@Z PROC					; getMach, COMDAT

; 8    : 	return speed / SPEED_OF_SOUND;

  00000	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4074000000000000

; 9    : }

  00008	c3		 ret	 0
?getMach@@YANN@Z ENDP					; getMach
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
;	COMDAT ??0AeroModel@Aircraft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0AeroModel@Aircraft@@QEAA@XZ PROC			; Aircraft::AeroModel::AeroModel, COMDAT

; 18   : 		~AeroModel() {};
; 19   : 
; 20   : 		inline Vec3 getLift(double dyPre, double aoa, double mach);
; 21   : 		inline Vec3 getDrag(double dyPre, double aoa, double mach);
; 22   : 		inline Force getAeroForce(double dyPre, double aoa, double mach);
; 23   : 
; 24   : 		inline Vec3 getPos();
; 25   : 		inline double getCx();
; 26   : 		inline double getCy();
; 27   : 
; 28   : 		inline Force getLeftAlrnForce(double dyPre, double stickRoll);
; 29   : 		inline Force getRightAlrnForce(double dyPre, double stickRoll);
; 30   : 
; 31   : 		inline Force getLeftEleForce(double dyPre, double stickPitch);
; 32   : 		inline Force getRightEleForce(double dyPre, double stickPitch);
; 33   : 
; 34   : 		inline Force getRudderForce(double dyPre, double stickRaw);
; 35   : 
; 36   : 	private:
; 37   : 		inline void calAeroCoeffs(double mach, double aoa);
; 38   : 		inline void calCy(double aoa);
; 39   : 		inline void calCx();
; 40   : 		double wingArea = 29;
; 41   : 		double cyAlpha = 0;

  00000	33 d2		 xor	 edx, edx
  00002	48 b8 00 00 00
	00 00 00 3d 40	 mov	 rax, 4628855992006737920 ; 403d000000000000H
  0000c	48 89 01	 mov	 QWORD PTR [rcx], rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 21   : 	Vec3(double v) : x(v), y(v), z(v) {}

  0000f	48 b8 00 00 00
	00 00 00 14 c0	 mov	 rax, -4606056518893174784 ; c014000000000000H
  00019	48 89 41 58	 mov	 QWORD PTR [rcx+88], rax
  0001d	48 89 41 60	 mov	 QWORD PTR [rcx+96], rax
  00021	48 89 41 68	 mov	 QWORD PTR [rcx+104], rax
  00025	48 b8 00 00 00
	00 00 00 14 40	 mov	 rax, 4617315517961601024 ; 4014000000000000H
  0002f	48 89 41 70	 mov	 QWORD PTR [rcx+112], rax
  00033	48 89 41 78	 mov	 QWORD PTR [rcx+120], rax
  00037	48 89 81 80 00
	00 00		 mov	 QWORD PTR [rcx+128], rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 55   : 		double alronArea = 5;

  0003e	48 89 81 88 00
	00 00		 mov	 QWORD PTR [rcx+136], rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 21   : 	Vec3(double v) : x(v), y(v), z(v) {}

  00045	48 b8 00 00 00
	00 00 00 00 c0	 mov	 rax, -4611686018427387904 ; c000000000000000H
  0004f	48 89 81 90 00
	00 00		 mov	 QWORD PTR [rcx+144], rax
  00056	48 89 81 98 00
	00 00		 mov	 QWORD PTR [rcx+152], rax
  0005d	48 89 81 a0 00
	00 00		 mov	 QWORD PTR [rcx+160], rax
  00064	48 b8 00 00 00
	00 00 00 00 40	 mov	 rax, 4611686018427387904 ; 4000000000000000H
  0006e	48 89 81 a8 00
	00 00		 mov	 QWORD PTR [rcx+168], rax
  00075	48 89 81 b0 00
	00 00		 mov	 QWORD PTR [rcx+176], rax
  0007c	48 89 81 b8 00
	00 00		 mov	 QWORD PTR [rcx+184], rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 59   : 		double eleArea = 2;

  00083	48 89 81 c0 00
	00 00		 mov	 QWORD PTR [rcx+192], rax

; 60   : 
; 61   : 		Vec3 rudderPos = (1, -5, 0);
; 62   : 		double rudderArea = 2;

  0008a	48 89 81 e0 00
	00 00		 mov	 QWORD PTR [rcx+224], rax
  00091	48 8b c1	 mov	 rax, rcx
  00094	48 89 51 08	 mov	 QWORD PTR [rcx+8], rdx
  00098	48 89 51 10	 mov	 QWORD PTR [rcx+16], rdx
  0009c	48 89 51 18	 mov	 QWORD PTR [rcx+24], rdx
  000a0	48 89 51 20	 mov	 QWORD PTR [rcx+32], rdx
  000a4	48 89 51 28	 mov	 QWORD PTR [rcx+40], rdx
  000a8	48 89 51 30	 mov	 QWORD PTR [rcx+48], rdx
  000ac	48 89 51 38	 mov	 QWORD PTR [rcx+56], rdx
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 21   : 	Vec3(double v) : x(v), y(v), z(v) {}

  000b0	48 89 51 40	 mov	 QWORD PTR [rcx+64], rdx
  000b4	48 89 51 48	 mov	 QWORD PTR [rcx+72], rdx
  000b8	48 89 51 50	 mov	 QWORD PTR [rcx+80], rdx
  000bc	48 89 91 c8 00
	00 00		 mov	 QWORD PTR [rcx+200], rdx
  000c3	48 89 91 d0 00
	00 00		 mov	 QWORD PTR [rcx+208], rdx
  000ca	48 89 91 d8 00
	00 00		 mov	 QWORD PTR [rcx+216], rdx
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 17   : 		AeroModel() {};

  000d1	c3		 ret	 0
??0AeroModel@Aircraft@@QEAA@XZ ENDP			; Aircraft::AeroModel::AeroModel
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
;	COMDAT ??1AeroModel@Aircraft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1AeroModel@Aircraft@@QEAA@XZ PROC			; Aircraft::AeroModel::~AeroModel, COMDAT

; 18   : 		~AeroModel() {};

  00000	c2 00 00	 ret	 0
??1AeroModel@Aircraft@@QEAA@XZ ENDP			; Aircraft::AeroModel::~AeroModel
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
;	COMDAT ?getAeroForce@AeroModel@Aircraft@@QEAA?AUForce@@NNN@Z
_TEXT	SEGMENT
this$dead$ = 48
__$ReturnUdt$ = 56
dyPre$dead$ = 64
aoa$ = 72
mach$ = 80
?getAeroForce@AeroModel@Aircraft@@QEAA?AUForce@@NNN@Z PROC ; Aircraft::AeroModel::getAeroForce, COMDAT

; 84   : 	{

$LN8:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00004	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?aeroModel@@3PEAVAeroModel@Aircraft@@EA

; 85   : 		calAeroCoeffs(mach, aoa);

  0000b	0f 28 d3	 movaps	 xmm2, xmm3
  0000e	f2 0f 10 4c 24
	50		 movsd	 xmm1, QWORD PTR mach$[rsp]
  00014	4c 8b c2	 mov	 r8, rdx
  00017	e8 00 00 00 00	 call	 ?calAeroCoeffs@AeroModel@Aircraft@@AEAAXNN@Z ; Aircraft::AeroModel::calAeroCoeffs
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  0001c	45 33 db	 xor	 r11d, r11d
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 88   : 		return Force((-drag, lift, 0), pos);

  0001f	49 8b c0	 mov	 rax, r8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  00022	4d 89 18	 mov	 QWORD PTR [r8], r11
  00025	4d 89 58 08	 mov	 QWORD PTR [r8+8], r11
  00029	4d 89 58 10	 mov	 QWORD PTR [r8+16], r11
  0002d	0f 10 41 40	 movups	 xmm0, XMMWORD PTR [rcx+64]
  00031	f2 0f 10 49 50	 movsd	 xmm1, QWORD PTR [rcx+80]
  00036	41 0f 11 40 18	 movups	 XMMWORD PTR [r8+24], xmm0
  0003b	f2 41 0f 11 48
	28		 movsd	 QWORD PTR [r8+40], xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 89   : 	}

  00041	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00045	c3		 ret	 0
?getAeroForce@AeroModel@Aircraft@@QEAA?AUForce@@NNN@Z ENDP ; Aircraft::AeroModel::getAeroForce
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\utilities.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\utilities.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\utilities.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\utilities.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\utilities.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\utilities.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\utilities.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\utilities.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\utilities.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\utilities.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\utilities.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
;	COMDAT ?calAeroCoeffs@AeroModel@Aircraft@@AEAAXNN@Z
_TEXT	SEGMENT
this$ = 96
mach$ = 104
aoa$ = 112
?calAeroCoeffs@AeroModel@Aircraft@@AEAAXNN@Z PROC	; Aircraft::AeroModel::calAeroCoeffs, COMDAT

; 92   : 	{

$LN70:
  00000	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  00004	0f 29 74 24 40	 movaps	 XMMWORD PTR [rsp+64], xmm6
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\utilities.h

; 52   : 	for (unsigned i = 0; i < sz; i++)

  00009	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:?MATCH_TABLE@@3PANA
  00010	0f 29 7c 24 30	 movaps	 XMMWORD PTR [rsp+48], xmm7
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 92   : 	{

  00015	0f 28 e9	 movaps	 xmm5, xmm1
  00018	44 0f 29 44 24
	20		 movaps	 XMMWORD PTR [rsp+32], xmm8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\utilities.h

; 52   : 	for (unsigned i = 0; i < sz; i++)

  0001e	33 d2		 xor	 edx, edx
  00020	44 0f 29 4c 24
	10		 movaps	 XMMWORD PTR [rsp+16], xmm9
  00026	49 8b c1	 mov	 rax, r9
  00029	44 0f 29 14 24	 movaps	 XMMWORD PTR [rsp], xmm10
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 92   : 	{

  0002e	44 0f 28 d2	 movaps	 xmm10, xmm2
  00032	0f 1f 40 00 66
	66 0f 1f 84 00
	00 00 00 00	 npad	 14
$LL6@calAeroCoe:
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\utilities.h

; 54   : 		if (t <= x[i])

  00040	f2 0f 10 20	 movsd	 xmm4, QWORD PTR [rax]
  00044	4c 8d 15 00 00
	00 00		 lea	 r10, OFFSET FLAT:__ImageBase
  0004b	66 0f 2f e5	 comisd	 xmm4, xmm5
  0004f	73 15		 jae	 SHORT $LN49@calAeroCoe

; 52   : 	for (unsigned i = 0; i < sz; i++)

  00051	ff c2		 inc	 edx
  00053	48 83 c0 08	 add	 rax, 8
  00057	83 fa 13	 cmp	 edx, 19
  0005a	72 e4		 jb	 SHORT $LL6@calAeroCoe

; 62   : 		}
; 63   : 	}
; 64   : 	return f[sz - 1];

  0005c	f2 0f 10 35 90
	00 00 00	 movsd	 xmm6, QWORD PTR ?CYA@@3PANA+144
  00064	eb 55		 jmp	 SHORT $LN3@calAeroCoe
$LN49@calAeroCoe:

; 55   : 		{
; 56   : 			if (i > 0)

  00066	85 d2		 test	 edx, edx
  00068	74 49		 je	 SHORT $LN8@calAeroCoe

; 57   : 			{
; 58   : 				return ((f[i] - f[i - 1]) / (x[i] - x[i - 1]) * t +

  0006a	f2 41 0f 10 9c
	d2 00 00 00 00	 movsd	 xmm3, QWORD PTR ?CYA@@3PANA[r10+rdx*8]
  00074	8d 42 ff	 lea	 eax, DWORD PTR [rdx-1]
  00077	f2 41 0f 10 94
	c2 00 00 00 00	 movsd	 xmm2, QWORD PTR ?CYA@@3PANA[r10+rax*8]
  00081	0f 28 cc	 movaps	 xmm1, xmm4
  00084	f2 41 0f 10 04
	c1		 movsd	 xmm0, QWORD PTR [r9+rax*8]
  0008a	0f 28 f2	 movaps	 xmm6, xmm2
  0008d	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00091	f2 0f 59 f4	 mulsd	 xmm6, xmm4
  00095	f2 0f 59 c3	 mulsd	 xmm0, xmm3
  00099	f2 0f 5c da	 subsd	 xmm3, xmm2
  0009d	f2 0f 5c f0	 subsd	 xmm6, xmm0
  000a1	f2 0f 5e d9	 divsd	 xmm3, xmm1
  000a5	f2 0f 5e f1	 divsd	 xmm6, xmm1
  000a9	f2 0f 59 dd	 mulsd	 xmm3, xmm5
  000ad	f2 0f 58 f3	 addsd	 xmm6, xmm3
  000b1	eb 08		 jmp	 SHORT $LN3@calAeroCoe
$LN8@calAeroCoe:

; 59   : 					(x[i] * f[i - 1] - x[i - 1] * f[i]) / (x[i] - x[i - 1]));
; 60   : 			}
; 61   : 			return f[0];

  000b3	f2 0f 10 35 00
	00 00 00	 movsd	 xmm6, QWORD PTR ?CYA@@3PANA
$LN3@calAeroCoe:
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 93   : 		cyAlpha = lerp(MATCH_TABLE, CYA, sizeof(MATCH_TABLE) / sizeof(double), mach);

  000bb	f2 0f 11 71 08	 movsd	 QWORD PTR [rcx+8], xmm6
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\utilities.h

; 52   : 	for (unsigned i = 0; i < sz; i++)

  000c0	33 d2		 xor	 edx, edx
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 93   : 		cyAlpha = lerp(MATCH_TABLE, CYA, sizeof(MATCH_TABLE) / sizeof(double), mach);

  000c2	49 8b c1	 mov	 rax, r9
$LL13@calAeroCoe:
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\utilities.h

; 54   : 		if (t <= x[i])

  000c5	f2 0f 10 38	 movsd	 xmm7, QWORD PTR [rax]
  000c9	66 0f 2f fd	 comisd	 xmm7, xmm5
  000cd	73 15		 jae	 SHORT $LN50@calAeroCoe

; 52   : 	for (unsigned i = 0; i < sz; i++)

  000cf	ff c2		 inc	 edx
  000d1	48 83 c0 08	 add	 rax, 8
  000d5	83 fa 13	 cmp	 edx, 19
  000d8	72 eb		 jb	 SHORT $LL13@calAeroCoe

; 62   : 		}
; 63   : 	}
; 64   : 	return f[sz - 1];

  000da	f2 0f 10 3d 90
	00 00 00	 movsd	 xmm7, QWORD PTR ?CX0@@3PANA+144
  000e2	eb 53		 jmp	 SHORT $LN10@calAeroCoe
$LN50@calAeroCoe:

; 55   : 		{
; 56   : 			if (i > 0)

  000e4	85 d2		 test	 edx, edx
  000e6	74 47		 je	 SHORT $LN15@calAeroCoe

; 57   : 			{
; 58   : 				return ((f[i] - f[i - 1]) / (x[i] - x[i - 1]) * t +

  000e8	f2 41 0f 10 a4
	d2 00 00 00 00	 movsd	 xmm4, QWORD PTR ?CX0@@3PANA[r10+rdx*8]
  000f2	8d 42 ff	 lea	 eax, DWORD PTR [rdx-1]
  000f5	f2 41 0f 10 9c
	c2 00 00 00 00	 movsd	 xmm3, QWORD PTR ?CX0@@3PANA[r10+rax*8]
  000ff	0f 28 d7	 movaps	 xmm2, xmm7
  00102	f2 41 0f 5c 14
	c1		 subsd	 xmm2, QWORD PTR [r9+rax*8]
  00108	0f 28 c4	 movaps	 xmm0, xmm4
  0010b	f2 0f 59 fb	 mulsd	 xmm7, xmm3
  0010f	f2 41 0f 59 04
	c1		 mulsd	 xmm0, QWORD PTR [r9+rax*8]
  00115	f2 0f 5c e3	 subsd	 xmm4, xmm3
  00119	f2 0f 5c f8	 subsd	 xmm7, xmm0
  0011d	f2 0f 5e e2	 divsd	 xmm4, xmm2
  00121	f2 0f 5e fa	 divsd	 xmm7, xmm2
  00125	f2 0f 59 e5	 mulsd	 xmm4, xmm5
  00129	f2 0f 58 fc	 addsd	 xmm7, xmm4
  0012d	eb 08		 jmp	 SHORT $LN10@calAeroCoe
$LN15@calAeroCoe:

; 59   : 					(x[i] * f[i - 1] - x[i - 1] * f[i]) / (x[i] - x[i - 1]));
; 60   : 			}
; 61   : 			return f[0];

  0012f	f2 0f 10 3d 00
	00 00 00	 movsd	 xmm7, QWORD PTR ?CX0@@3PANA
$LN10@calAeroCoe:
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 94   : 		cxZero = lerp(MATCH_TABLE, CX0, sizeof(MATCH_TABLE) / sizeof(double), mach);

  00137	f2 0f 11 79 10	 movsd	 QWORD PTR [rcx+16], xmm7
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\utilities.h

; 52   : 	for (unsigned i = 0; i < sz; i++)

  0013c	33 d2		 xor	 edx, edx
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 94   : 		cxZero = lerp(MATCH_TABLE, CX0, sizeof(MATCH_TABLE) / sizeof(double), mach);

  0013e	49 8b c1	 mov	 rax, r9
$LL20@calAeroCoe:
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\utilities.h

; 54   : 		if (t <= x[i])

  00141	f2 0f 10 38	 movsd	 xmm7, QWORD PTR [rax]
  00145	66 0f 2f fd	 comisd	 xmm7, xmm5
  00149	73 15		 jae	 SHORT $LN51@calAeroCoe

; 52   : 	for (unsigned i = 0; i < sz; i++)

  0014b	ff c2		 inc	 edx
  0014d	48 83 c0 08	 add	 rax, 8
  00151	83 fa 13	 cmp	 edx, 19
  00154	72 eb		 jb	 SHORT $LL20@calAeroCoe

; 62   : 		}
; 63   : 	}
; 64   : 	return f[sz - 1];

  00156	f2 0f 10 3d 90
	00 00 00	 movsd	 xmm7, QWORD PTR ?CY_MAX@@3PANA+144
  0015e	eb 53		 jmp	 SHORT $LN17@calAeroCoe
$LN51@calAeroCoe:

; 55   : 		{
; 56   : 			if (i > 0)

  00160	85 d2		 test	 edx, edx
  00162	74 47		 je	 SHORT $LN22@calAeroCoe

; 57   : 			{
; 58   : 				return ((f[i] - f[i - 1]) / (x[i] - x[i - 1]) * t +

  00164	f2 41 0f 10 a4
	d2 00 00 00 00	 movsd	 xmm4, QWORD PTR ?CY_MAX@@3PANA[r10+rdx*8]
  0016e	8d 42 ff	 lea	 eax, DWORD PTR [rdx-1]
  00171	f2 41 0f 10 9c
	c2 00 00 00 00	 movsd	 xmm3, QWORD PTR ?CY_MAX@@3PANA[r10+rax*8]
  0017b	0f 28 d7	 movaps	 xmm2, xmm7
  0017e	f2 41 0f 5c 14
	c1		 subsd	 xmm2, QWORD PTR [r9+rax*8]
  00184	0f 28 c4	 movaps	 xmm0, xmm4
  00187	f2 0f 59 fb	 mulsd	 xmm7, xmm3
  0018b	f2 41 0f 59 04
	c1		 mulsd	 xmm0, QWORD PTR [r9+rax*8]
  00191	f2 0f 5c e3	 subsd	 xmm4, xmm3
  00195	f2 0f 5c f8	 subsd	 xmm7, xmm0
  00199	f2 0f 5e e2	 divsd	 xmm4, xmm2
  0019d	f2 0f 5e fa	 divsd	 xmm7, xmm2
  001a1	f2 0f 59 e5	 mulsd	 xmm4, xmm5
  001a5	f2 0f 58 fc	 addsd	 xmm7, xmm4
  001a9	eb 08		 jmp	 SHORT $LN17@calAeroCoe
$LN22@calAeroCoe:

; 59   : 					(x[i] * f[i - 1] - x[i - 1] * f[i]) / (x[i] - x[i - 1]));
; 60   : 			}
; 61   : 			return f[0];

  001ab	f2 0f 10 3d 00
	00 00 00	 movsd	 xmm7, QWORD PTR ?CY_MAX@@3PANA
$LN17@calAeroCoe:
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 95   : 		cyMax = lerp(MATCH_TABLE, CY_MAX, sizeof(MATCH_TABLE) / sizeof(double), mach);

  001b3	f2 0f 11 79 18	 movsd	 QWORD PTR [rcx+24], xmm7
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\utilities.h

; 52   : 	for (unsigned i = 0; i < sz; i++)

  001b8	33 d2		 xor	 edx, edx
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 95   : 		cyMax = lerp(MATCH_TABLE, CY_MAX, sizeof(MATCH_TABLE) / sizeof(double), mach);

  001ba	49 8b c1	 mov	 rax, r9
  001bd	0f 1f 00	 npad	 3
$LL27@calAeroCoe:
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\utilities.h

; 54   : 		if (t <= x[i])

  001c0	f2 44 0f 10 08	 movsd	 xmm9, QWORD PTR [rax]
  001c5	66 44 0f 2f cd	 comisd	 xmm9, xmm5
  001ca	73 16		 jae	 SHORT $LN52@calAeroCoe

; 52   : 	for (unsigned i = 0; i < sz; i++)

  001cc	ff c2		 inc	 edx
  001ce	48 83 c0 08	 add	 rax, 8
  001d2	83 fa 13	 cmp	 edx, 19
  001d5	72 e9		 jb	 SHORT $LL27@calAeroCoe

; 62   : 		}
; 63   : 	}
; 64   : 	return f[sz - 1];

  001d7	f2 44 0f 10 0d
	90 00 00 00	 movsd	 xmm9, QWORD PTR ?B@@3PANA+144
  001e0	eb 59		 jmp	 SHORT $LN24@calAeroCoe
$LN52@calAeroCoe:

; 55   : 		{
; 56   : 			if (i > 0)

  001e2	85 d2		 test	 edx, edx
  001e4	74 4c		 je	 SHORT $LN29@calAeroCoe

; 57   : 			{
; 58   : 				return ((f[i] - f[i - 1]) / (x[i] - x[i - 1]) * t +

  001e6	f2 41 0f 10 a4
	d2 00 00 00 00	 movsd	 xmm4, QWORD PTR ?B@@3PANA[r10+rdx*8]
  001f0	8d 42 ff	 lea	 eax, DWORD PTR [rdx-1]
  001f3	f2 41 0f 10 9c
	c2 00 00 00 00	 movsd	 xmm3, QWORD PTR ?B@@3PANA[r10+rax*8]
  001fd	41 0f 28 d1	 movaps	 xmm2, xmm9
  00201	f2 41 0f 5c 14
	c1		 subsd	 xmm2, QWORD PTR [r9+rax*8]
  00207	0f 28 c4	 movaps	 xmm0, xmm4
  0020a	f2 44 0f 59 cb	 mulsd	 xmm9, xmm3
  0020f	f2 41 0f 59 04
	c1		 mulsd	 xmm0, QWORD PTR [r9+rax*8]
  00215	f2 0f 5c e3	 subsd	 xmm4, xmm3
  00219	f2 44 0f 5c c8	 subsd	 xmm9, xmm0
  0021e	f2 0f 5e e2	 divsd	 xmm4, xmm2
  00222	f2 44 0f 5e ca	 divsd	 xmm9, xmm2
  00227	f2 0f 59 e5	 mulsd	 xmm4, xmm5
  0022b	f2 44 0f 58 cc	 addsd	 xmm9, xmm4
  00230	eb 09		 jmp	 SHORT $LN24@calAeroCoe
$LN29@calAeroCoe:

; 59   : 					(x[i] * f[i - 1] - x[i - 1] * f[i]) / (x[i] - x[i - 1]));
; 60   : 			}
; 61   : 			return f[0];

  00232	f2 44 0f 10 0d
	00 00 00 00	 movsd	 xmm9, QWORD PTR ?B@@3PANA
$LN24@calAeroCoe:
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 96   : 		b = lerp(MATCH_TABLE, B, sizeof(MATCH_TABLE) / sizeof(double), mach);

  0023b	f2 44 0f 11 49
	20		 movsd	 QWORD PTR [rcx+32], xmm9
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\utilities.h

; 52   : 	for (unsigned i = 0; i < sz; i++)

  00241	33 d2		 xor	 edx, edx
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 96   : 		b = lerp(MATCH_TABLE, B, sizeof(MATCH_TABLE) / sizeof(double), mach);

  00243	49 8b c1	 mov	 rax, r9
  00246	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL34@calAeroCoe:
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\utilities.h

; 54   : 		if (t <= x[i])

  00250	f2 44 0f 10 00	 movsd	 xmm8, QWORD PTR [rax]
  00255	66 44 0f 2f c5	 comisd	 xmm8, xmm5
  0025a	73 16		 jae	 SHORT $LN53@calAeroCoe

; 52   : 	for (unsigned i = 0; i < sz; i++)

  0025c	ff c2		 inc	 edx
  0025e	48 83 c0 08	 add	 rax, 8
  00262	83 fa 13	 cmp	 edx, 19
  00265	72 e9		 jb	 SHORT $LL34@calAeroCoe

; 62   : 		}
; 63   : 	}
; 64   : 	return f[sz - 1];

  00267	f2 44 0f 10 05
	90 00 00 00	 movsd	 xmm8, QWORD PTR ?B4@@3PANA+144
  00270	eb 59		 jmp	 SHORT $LN31@calAeroCoe
$LN53@calAeroCoe:

; 55   : 		{
; 56   : 			if (i > 0)

  00272	85 d2		 test	 edx, edx
  00274	74 4c		 je	 SHORT $LN36@calAeroCoe

; 57   : 			{
; 58   : 				return ((f[i] - f[i - 1]) / (x[i] - x[i - 1]) * t +

  00276	f2 41 0f 10 a4
	d2 00 00 00 00	 movsd	 xmm4, QWORD PTR ?B4@@3PANA[r10+rdx*8]
  00280	8d 42 ff	 lea	 eax, DWORD PTR [rdx-1]
  00283	f2 41 0f 10 9c
	c2 00 00 00 00	 movsd	 xmm3, QWORD PTR ?B4@@3PANA[r10+rax*8]
  0028d	41 0f 28 d0	 movaps	 xmm2, xmm8
  00291	f2 41 0f 5c 14
	c1		 subsd	 xmm2, QWORD PTR [r9+rax*8]
  00297	0f 28 c4	 movaps	 xmm0, xmm4
  0029a	f2 44 0f 59 c3	 mulsd	 xmm8, xmm3
  0029f	f2 41 0f 59 04
	c1		 mulsd	 xmm0, QWORD PTR [r9+rax*8]
  002a5	f2 0f 5c e3	 subsd	 xmm4, xmm3
  002a9	f2 44 0f 5c c0	 subsd	 xmm8, xmm0
  002ae	f2 0f 5e e2	 divsd	 xmm4, xmm2
  002b2	f2 44 0f 5e c2	 divsd	 xmm8, xmm2
  002b7	f2 0f 59 e5	 mulsd	 xmm4, xmm5
  002bb	f2 44 0f 58 c4	 addsd	 xmm8, xmm4
  002c0	eb 09		 jmp	 SHORT $LN31@calAeroCoe
$LN36@calAeroCoe:

; 59   : 					(x[i] * f[i - 1] - x[i - 1] * f[i]) / (x[i] - x[i - 1]));
; 60   : 			}
; 61   : 			return f[0];

  002c2	f2 44 0f 10 05
	00 00 00 00	 movsd	 xmm8, QWORD PTR ?B4@@3PANA
$LN31@calAeroCoe:
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 105  : 		cy = cyAlpha * 57.3 * aoa;

  002cb	f2 0f 59 35 00
	00 00 00	 mulsd	 xmm6, QWORD PTR __real@404ca66666666666

; 97   : 		b4 = lerp(MATCH_TABLE, B4, sizeof(MATCH_TABLE) / sizeof(double), mach);

  002d3	f2 44 0f 11 41
	28		 movsd	 QWORD PTR [rcx+40], xmm8

; 105  : 		cy = cyAlpha * 57.3 * aoa;

  002d9	f2 41 0f 59 f2	 mulsd	 xmm6, xmm10

; 106  : 		if (fabs(aoa) > 90 / 57.3)

  002de	44 0f 54 15 00
	00 00 00	 andps	 xmm10, QWORD PTR __xmm@7fffffffffffffff7fffffffffffffff
  002e6	66 44 0f 2f 15
	00 00 00 00	 comisd	 xmm10, QWORD PTR __real@3ff9218202ae3da8
  002ef	f2 0f 11 71 38	 movsd	 QWORD PTR [rcx+56], xmm6
  002f4	76 0b		 jbe	 SHORT $LN39@calAeroCoe

; 107  : 		{
; 108  : 			cy = 0;

  002f6	48 c7 41 38 00
	00 00 00	 mov	 QWORD PTR [rcx+56], 0
  002fe	0f 57 f6	 xorps	 xmm6, xmm6
$LN39@calAeroCoe:

; 109  : 		}
; 110  : 
; 111  : 		if (cy > cyMax)

  00301	66 0f 2f f7	 comisd	 xmm6, xmm7
  00305	76 08		 jbe	 SHORT $LN40@calAeroCoe

; 112  : 		{
; 113  : 			cy = cyMax;

  00307	f2 0f 11 79 38	 movsd	 QWORD PTR [rcx+56], xmm7
  0030c	0f 28 f7	 movaps	 xmm6, xmm7
$LN40@calAeroCoe:

; 98   : 
; 99   : 		calCy(aoa);
; 100  : 		calCx();
; 101  : 	}

  0030f	0f 28 7c 24 30	 movaps	 xmm7, XMMWORD PTR [rsp+48]

; 119  : 		cx = 0.05 + b * cy * cy + b4 * cy * cy * cy * cy;

  00314	0f 28 ce	 movaps	 xmm1, xmm6

; 98   : 
; 99   : 		calCy(aoa);
; 100  : 		calCx();
; 101  : 	}

  00317	44 0f 28 14 24	 movaps	 xmm10, XMMWORD PTR [rsp]

; 119  : 		cx = 0.05 + b * cy * cy + b4 * cy * cy * cy * cy;

  0031c	0f 28 c6	 movaps	 xmm0, xmm6
  0031f	f2 41 0f 59 c8	 mulsd	 xmm1, xmm8

; 98   : 
; 99   : 		calCy(aoa);
; 100  : 		calCx();
; 101  : 	}

  00324	44 0f 28 44 24
	20		 movaps	 xmm8, XMMWORD PTR [rsp+32]

; 119  : 		cx = 0.05 + b * cy * cy + b4 * cy * cy * cy * cy;

  0032a	f2 41 0f 59 c1	 mulsd	 xmm0, xmm9

; 98   : 
; 99   : 		calCy(aoa);
; 100  : 		calCx();
; 101  : 	}

  0032f	44 0f 28 4c 24
	10		 movaps	 xmm9, XMMWORD PTR [rsp+16]

; 119  : 		cx = 0.05 + b * cy * cy + b4 * cy * cy * cy * cy;

  00335	f2 0f 59 ce	 mulsd	 xmm1, xmm6
  00339	f2 0f 59 c6	 mulsd	 xmm0, xmm6
  0033d	f2 0f 59 ce	 mulsd	 xmm1, xmm6
  00341	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00349	f2 0f 59 ce	 mulsd	 xmm1, xmm6

; 98   : 
; 99   : 		calCy(aoa);
; 100  : 		calCx();
; 101  : 	}

  0034d	0f 28 74 24 40	 movaps	 xmm6, XMMWORD PTR [rsp+64]

; 119  : 		cx = 0.05 + b * cy * cy + b4 * cy * cy * cy * cy;

  00352	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00356	f2 0f 11 49 30	 movsd	 QWORD PTR [rcx+48], xmm1

; 98   : 
; 99   : 		calCy(aoa);
; 100  : 		calCx();
; 101  : 	}

  0035b	48 83 c4 58	 add	 rsp, 88			; 00000058H
  0035f	c3		 ret	 0
?calAeroCoeffs@AeroModel@Aircraft@@AEAAXNN@Z ENDP	; Aircraft::AeroModel::calAeroCoeffs
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
;	COMDAT ?calCy@AeroModel@Aircraft@@AEAAXN@Z
_TEXT	SEGMENT
this$ = 8
aoa$ = 16
?calCy@AeroModel@Aircraft@@AEAAXN@Z PROC		; Aircraft::AeroModel::calCy, COMDAT

; 105  : 		cy = cyAlpha * 57.3 * aoa;

  00000	f2 0f 10 41 08	 movsd	 xmm0, QWORD PTR [rcx+8]
  00005	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@404ca66666666666
  0000d	f2 0f 59 c1	 mulsd	 xmm0, xmm1

; 106  : 		if (fabs(aoa) > 90 / 57.3)

  00011	0f 54 0d 00 00
	00 00		 andps	 xmm1, QWORD PTR __xmm@7fffffffffffffff7fffffffffffffff
  00018	66 0f 2f 0d 00
	00 00 00	 comisd	 xmm1, QWORD PTR __real@3ff9218202ae3da8
  00020	f2 0f 11 41 38	 movsd	 QWORD PTR [rcx+56], xmm0
  00025	76 0b		 jbe	 SHORT $LN2@calCy

; 107  : 		{
; 108  : 			cy = 0;

  00027	48 c7 41 38 00
	00 00 00	 mov	 QWORD PTR [rcx+56], 0
  0002f	0f 57 c0	 xorps	 xmm0, xmm0
$LN2@calCy:

; 109  : 		}
; 110  : 
; 111  : 		if (cy > cyMax)

  00032	f2 0f 10 49 18	 movsd	 xmm1, QWORD PTR [rcx+24]
  00037	66 0f 2f c1	 comisd	 xmm0, xmm1
  0003b	76 05		 jbe	 SHORT $LN3@calCy

; 112  : 		{
; 113  : 			cy = cyMax;

  0003d	f2 0f 11 49 38	 movsd	 QWORD PTR [rcx+56], xmm1
$LN3@calCy:

; 114  : 		}
; 115  : 	}

  00042	c3		 ret	 0
?calCy@AeroModel@Aircraft@@AEAAXN@Z ENDP		; Aircraft::AeroModel::calCy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
;	COMDAT ?calCx@AeroModel@Aircraft@@AEAAXXZ
_TEXT	SEGMENT
this$ = 8
?calCx@AeroModel@Aircraft@@AEAAXXZ PROC			; Aircraft::AeroModel::calCx, COMDAT

; 119  : 		cx = 0.05 + b * cy * cy + b4 * cy * cy * cy * cy;

  00000	f2 0f 10 49 38	 movsd	 xmm1, QWORD PTR [rcx+56]
  00005	0f 28 d1	 movaps	 xmm2, xmm1
  00008	0f 28 c1	 movaps	 xmm0, xmm1
  0000b	f2 0f 59 51 28	 mulsd	 xmm2, QWORD PTR [rcx+40]
  00010	f2 0f 59 41 20	 mulsd	 xmm0, QWORD PTR [rcx+32]
  00015	f2 0f 59 d1	 mulsd	 xmm2, xmm1
  00019	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  0001d	f2 0f 59 d1	 mulsd	 xmm2, xmm1
  00021	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00029	f2 0f 59 d1	 mulsd	 xmm2, xmm1
  0002d	f2 0f 58 d0	 addsd	 xmm2, xmm0
  00031	f2 0f 11 51 30	 movsd	 QWORD PTR [rcx+48], xmm2

; 120  : 	}

  00036	c3		 ret	 0
?calCx@AeroModel@Aircraft@@AEAAXXZ ENDP			; Aircraft::AeroModel::calCx
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
;	COMDAT ?getLeftAlrnForce@AeroModel@Aircraft@@QEAA?AUForce@@NN@Z
_TEXT	SEGMENT
this$dead$ = 8
__$ReturnUdt$ = 16
dyPre$dead$ = 24
stickRoll$dead$ = 32
?getLeftAlrnForce@AeroModel@Aircraft@@QEAA?AUForce@@NN@Z PROC ; Aircraft::AeroModel::getLeftAlrnForce, COMDAT
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  00000	33 c0		 xor	 eax, eax
  00002	48 89 02	 mov	 QWORD PTR [rdx], rax
  00005	48 89 42 08	 mov	 QWORD PTR [rdx+8], rax
  00009	48 89 42 10	 mov	 QWORD PTR [rdx+16], rax
  0000d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?aeroModel@@3PEAVAeroModel@Aircraft@@EA
  00014	0f 10 40 58	 movups	 xmm0, XMMWORD PTR [rax+88]
  00018	f2 0f 10 48 68	 movsd	 xmm1, QWORD PTR [rax+104]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 139  : 		return Force((0, 0.05 * cy * stickRoll * dyPre * alronArea, 0), leftAlrnPos);

  0001d	48 8b c2	 mov	 rax, rdx
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  00020	0f 11 42 18	 movups	 XMMWORD PTR [rdx+24], xmm0
  00024	f2 0f 11 4a 28	 movsd	 QWORD PTR [rdx+40], xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 140  : 	}

  00029	c3		 ret	 0
?getLeftAlrnForce@AeroModel@Aircraft@@QEAA?AUForce@@NN@Z ENDP ; Aircraft::AeroModel::getLeftAlrnForce
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
;	COMDAT ?getRightAlrnForce@AeroModel@Aircraft@@QEAA?AUForce@@NN@Z
_TEXT	SEGMENT
this$dead$ = 8
__$ReturnUdt$ = 16
dyPre$dead$ = 24
stickRoll$dead$ = 32
?getRightAlrnForce@AeroModel@Aircraft@@QEAA?AUForce@@NN@Z PROC ; Aircraft::AeroModel::getRightAlrnForce, COMDAT
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  00000	33 c0		 xor	 eax, eax
  00002	48 89 02	 mov	 QWORD PTR [rdx], rax
  00005	48 89 42 08	 mov	 QWORD PTR [rdx+8], rax
  00009	48 89 42 10	 mov	 QWORD PTR [rdx+16], rax
  0000d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?aeroModel@@3PEAVAeroModel@Aircraft@@EA
  00014	0f 10 40 70	 movups	 xmm0, XMMWORD PTR [rax+112]
  00018	f2 0f 10 88 80
	00 00 00	 movsd	 xmm1, QWORD PTR [rax+128]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 144  : 		return Force((0, -0.05 * cy * stickRoll * dyPre * alronArea, 0), rightAlrnPos);

  00020	48 8b c2	 mov	 rax, rdx
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  00023	0f 11 42 18	 movups	 XMMWORD PTR [rdx+24], xmm0
  00027	f2 0f 11 4a 28	 movsd	 QWORD PTR [rdx+40], xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 145  : 	}

  0002c	c3		 ret	 0
?getRightAlrnForce@AeroModel@Aircraft@@QEAA?AUForce@@NN@Z ENDP ; Aircraft::AeroModel::getRightAlrnForce
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
;	COMDAT ?getLeftEleForce@AeroModel@Aircraft@@QEAA?AUForce@@NN@Z
_TEXT	SEGMENT
this$dead$ = 8
__$ReturnUdt$ = 16
dyPre$dead$ = 24
stickPitch$dead$ = 32
?getLeftEleForce@AeroModel@Aircraft@@QEAA?AUForce@@NN@Z PROC ; Aircraft::AeroModel::getLeftEleForce, COMDAT
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  00000	33 c0		 xor	 eax, eax
  00002	48 89 02	 mov	 QWORD PTR [rdx], rax
  00005	48 89 42 08	 mov	 QWORD PTR [rdx+8], rax
  00009	48 89 42 10	 mov	 QWORD PTR [rdx+16], rax
  0000d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?aeroModel@@3PEAVAeroModel@Aircraft@@EA
  00014	0f 10 80 90 00
	00 00		 movups	 xmm0, XMMWORD PTR [rax+144]
  0001b	f2 0f 10 88 a0
	00 00 00	 movsd	 xmm1, QWORD PTR [rax+160]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 149  : 		return Force((0, 0.05 * stickPitch * dyPre * eleArea, 0), leftElePos);

  00023	48 8b c2	 mov	 rax, rdx
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  00026	0f 11 42 18	 movups	 XMMWORD PTR [rdx+24], xmm0
  0002a	f2 0f 11 4a 28	 movsd	 QWORD PTR [rdx+40], xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 150  : 	}

  0002f	c3		 ret	 0
?getLeftEleForce@AeroModel@Aircraft@@QEAA?AUForce@@NN@Z ENDP ; Aircraft::AeroModel::getLeftEleForce
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
;	COMDAT ?getRightEleForce@AeroModel@Aircraft@@QEAA?AUForce@@NN@Z
_TEXT	SEGMENT
this$dead$ = 8
__$ReturnUdt$ = 16
dyPre$dead$ = 24
stickPitch$dead$ = 32
?getRightEleForce@AeroModel@Aircraft@@QEAA?AUForce@@NN@Z PROC ; Aircraft::AeroModel::getRightEleForce, COMDAT
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  00000	33 c0		 xor	 eax, eax
  00002	48 89 02	 mov	 QWORD PTR [rdx], rax
  00005	48 89 42 08	 mov	 QWORD PTR [rdx+8], rax
  00009	48 89 42 10	 mov	 QWORD PTR [rdx+16], rax
  0000d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?aeroModel@@3PEAVAeroModel@Aircraft@@EA
  00014	0f 10 80 a8 00
	00 00		 movups	 xmm0, XMMWORD PTR [rax+168]
  0001b	f2 0f 10 88 b8
	00 00 00	 movsd	 xmm1, QWORD PTR [rax+184]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 154  : 		return Force((0, 0.05 * stickPitch * dyPre * eleArea, 0), rightElePos);

  00023	48 8b c2	 mov	 rax, rdx
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  00026	0f 11 42 18	 movups	 XMMWORD PTR [rdx+24], xmm0
  0002a	f2 0f 11 4a 28	 movsd	 QWORD PTR [rdx+40], xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 155  : 	}

  0002f	c3		 ret	 0
?getRightEleForce@AeroModel@Aircraft@@QEAA?AUForce@@NN@Z ENDP ; Aircraft::AeroModel::getRightEleForce
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
;	COMDAT ?getRudderForce@AeroModel@Aircraft@@QEAA?AUForce@@NN@Z
_TEXT	SEGMENT
this$dead$ = 8
__$ReturnUdt$ = 16
dyPre$ = 24
stickRaw$ = 32
?getRudderForce@AeroModel@Aircraft@@QEAA?AUForce@@NN@Z PROC ; Aircraft::AeroModel::getRudderForce, COMDAT

; 158  : 	{

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?aeroModel@@3PEAVAeroModel@Aircraft@@EA

; 159  : 		return Force((0, 0, 0.05 * stickRaw * dyPre * eleArea), rudderPos);

  00007	f2 0f 59 1d 00
	00 00 00	 mulsd	 xmm3, QWORD PTR __real@3fa999999999999a
  0000f	f2 0f 59 da	 mulsd	 xmm3, xmm2
  00013	f2 0f 59 98 c0
	00 00 00	 mulsd	 xmm3, QWORD PTR [rax+192]
  0001b	66 0f 14 db	 unpcklpd xmm3, xmm3
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  0001f	0f 11 1a	 movups	 XMMWORD PTR [rdx], xmm3
  00022	f2 0f 11 5a 10	 movsd	 QWORD PTR [rdx+16], xmm3
  00027	0f 10 80 c8 00
	00 00		 movups	 xmm0, XMMWORD PTR [rax+200]
  0002e	f2 0f 10 88 d8
	00 00 00	 movsd	 xmm1, QWORD PTR [rax+216]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 159  : 		return Force((0, 0, 0.05 * stickRaw * dyPre * eleArea), rudderPos);

  00036	48 8b c2	 mov	 rax, rdx
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  00039	0f 11 42 18	 movups	 XMMWORD PTR [rdx+24], xmm0
  0003d	f2 0f 11 4a 28	 movsd	 QWORD PTR [rdx+40], xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 160  : 	}

  00042	c3		 ret	 0
?getRudderForce@AeroModel@Aircraft@@QEAA?AUForce@@NN@Z ENDP ; Aircraft::AeroModel::getRudderForce
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\fuelsys.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\fuelsys.h
;	COMDAT ??0FuelSys@Aircraft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0FuelSys@Aircraft@@QEAA@XZ PROC			; Aircraft::FuelSys::FuelSys, COMDAT

; 15   : 
; 16   : 		~FuelSys() {};
; 17   : 
; 18   : 		inline void simulate(double dt, double throttle);
; 19   : 
; 20   : 		inline void setInternalFuel(double fuel);
; 21   : 		inline void setFuelFlow(double ff);
; 22   : 
; 23   : 		inline double getInternalFuel();
; 24   : 		inline double getFuelFlow();
; 25   : 
; 26   : 		inline double getFuelQtyDelta() const;
; 27   : 
; 28   : 		Vec3 getPos() const { return pos; }
; 29   : 		void setPos(const Vec3& pos_) { pos = pos_; }
; 30   : 
; 31   : 		void setPreInterFuel() { preInterFuel = internalFuel; }
; 32   : 
; 33   : 	private:
; 34   : 		double internalFuel = 0;

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax

; 35   : 		double preInterFuel = 0;

  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 36   : 		double fuelFlow = 0;

  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 21   : 	Vec3(double v) : x(v), y(v), z(v) {}

  0000d	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax
  00011	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax
  00015	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\fuelsys.h

; 14   : 		}

  00019	48 8b c1	 mov	 rax, rcx
  0001c	c3		 ret	 0
??0FuelSys@Aircraft@@QEAA@XZ ENDP			; Aircraft::FuelSys::FuelSys
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\fuelsys.h
;	COMDAT ??1FuelSys@Aircraft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1FuelSys@Aircraft@@QEAA@XZ PROC			; Aircraft::FuelSys::~FuelSys, COMDAT

; 16   : 		~FuelSys() {};

  00000	c2 00 00	 ret	 0
??1FuelSys@Aircraft@@QEAA@XZ ENDP			; Aircraft::FuelSys::~FuelSys
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\fuelsys.h
;	COMDAT ?getPos@FuelSys@Aircraft@@QEBA?AUVec3@@XZ
_TEXT	SEGMENT
this$dead$ = 8
__$ReturnUdt$ = 16
?getPos@FuelSys@Aircraft@@QEBA?AUVec3@@XZ PROC		; Aircraft::FuelSys::getPos, COMDAT

; 28   : 		Vec3 getPos() const { return pos; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?fuelSys@@3PEAVFuelSys@Aircraft@@EA
  00007	0f 10 40 18	 movups	 xmm0, XMMWORD PTR [rax+24]
  0000b	f2 0f 10 48 28	 movsd	 xmm1, QWORD PTR [rax+40]
  00010	48 8b c2	 mov	 rax, rdx
  00013	0f 11 02	 movups	 XMMWORD PTR [rdx], xmm0
  00016	f2 0f 11 4a 10	 movsd	 QWORD PTR [rdx+16], xmm1
  0001b	c3		 ret	 0
?getPos@FuelSys@Aircraft@@QEBA?AUVec3@@XZ ENDP		; Aircraft::FuelSys::getPos
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\fuelsys.h
;	COMDAT ?setPreInterFuel@FuelSys@Aircraft@@QEAAXXZ
_TEXT	SEGMENT
this$dead$ = 8
?setPreInterFuel@FuelSys@Aircraft@@QEAAXXZ PROC		; Aircraft::FuelSys::setPreInterFuel, COMDAT

; 31   : 		void setPreInterFuel() { preInterFuel = internalFuel; }

  00000	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?fuelSys@@3PEAVFuelSys@Aircraft@@EA
  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0000a	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  0000e	c3		 ret	 0
?setPreInterFuel@FuelSys@Aircraft@@QEAAXXZ ENDP		; Aircraft::FuelSys::setPreInterFuel
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\fuelsys.h
;	COMDAT ?setInternalFuel@FuelSys@Aircraft@@QEAAXN@Z
_TEXT	SEGMENT
this$dead$ = 8
fuel$ = 16
?setInternalFuel@FuelSys@Aircraft@@QEAAXN@Z PROC	; Aircraft::FuelSys::setInternalFuel, COMDAT

; 42   : 		internalFuel = fuel;

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?fuelSys@@3PEAVFuelSys@Aircraft@@EA
  00007	f2 0f 11 08	 movsd	 QWORD PTR [rax], xmm1

; 43   : 	}

  0000b	c3		 ret	 0
?setInternalFuel@FuelSys@Aircraft@@QEAAXN@Z ENDP	; Aircraft::FuelSys::setInternalFuel
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\fuelsys.h
;	COMDAT ?getInternalFuel@FuelSys@Aircraft@@QEAANXZ
_TEXT	SEGMENT
this$dead$ = 8
?getInternalFuel@FuelSys@Aircraft@@QEAANXZ PROC		; Aircraft::FuelSys::getInternalFuel, COMDAT

; 52   : 		return internalFuel;

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?fuelSys@@3PEAVFuelSys@Aircraft@@EA
  00007	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [rax]

; 53   : 	}

  0000b	c3		 ret	 0
?getInternalFuel@FuelSys@Aircraft@@QEAANXZ ENDP		; Aircraft::FuelSys::getInternalFuel
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\fuelsys.h
;	COMDAT ?getFuelFlow@FuelSys@Aircraft@@QEAANXZ
_TEXT	SEGMENT
this$dead$ = 8
?getFuelFlow@FuelSys@Aircraft@@QEAANXZ PROC		; Aircraft::FuelSys::getFuelFlow, COMDAT

; 57   : 		return fuelFlow;

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?fuelSys@@3PEAVFuelSys@Aircraft@@EA
  00007	f2 0f 10 40 10	 movsd	 xmm0, QWORD PTR [rax+16]

; 58   : 	}

  0000c	c3		 ret	 0
?getFuelFlow@FuelSys@Aircraft@@QEAANXZ ENDP		; Aircraft::FuelSys::getFuelFlow
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\fuelsys.h
;	COMDAT ?simulate@FuelSys@Aircraft@@QEAAXNN@Z
_TEXT	SEGMENT
this$dead$ = 8
dt$ = 16
throttle$ = 24
?simulate@FuelSys@Aircraft@@QEAAXNN@Z PROC		; Aircraft::FuelSys::simulate, COMDAT

; 62   : 		double fuelCons = fuelFlow * throttle * dt;
; 63   : 		if (fuelCons > internalFuel)
; 64   : 		{
; 65   : 			fuelCons = internalFuel;

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?fuelSys@@3PEAVFuelSys@Aircraft@@EA
  00007	f2 0f 10 18	 movsd	 xmm3, QWORD PTR [rax]
  0000b	f2 0f 59 50 10	 mulsd	 xmm2, QWORD PTR [rax+16]
  00010	0f 28 c3	 movaps	 xmm0, xmm3

; 66   : 		}
; 67   : 
; 68   : 		preInterFuel = internalFuel;

  00013	f2 0f 11 58 08	 movsd	 QWORD PTR [rax+8], xmm3
  00018	f2 0f 59 d1	 mulsd	 xmm2, xmm1
  0001c	f2 0f 5d c2	 minsd	 xmm0, xmm2

; 69   : 		internalFuel = internalFuel - fuelCons;

  00020	f2 0f 5c d8	 subsd	 xmm3, xmm0
  00024	f2 0f 11 18	 movsd	 QWORD PTR [rax], xmm3

; 70   : 	}

  00028	c3		 ret	 0
?simulate@FuelSys@Aircraft@@QEAAXNN@Z ENDP		; Aircraft::FuelSys::simulate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\fuelsys.h
;	COMDAT ?getFuelQtyDelta@FuelSys@Aircraft@@QEBANXZ
_TEXT	SEGMENT
this$dead$ = 8
?getFuelQtyDelta@FuelSys@Aircraft@@QEBANXZ PROC		; Aircraft::FuelSys::getFuelQtyDelta, COMDAT

; 74   : 		return preInterFuel - internalFuel;

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?fuelSys@@3PEAVFuelSys@Aircraft@@EA
  00007	f2 0f 10 40 08	 movsd	 xmm0, QWORD PTR [rax+8]
  0000c	f2 0f 5c 00	 subsd	 xmm0, QWORD PTR [rax]

; 75   : 	}

  00010	c3		 ret	 0
?getFuelQtyDelta@FuelSys@Aircraft@@QEBANXZ ENDP		; Aircraft::FuelSys::getFuelQtyDelta
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\engine.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\engine.h
;	COMDAT ??0Engine@Aircraft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0Engine@Aircraft@@QEAA@XZ PROC			; Aircraft::Engine::Engine, COMDAT

; 15   : 		Engine(Vec3& pos_)
; 16   : 		{
; 17   : 			pos = pos_;
; 18   : 		};
; 19   : 		~Engine() {};
; 20   : 
; 21   : 		inline Force getThrust(double throttle);
; 22   : 		inline Vec3 getPos();
; 23   : 		inline void setPos(Vec3& pos_);
; 24   : 		inline double getRPM(double throttle);
; 25   : 		inline double getRPMNorm();
; 26   : 
; 27   : 	private:
; 28   : 		double maxThrustVal = 157000;

  00000	48 b8 00 00 00
	00 40 2a 03 41	 mov	 rax, 4684634491761721344 ; 41032a4000000000H
  0000a	48 89 01	 mov	 QWORD PTR [rcx], rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 21   : 	Vec3(double v) : x(v), y(v), z(v) {}

  0000d	33 c0		 xor	 eax, eax
  0000f	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00013	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
  00017	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\engine.h

; 14   : 		Engine() {};

  0001b	48 8b c1	 mov	 rax, rcx
  0001e	c3		 ret	 0
??0Engine@Aircraft@@QEAA@XZ ENDP			; Aircraft::Engine::Engine
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\engine.h
;	COMDAT ??1Engine@Aircraft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1Engine@Aircraft@@QEAA@XZ PROC			; Aircraft::Engine::~Engine, COMDAT

; 19   : 		~Engine() {};

  00000	c2 00 00	 ret	 0
??1Engine@Aircraft@@QEAA@XZ ENDP			; Aircraft::Engine::~Engine
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\engine.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\engine.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\engine.h
;	COMDAT ?getThrust@Engine@Aircraft@@QEAA?AUForce@@N@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
throttle$dead$ = 24
?getThrust@Engine@Aircraft@@QEAA?AUForce@@N@Z PROC	; Aircraft::Engine::getThrust, COMDAT
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  00000	33 c0		 xor	 eax, eax
  00002	48 89 02	 mov	 QWORD PTR [rdx], rax
  00005	48 89 42 08	 mov	 QWORD PTR [rdx+8], rax
  00009	48 89 42 10	 mov	 QWORD PTR [rdx+16], rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\engine.h

; 34   : 		return Force((throttle * maxThrustVal, 0, 0), pos);

  0000d	48 8b c2	 mov	 rax, rdx
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  00010	0f 10 41 08	 movups	 xmm0, XMMWORD PTR [rcx+8]
  00014	f2 0f 10 49 18	 movsd	 xmm1, QWORD PTR [rcx+24]
  00019	0f 11 42 18	 movups	 XMMWORD PTR [rdx+24], xmm0
  0001d	f2 0f 11 4a 28	 movsd	 QWORD PTR [rdx+40], xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\engine.h

; 35   : 	}

  00022	c3		 ret	 0
?getThrust@Engine@Aircraft@@QEAA?AUForce@@N@Z ENDP	; Aircraft::Engine::getThrust
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\engine.h
;	COMDAT ?setPos@Engine@Aircraft@@QEAAXAEAUVec3@@@Z
_TEXT	SEGMENT
this$ = 8
pos_$ = 16
?setPos@Engine@Aircraft@@QEAAXAEAUVec3@@@Z PROC		; Aircraft::Engine::setPos, COMDAT

; 44   : 		pos = pos_;

  00000	0f 10 02	 movups	 xmm0, XMMWORD PTR [rdx]
  00003	0f 11 41 08	 movups	 XMMWORD PTR [rcx+8], xmm0
  00007	f2 0f 10 4a 10	 movsd	 xmm1, QWORD PTR [rdx+16]
  0000c	f2 0f 11 49 18	 movsd	 QWORD PTR [rcx+24], xmm1

; 45   : 	}

  00011	c3		 ret	 0
?setPos@Engine@Aircraft@@QEAAXAEAUVec3@@@Z ENDP		; Aircraft::Engine::setPos
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\engine.h
;	COMDAT ?getRPM@Engine@Aircraft@@QEAANN@Z
_TEXT	SEGMENT
this$dead$ = 8
throttle$ = 16
?getRPM@Engine@Aircraft@@QEAANN@Z PROC			; Aircraft::Engine::getRPM, COMDAT

; 49   : 		return throttle * 3000;

  00000	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@40a7700000000000
  00008	0f 28 c1	 movaps	 xmm0, xmm1

; 50   : 	}

  0000b	c3		 ret	 0
?getRPM@Engine@Aircraft@@QEAANN@Z ENDP			; Aircraft::Engine::getRPM
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\engine.h
;	COMDAT ?getRPMNorm@Engine@Aircraft@@QEAANXZ
_TEXT	SEGMENT
this$dead$ = 8
?getRPMNorm@Engine@Aircraft@@QEAANXZ PROC		; Aircraft::Engine::getRPMNorm, COMDAT

; 54   : 		return 13000;

  00000	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@40c9640000000000

; 55   : 	}

  00008	c3		 ret	 0
?getRPMNorm@Engine@Aircraft@@QEAANXZ ENDP		; Aircraft::Engine::getRPMNorm
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\maths.h
;	COMDAT ?toDegrees@@YANN@Z
_TEXT	SEGMENT
radians$ = 8
?toDegrees@@YANN@Z PROC					; toDegrees, COMDAT

; 26   : 	return radians * 180.0 / PI;

  00000	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4066800000000000
  00008	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@400921fb54442eea

; 27   : }

  00010	c3		 ret	 0
?toDegrees@@YANN@Z ENDP					; toDegrees
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\maths.h
;	COMDAT ?toRad@@YANN@Z
_TEXT	SEGMENT
degrees$ = 8
?toRad@@YANN@Z PROC					; toRad, COMDAT

; 31   : 	return degrees * PI / 180.0;

  00000	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@400921fb54442eea
  00008	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4066800000000000

; 32   : }

  00010	c3		 ret	 0
?toRad@@YANN@Z ENDP					; toRad
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\maths.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\maths.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\maths.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\maths.h
;	COMDAT ?clamp@@YANNNN@Z
_TEXT	SEGMENT
value$ = 8
min$ = 16
max$ = 24
?clamp@@YANNNN@Z PROC					; clamp, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 66   :     return _Right < _Left ? _Right : _Left;

  00000	66 0f 2f c2	 comisd	 xmm0, xmm2
  00004	48 8d 44 24 18	 lea	 rax, QWORD PTR max$[rsp]
  00009	48 8d 4c 24 08	 lea	 rcx, QWORD PTR value$[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\maths.h

; 35   : {

  0000e	f2 0f 11 54 24
	18		 movsd	 QWORD PTR [rsp+24], xmm2
  00014	f2 0f 11 44 24
	08		 movsd	 QWORD PTR [rsp+8], xmm0
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 66   :     return _Right < _Left ? _Right : _Left;

  0001a	48 0f 46 c1	 cmovbe	 rax, rcx

; 43   :     return _Left < _Right ? _Right : _Left;

  0001e	f2 0f 10 18	 movsd	 xmm3, QWORD PTR [rax]
  00022	66 0f 2f cb	 comisd	 xmm1, xmm3
  00026	76 04		 jbe	 SHORT $LN7@clamp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\maths.h

; 36   : 	return std::max(std::min(value, max), min);

  00028	0f 28 c1	 movaps	 xmm0, xmm1

; 37   : }

  0002b	c3		 ret	 0
$LN7@clamp:
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 43   :     return _Left < _Right ? _Right : _Left;

  0002c	0f 28 c3	 movaps	 xmm0, xmm3
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\maths.h

; 37   : }

  0002f	c3		 ret	 0
?clamp@@YANNNN@Z ENDP					; clamp
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\maths.h
;	COMDAT ?lerpWeight@@YANNNN@Z
_TEXT	SEGMENT
v0$ = 8
v1$ = 16
w$ = 24
?lerpWeight@@YANNNN@Z PROC				; lerpWeight, COMDAT

; 42   : 	return v0 + w * (v1 - v0);

  00000	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00004	f2 0f 59 ca	 mulsd	 xmm1, xmm2
  00008	f2 0f 58 c1	 addsd	 xmm0, xmm1

; 43   : }

  0000c	c3		 ret	 0
?lerpWeight@@YANNNN@Z ENDP				; lerpWeight
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
;	COMDAT ??0Actuator@Aircraft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0Actuator@Aircraft@@QEAA@XZ PROC			; Aircraft::Actuator::Actuator, COMDAT

; 15   : 		Actuator(double speed) : speed(speed) {}
; 16   : 		~Actuator() {}
; 17   : 
; 18   : 		inline double inputUpdate(double targetPos, double dt);
; 19   : 		inline void physicsUpdate(double dt);
; 20   : 		inline double getPosition();
; 21   : 		inline void setActuatorFactor(double factor);
; 22   : 
; 23   : 		void setSpeed(double speed_) { speed = speed_; }
; 24   : 
; 25   : 		double getPos() const { return pos; }
; 26   : 
; 27   : 	private:
; 28   : 		double factor = 1;

  00000	48 b8 00 00 00
	00 00 00 f0 3f	 mov	 rax, 4607182418800017408 ; 3ff0000000000000H
  0000a	48 89 01	 mov	 QWORD PTR [rcx], rax

; 29   : 		double speed = 10;

  0000d	48 b8 00 00 00
	00 00 00 24 40	 mov	 rax, 4621819117588971520 ; 4024000000000000H
  00017	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 30   : 		double pos = 0;

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 31   : 		double targetPos = 0;

  00021	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax
  00025	48 8b c1	 mov	 rax, rcx
  00028	c3		 ret	 0
??0Actuator@Aircraft@@QEAA@XZ ENDP			; Aircraft::Actuator::Actuator
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
;	COMDAT ??1Actuator@Aircraft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1Actuator@Aircraft@@QEAA@XZ PROC			; Aircraft::Actuator::~Actuator, COMDAT

; 16   : 		~Actuator() {}

  00000	c2 00 00	 ret	 0
??1Actuator@Aircraft@@QEAA@XZ ENDP			; Aircraft::Actuator::~Actuator
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
;	COMDAT ?setActuatorFactor@Actuator@Aircraft@@QEAAXN@Z
_TEXT	SEGMENT
this$dead$ = 8
factor$dead$ = 16
?setActuatorFactor@Actuator@Aircraft@@QEAAXN@Z PROC	; Aircraft::Actuator::setActuatorFactor, COMDAT

; 41   : 		factor = factor;
; 42   : 	}

  00000	c2 00 00	 ret	 0
?setActuatorFactor@Actuator@Aircraft@@QEAAXN@Z ENDP	; Aircraft::Actuator::setActuatorFactor
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
;	COMDAT ?inputUpdate@Actuator@Aircraft@@QEAANNN@Z
_TEXT	SEGMENT
value$ = 96
this$ = 96
max$ = 104
targetPos$dead$ = 104
min$ = 112
dt$ = 112
?inputUpdate@Actuator@Aircraft@@QEAANNN@Z PROC		; Aircraft::Actuator::inputUpdate, COMDAT

; 45   : 	{

$LN24:
  00000	f2 0f 11 4c 24
	10		 movsd	 QWORD PTR [rsp+16], xmm1
  00006	53		 push	 rbx
  00007	48 83 ec 50	 sub	 rsp, 80			; 00000050H

; 53   : 		double reqSpd = (targetPos - pos) / dt;

  0000b	f2 0f 10 41 10	 movsd	 xmm0, QWORD PTR [rcx+16]
  00010	0f 57 e4	 xorps	 xmm4, xmm4

; 54   : 		double actSpd = 0;
; 55   : 		if (pos > 0)

  00013	66 0f 2f c4	 comisd	 xmm0, xmm4

; 45   : 	{

  00017	48 8b d9	 mov	 rbx, rcx

; 53   : 		double reqSpd = (targetPos - pos) / dt;

  0001a	f2 0f 10 59 18	 movsd	 xmm3, QWORD PTR [rcx+24]

; 45   : 	{

  0001f	0f 29 74 24 40	 movaps	 XMMWORD PTR [rsp+64], xmm6

; 53   : 		double reqSpd = (targetPos - pos) / dt;

  00024	0f 28 cb	 movaps	 xmm1, xmm3

; 54   : 		double actSpd = 0;
; 55   : 		if (pos > 0)

  00027	f2 0f 10 71 08	 movsd	 xmm6, QWORD PTR [rcx+8]
  0002c	f2 0f 5c c8	 subsd	 xmm1, xmm0

; 45   : 	{

  00030	0f 29 7c 24 30	 movaps	 XMMWORD PTR [rsp+48], xmm7
  00035	44 0f 29 44 24
	20		 movaps	 XMMWORD PTR [rsp+32], xmm8
  0003b	44 0f 28 c2	 movaps	 xmm8, xmm2

; 53   : 		double reqSpd = (targetPos - pos) / dt;

  0003f	0f 28 e9	 movaps	 xmm5, xmm1
  00042	f2 0f 5e ea	 divsd	 xmm5, xmm2

; 54   : 		double actSpd = 0;
; 55   : 		if (pos > 0)

  00046	76 06		 jbe	 SHORT $LN4@inputUpdat

; 56   : 		{
; 57   : 			if (targetPos - pos < 0)

  00048	66 0f 2f e1	 comisd	 xmm4, xmm1

; 58   : 			{
; 59   : 				actSpd = speed;
; 60   : 			}
; 61   : 			else
; 62   : 			{
; 63   : 				actSpd = speed * factor;
; 64   : 			}
; 65   : 		}

  0004c	eb 04		 jmp	 SHORT $LN21@inputUpdat
$LN4@inputUpdat:

; 66   : 		else
; 67   : 		{
; 68   : 			if (targetPos - pos > 0)

  0004e	66 0f 2f cc	 comisd	 xmm1, xmm4
$LN21@inputUpdat:
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib

; 24   :     return _CSTD fabs(_Xx);

  00052	77 04		 ja	 SHORT $LN9@inputUpdat
  00054	f2 0f 59 31	 mulsd	 xmm6, QWORD PTR [rcx]
$LN9@inputUpdat:
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h

; 78   : 		if (abs(reqSpd) <= actSpd)

  00058	f2 0f 10 3d 00
	00 00 00	 movsd	 xmm7, QWORD PTR __real@3ff0000000000000
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib

; 24   :     return _CSTD fabs(_Xx);

  00060	0f 28 c5	 movaps	 xmm0, xmm5
  00063	0f 54 05 00 00
	00 00		 andps	 xmm0, QWORD PTR __xmm@7fffffffffffffff7fffffffffffffff
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h

; 78   : 		if (abs(reqSpd) <= actSpd)

  0006a	66 0f 2f f0	 comisd	 xmm6, xmm0
  0006e	73 1d		 jae	 SHORT $LN11@inputUpdat

; 79   : 		{
; 80   : 			pos = targetPos;
; 81   : 		}
; 82   : 		else
; 83   : 		{
; 84   : 			pos += copysign(1.0, reqSpd) * actSpd * dt;

  00070	0f 28 cd	 movaps	 xmm1, xmm5
  00073	0f 28 c7	 movaps	 xmm0, xmm7
  00076	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_copysign
  0007c	0f 28 d8	 movaps	 xmm3, xmm0
  0007f	f2 0f 59 de	 mulsd	 xmm3, xmm6
  00083	f2 41 0f 59 d8	 mulsd	 xmm3, xmm8
  00088	f2 0f 58 5b 10	 addsd	 xmm3, QWORD PTR [rbx+16]
$LN11@inputUpdat:

; 87   : 		pos = clamp(pos, -1, 1);

  0008d	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bff0000000000000
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 66   :     return _Right < _Left ? _Right : _Left;

  00095	48 8d 44 24 60	 lea	 rax, QWORD PTR value$[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h

; 49   : 	}

  0009a	0f 28 74 24 40	 movaps	 xmm6, XMMWORD PTR [rsp+64]
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 66   :     return _Right < _Left ? _Right : _Left;

  0009f	48 8d 4c 24 68	 lea	 rcx, QWORD PTR max$[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h

; 49   : 	}

  000a4	44 0f 28 44 24
	20		 movaps	 xmm8, XMMWORD PTR [rsp+32]

; 87   : 		pos = clamp(pos, -1, 1);

  000aa	66 0f 2f df	 comisd	 xmm3, xmm7
  000ae	f2 0f 11 7c 24
	68		 movsd	 QWORD PTR max$[rsp], xmm7

; 49   : 	}

  000b4	0f 28 7c 24 30	 movaps	 xmm7, XMMWORD PTR [rsp+48]
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 66   :     return _Right < _Left ? _Right : _Left;

  000b9	48 0f 46 c8	 cmovbe	 rcx, rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h

; 87   : 		pos = clamp(pos, -1, 1);

  000bd	f2 0f 11 5c 24
	60		 movsd	 QWORD PTR value$[rsp], xmm3
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 43   :     return _Left < _Right ? _Right : _Left;

  000c3	48 8d 44 24 70	 lea	 rax, QWORD PTR min$[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h

; 87   : 		pos = clamp(pos, -1, 1);

  000c8	f2 0f 11 4c 24
	70		 movsd	 QWORD PTR min$[rsp], xmm1
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 43   :     return _Left < _Right ? _Right : _Left;

  000ce	66 0f 2f 09	 comisd	 xmm1, QWORD PTR [rcx]
  000d2	48 0f 46 c1	 cmovbe	 rax, rcx
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h

; 87   : 		pos = clamp(pos, -1, 1);

  000d6	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [rax]
  000da	f2 0f 11 43 10	 movsd	 QWORD PTR [rbx+16], xmm0

; 49   : 	}

  000df	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000e3	5b		 pop	 rbx
  000e4	c3		 ret	 0
?inputUpdate@Actuator@Aircraft@@QEAANNN@Z ENDP		; Aircraft::Actuator::inputUpdate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
;	COMDAT ?physicsUpdate@Actuator@Aircraft@@QEAAXN@Z
_TEXT	SEGMENT
max$ = 96
this$ = 96
value$ = 104
dt$ = 104
min$ = 112
?physicsUpdate@Actuator@Aircraft@@QEAAXN@Z PROC		; Aircraft::Actuator::physicsUpdate, COMDAT

; 52   : 	{

$LN22:
  00000	40 53		 push	 rbx
  00002	48 83 ec 50	 sub	 rsp, 80			; 00000050H

; 53   : 		double reqSpd = (targetPos - pos) / dt;

  00006	f2 0f 10 41 10	 movsd	 xmm0, QWORD PTR [rcx+16]
  0000b	0f 57 e4	 xorps	 xmm4, xmm4

; 54   : 		double actSpd = 0;
; 55   : 		if (pos > 0)

  0000e	66 0f 2f c4	 comisd	 xmm0, xmm4
  00012	48 8b d9	 mov	 rbx, rcx
  00015	f2 0f 10 51 18	 movsd	 xmm2, QWORD PTR [rcx+24]
  0001a	0f 29 74 24 40	 movaps	 XMMWORD PTR [rsp+64], xmm6
  0001f	0f 28 da	 movaps	 xmm3, xmm2
  00022	f2 0f 10 71 08	 movsd	 xmm6, QWORD PTR [rcx+8]
  00027	f2 0f 5c d8	 subsd	 xmm3, xmm0
  0002b	0f 29 7c 24 30	 movaps	 XMMWORD PTR [rsp+48], xmm7
  00030	44 0f 29 44 24
	20		 movaps	 XMMWORD PTR [rsp+32], xmm8
  00036	44 0f 28 c1	 movaps	 xmm8, xmm1
  0003a	0f 28 cb	 movaps	 xmm1, xmm3
  0003d	f2 41 0f 5e c8	 divsd	 xmm1, xmm8
  00042	76 06		 jbe	 SHORT $LN2@physicsUpd

; 56   : 		{
; 57   : 			if (targetPos - pos < 0)

  00044	66 0f 2f e3	 comisd	 xmm4, xmm3

; 58   : 			{
; 59   : 				actSpd = speed;
; 60   : 			}
; 61   : 			else
; 62   : 			{
; 63   : 				actSpd = speed * factor;
; 64   : 			}
; 65   : 		}

  00048	eb 04		 jmp	 SHORT $LN19@physicsUpd
$LN2@physicsUpd:

; 66   : 		else
; 67   : 		{
; 68   : 			if (targetPos - pos > 0)

  0004a	66 0f 2f dc	 comisd	 xmm3, xmm4
$LN19@physicsUpd:
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib

; 24   :     return _CSTD fabs(_Xx);

  0004e	77 04		 ja	 SHORT $LN7@physicsUpd
  00050	f2 0f 59 31	 mulsd	 xmm6, QWORD PTR [rcx]
$LN7@physicsUpd:
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h

; 78   : 		if (abs(reqSpd) <= actSpd)

  00054	f2 0f 10 3d 00
	00 00 00	 movsd	 xmm7, QWORD PTR __real@3ff0000000000000
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib

; 24   :     return _CSTD fabs(_Xx);

  0005c	0f 28 c1	 movaps	 xmm0, xmm1
  0005f	0f 54 05 00 00
	00 00		 andps	 xmm0, QWORD PTR __xmm@7fffffffffffffff7fffffffffffffff
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h

; 78   : 		if (abs(reqSpd) <= actSpd)

  00066	66 0f 2f f0	 comisd	 xmm6, xmm0
  0006a	73 1a		 jae	 SHORT $LN9@physicsUpd

; 79   : 		{
; 80   : 			pos = targetPos;
; 81   : 		}
; 82   : 		else
; 83   : 		{
; 84   : 			pos += copysign(1.0, reqSpd) * actSpd * dt;

  0006c	0f 28 c7	 movaps	 xmm0, xmm7
  0006f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_copysign
  00075	0f 28 d0	 movaps	 xmm2, xmm0
  00078	f2 0f 59 d6	 mulsd	 xmm2, xmm6
  0007c	f2 41 0f 59 d0	 mulsd	 xmm2, xmm8
  00081	f2 0f 58 53 10	 addsd	 xmm2, QWORD PTR [rbx+16]
$LN9@physicsUpd:

; 87   : 		pos = clamp(pos, -1, 1);

  00086	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bff0000000000000
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 66   :     return _Right < _Left ? _Right : _Left;

  0008e	48 8d 44 24 68	 lea	 rax, QWORD PTR value$[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h

; 88   : 	}

  00093	0f 28 74 24 40	 movaps	 xmm6, XMMWORD PTR [rsp+64]
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 66   :     return _Right < _Left ? _Right : _Left;

  00098	48 8d 4c 24 60	 lea	 rcx, QWORD PTR max$[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h

; 88   : 	}

  0009d	44 0f 28 44 24
	20		 movaps	 xmm8, XMMWORD PTR [rsp+32]
  000a3	66 0f 2f d7	 comisd	 xmm2, xmm7
  000a7	f2 0f 11 7c 24
	60		 movsd	 QWORD PTR max$[rsp], xmm7
  000ad	0f 28 7c 24 30	 movaps	 xmm7, XMMWORD PTR [rsp+48]
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 66   :     return _Right < _Left ? _Right : _Left;

  000b2	48 0f 46 c8	 cmovbe	 rcx, rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h

; 87   : 		pos = clamp(pos, -1, 1);

  000b6	f2 0f 11 54 24
	68		 movsd	 QWORD PTR value$[rsp], xmm2
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 43   :     return _Left < _Right ? _Right : _Left;

  000bc	48 8d 44 24 70	 lea	 rax, QWORD PTR min$[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h

; 87   : 		pos = clamp(pos, -1, 1);

  000c1	f2 0f 11 4c 24
	70		 movsd	 QWORD PTR min$[rsp], xmm1
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 43   :     return _Left < _Right ? _Right : _Left;

  000c7	66 0f 2f 09	 comisd	 xmm1, QWORD PTR [rcx]
  000cb	48 0f 46 c1	 cmovbe	 rax, rcx
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h

; 87   : 		pos = clamp(pos, -1, 1);

  000cf	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000d2	48 89 43 10	 mov	 QWORD PTR [rbx+16], rax

; 88   : 	}

  000d6	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000da	5b		 pop	 rbx
  000db	c3		 ret	 0
?physicsUpdate@Actuator@Aircraft@@QEAAXN@Z ENDP		; Aircraft::Actuator::physicsUpdate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ??0AirFrame@Aircraft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0AirFrame@Aircraft@@QEAA@XZ PROC			; Aircraft::AirFrame::AirFrame, COMDAT

; 17   : 		~AirFrame() {};
; 18   : 
; 19   : 		Actuator getActLeftEle() const { return actLeftEle; }
; 20   : 
; 21   : 		void updateActEle(double dt, double mach, double pitch)
; 22   : 		{
; 23   : 			double stabDflt = toDegrees(stabilizer);
; 24   : 			double bungeeTrimDeg = (stabDflt + 1.0) / (-13.25) * (-0.65306 - 7.3469) - 0.65306;
; 25   : 			double bungeeTrimStick = bungeeTrimDeg / 20.0; // transformation from control surface deflection to stick normalized coordinate goes here
; 26   : 			double speedbrakeTrim = -0.15 * spdBrkPos;
; 27   : 			double eleSpd = clamp(1.0 - 1.2 * pow(mach, 3.0), 0.1, 1.0);
; 28   : 			actLeftEle.setActuatorFactor(eleSpd);
; 29   : 			actRightEle.setActuatorFactor(eleSpd);
; 30   : 			// printf("factor: %lf\n", clamp(1.0 - 1.2 * pow(m_state.getMach(), 3.0), 0.1, 1.0));
; 31   : 
; 32   : 			double eleZeroForceDflt = bungeeTrimStick + speedbrakeTrim;
; 33   : 			double input = pitch + eleZeroForceDflt;
; 34   : 			leftElePos = actLeftEle.inputUpdate(input, dt);
; 35   : 			rightElePos = actRightEle.inputUpdate(input, dt);
; 36   : 		}
; 37   : 
; 38   : 		double getStabilizer() const { return stabilizer; }
; 39   : 
; 40   : 		void updateStabilizer(double dt, double ptichTrim)
; 41   : 		{
; 42   : 			stabilizer = toRad((ptichTrim - 1.0) / (-2.0) * (-13.25) + 12.25);
; 43   : 		}
; 44   : 
; 45   : 		double getSpdBrkPos() const { return spdBrkPos; }
; 46   : 		void setSpdBrkPos(double spdBrkPos_) { spdBrkPos = spdBrkPos_; }
; 47   : 
; 48   : 		void updateActLeftAlrn(double dt, double roll, double rollTrim)
; 49   : 		{
; 50   : 			double input = roll + rollTrim;
; 51   : 			leftAlrnPos = actLeftAlrn.inputUpdate(-input, dt);
; 52   : 		}
; 53   : 
; 54   : 		void updateActRightAlrn(double dt, double roll, double rollTrim)
; 55   : 		{
; 56   : 			double input = roll + rollTrim;
; 57   : 			rightAlrnPos = actRightAlrn.inputUpdate(input, dt);
; 58   : 		}
; 59   : 
; 60   : 		void updateActRudder(double dt, double yaw, double yawDamper, double yawTrim)
; 61   : 		{
; 62   : 			double input = yaw + yawDamper + yawTrim;
; 63   : 			rudderPos = actRudder.inputUpdate(input, dt);
; 64   : 		}
; 65   : 
; 66   : 		double getLeftAlrnPos() const { return leftAlrnPos; }
; 67   : 
; 68   : 		double getRightAlrnPos() const { return rightAlrnPos; }
; 69   : 
; 70   : 		double getLeftElePos() const { return leftElePos; }
; 71   : 
; 72   : 		double getRightElePos() const { return rightElePos; }
; 73   : 
; 74   : 		double getRudderPos() const { return rudderPos; }
; 75   : 
; 76   : 		double getStabAnim() const
; 77   : 		{
; 78   : 			double stab = toDegrees(stabilizer);
; 79   : 			if (stab > 0.0)
; 80   : 			{
; 81   : 				return stab / 12.25;
; 82   : 			}
; 83   : 			else
; 84   : 			{
; 85   : 				return stab;
; 86   : 			}
; 87   : 		}
; 88   : 
; 89   : 		double getLeftSltPos() const { return leftSltPos; }
; 90   : 		void setLeftSltPos(double leftSltPos_) { leftSltPos = leftSltPos_; }
; 91   : 
; 92   : 		double getRightSltPos() const { return rightSltPos; }
; 93   : 		void setRightSltPos(double rightSltPos_) { rightSltPos = rightSltPos_; }
; 94   : 
; 95   : 		double getLeftFlpPos() const { return leftFlpPos; }
; 96   : 		void setLeftFlpPos(double leftFlpPos_) { leftFlpPos = leftFlpPos_; }
; 97   : 
; 98   : 		double getRightFlpPos() const { return rightFlpPos; }
; 99   : 		void setRightFlpPos(double rightFlpPos_) { rightFlpPos = rightFlpPos_; }
; 100  : 
; 101  : 		void simulate(double dt, double mach, double pitch, double pitchTrim, double roll, double rollTrim, double yaw, double yawDamper, double yawTrim)
; 102  : 		{
; 103  : 			updateWheels(dt);
; 104  : 			updateStabilizer(dt, pitchTrim);
; 105  : 			updateActEle(dt, mach, pitch);
; 106  : 			updateActLeftAlrn(dt, roll, rollTrim);
; 107  : 			updateActRudder(dt, yaw, yawDamper, yawTrim);
; 108  : 		}
; 109  : 
; 110  : 		void updateWheels(double dt)
; 111  : 		{
; 112  : 			static constexpr double whlRdus = 0.609;
; 113  : 			static constexpr double whlfctr = 2.0 * PI * whlRdus;
; 114  : 			leftWhlSpd = whlfctr * calWhlArgChange(leftWhlArg, leftWhlPreArg) / dt;
; 115  : 			rightWhlSpd = whlfctr * calWhlArgChange(rightWhlArg, rightWhlPreArg) / dt;
; 116  : 
; 117  : 			leftWhlPreArg = leftWhlArg;
; 118  : 			rightWhlPreArg = rightWhlArg;
; 119  : 
; 120  : 			const Vec3 noseWhlVct = noseWhlForce.pos - pivotPos;
; 121  : 			const Vec3 noseTq = cross(noseWhlVct, noseWhlForce.force);
; 122  : 			const double dmpTq = noseWhlAngV * noseWhlDmp;
; 123  : 			const double tqSign = copysign(1.0, noseTq.y);
; 124  : 			static constexpr double maxBrkOutSpd = 0.1; // m/s
; 125  : 			const double weight = clamp(noseWhlGS / maxBrkOutSpd, 0.0, 1.0);
; 126  : 			const double brkOutTq = lerpWeight(brkOutTq, 0.0, weight);
; 127  : 			const double tqAftBrkOut = tqSign * std::max(abs(noseTq.y) - brkOutTq, 0.0);
; 128  : 			const double tqTotal = tqAftBrkOut - dmpTq;
; 129  : 			noseWhlAngV += tqTotal * dt;
; 130  : 			noseWhlAng += noseWhlAngV * dt;
; 131  : 		}
; 132  : 
; 133  : 		double getLeftGrPos() const { return leftGrPos; }
; 134  : 		void setLeftGrPos(double leftGrPos_) { leftGrPos = leftGrPos_; }
; 135  : 
; 136  : 		double getRightGrPos() const { return rightGrPos; }
; 137  : 		void setRightGrPos(double rightGrPos_) { rightGrPos = rightGrPos_; }
; 138  : 
; 139  : 		double getNoseGrPos() const { return noseGrPos; }
; 140  : 		void setNoseGrPos(double noseGrPos_) { noseGrPos = noseGrPos_; }
; 141  : 
; 142  : 		static double calWhlArgChange(double arg, double preArg)
; 143  : 		{
; 144  : 			double dltUpper = (1.0 - preArg) + arg;
; 145  : 			double dltLower = (arg - preArg);
; 146  : 
; 147  : 			if (abs(dltUpper) < abs(dltLower))
; 148  : 				return dltUpper;
; 149  : 			else
; 150  : 				return dltLower;
; 151  : 		}
; 152  : 
; 153  : 		void setRightWhlArg(double rightWhlArg_) { rightWhlArg = rightWhlArg_; }
; 154  : 
; 155  : 		void setLeftWhlArg(double leftWhlArg_) { leftWhlArg = leftWhlArg_; }
; 156  : 
; 157  : 		void setNoseWhlForce(const Force& noseWhlForce_) { noseWhlForce = noseWhlForce_; }
; 158  : 
; 159  : 		double getNoseWhlAng() const { return noseWhlAng; }
; 160  : 
; 161  : 		double getNoseWhlGS() const { return noseWhlGS; }
; 162  : 		void setNoseWhlGS(double noseWhlGS_) { noseWhlGS = noseWhlGS_; }
; 163  : 
; 164  : 		double getLeftWhlComp() const { return leftWhlComp; }
; 165  : 		void setLeftWhlComp(double leftWhlComp_) { leftWhlComp = leftWhlComp_; }
; 166  : 
; 167  : 		double getRightWhlComp() const { return rightWhlComp; }
; 168  : 		void setRightWhlComp(double rightWhlComp_) { rightWhlComp = rightWhlComp_; }
; 169  : 
; 170  : 		double getNoseWhlComp() const { return noseWhlComp; }
; 171  : 		void setNoseWhlComp(double noseWhlComp_) { noseWhlComp = noseWhlComp_; }
; 172  : 
; 173  : 		double getLeftWhlGS() const { return leftWhlGS; }
; 174  : 		void setLeftWhlGS(double leftWhlGS_) { leftWhlGS = leftWhlGS_; }
; 175  : 
; 176  : 		double getRightWhlGS() const { return rightWhlGS; }
; 177  : 		void setRightWhlGS(double rightWhlGS_) { rightWhlGS = rightWhlGS_; }
; 178  : 
; 179  : 	private:
; 180  : 		// Control Surfaces
; 181  : 		double stabilizer = 0.0;

  00000	45 33 c0	 xor	 r8d, r8d
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h

; 29   : 		double speed = 10;

  00003	48 b8 00 00 00
	00 00 00 24 40	 mov	 rax, 4621819117588971520 ; 4024000000000000H
  0000d	48 ba 00 00 00
	00 00 00 f0 3f	 mov	 rdx, 4607182418800017408 ; 3ff0000000000000H
  00017	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
  0001b	48 89 41 38	 mov	 QWORD PTR [rcx+56], rax
  0001f	48 89 41 60	 mov	 QWORD PTR [rcx+96], rax
  00023	48 89 81 88 00
	00 00		 mov	 QWORD PTR [rcx+136], rax
  0002a	48 89 81 b0 00
	00 00		 mov	 QWORD PTR [rcx+176], rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 20   : 	Vec3(double x_, double y_, double z_) :x(x_), y(y_), z(z_) {}

  00031	48 b8 4a 9b aa
	7b 64 93 05 40	 mov	 rax, 4613255453091732298 ; 400593647baa9b4aH
  0003b	48 89 81 b0 01
	00 00		 mov	 QWORD PTR [rcx+432], rax
  00042	48 b8 d5 23 0d
	6e 6b 2b 02 c0	 mov	 rax, -4611075328066116651 ; c0022b6b6e0d23d5H
  0004c	48 89 81 b8 01
	00 00		 mov	 QWORD PTR [rcx+440], rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 16   : 		AirFrame() {};

  00053	48 8b c1	 mov	 rax, rcx

; 17   : 		~AirFrame() {};
; 18   : 
; 19   : 		Actuator getActLeftEle() const { return actLeftEle; }
; 20   : 
; 21   : 		void updateActEle(double dt, double mach, double pitch)
; 22   : 		{
; 23   : 			double stabDflt = toDegrees(stabilizer);
; 24   : 			double bungeeTrimDeg = (stabDflt + 1.0) / (-13.25) * (-0.65306 - 7.3469) - 0.65306;
; 25   : 			double bungeeTrimStick = bungeeTrimDeg / 20.0; // transformation from control surface deflection to stick normalized coordinate goes here
; 26   : 			double speedbrakeTrim = -0.15 * spdBrkPos;
; 27   : 			double eleSpd = clamp(1.0 - 1.2 * pow(mach, 3.0), 0.1, 1.0);
; 28   : 			actLeftEle.setActuatorFactor(eleSpd);
; 29   : 			actRightEle.setActuatorFactor(eleSpd);
; 30   : 			// printf("factor: %lf\n", clamp(1.0 - 1.2 * pow(m_state.getMach(), 3.0), 0.1, 1.0));
; 31   : 
; 32   : 			double eleZeroForceDflt = bungeeTrimStick + speedbrakeTrim;
; 33   : 			double input = pitch + eleZeroForceDflt;
; 34   : 			leftElePos = actLeftEle.inputUpdate(input, dt);
; 35   : 			rightElePos = actRightEle.inputUpdate(input, dt);
; 36   : 		}
; 37   : 
; 38   : 		double getStabilizer() const { return stabilizer; }
; 39   : 
; 40   : 		void updateStabilizer(double dt, double ptichTrim)
; 41   : 		{
; 42   : 			stabilizer = toRad((ptichTrim - 1.0) / (-2.0) * (-13.25) + 12.25);
; 43   : 		}
; 44   : 
; 45   : 		double getSpdBrkPos() const { return spdBrkPos; }
; 46   : 		void setSpdBrkPos(double spdBrkPos_) { spdBrkPos = spdBrkPos_; }
; 47   : 
; 48   : 		void updateActLeftAlrn(double dt, double roll, double rollTrim)
; 49   : 		{
; 50   : 			double input = roll + rollTrim;
; 51   : 			leftAlrnPos = actLeftAlrn.inputUpdate(-input, dt);
; 52   : 		}
; 53   : 
; 54   : 		void updateActRightAlrn(double dt, double roll, double rollTrim)
; 55   : 		{
; 56   : 			double input = roll + rollTrim;
; 57   : 			rightAlrnPos = actRightAlrn.inputUpdate(input, dt);
; 58   : 		}
; 59   : 
; 60   : 		void updateActRudder(double dt, double yaw, double yawDamper, double yawTrim)
; 61   : 		{
; 62   : 			double input = yaw + yawDamper + yawTrim;
; 63   : 			rudderPos = actRudder.inputUpdate(input, dt);
; 64   : 		}
; 65   : 
; 66   : 		double getLeftAlrnPos() const { return leftAlrnPos; }
; 67   : 
; 68   : 		double getRightAlrnPos() const { return rightAlrnPos; }
; 69   : 
; 70   : 		double getLeftElePos() const { return leftElePos; }
; 71   : 
; 72   : 		double getRightElePos() const { return rightElePos; }
; 73   : 
; 74   : 		double getRudderPos() const { return rudderPos; }
; 75   : 
; 76   : 		double getStabAnim() const
; 77   : 		{
; 78   : 			double stab = toDegrees(stabilizer);
; 79   : 			if (stab > 0.0)
; 80   : 			{
; 81   : 				return stab / 12.25;
; 82   : 			}
; 83   : 			else
; 84   : 			{
; 85   : 				return stab;
; 86   : 			}
; 87   : 		}
; 88   : 
; 89   : 		double getLeftSltPos() const { return leftSltPos; }
; 90   : 		void setLeftSltPos(double leftSltPos_) { leftSltPos = leftSltPos_; }
; 91   : 
; 92   : 		double getRightSltPos() const { return rightSltPos; }
; 93   : 		void setRightSltPos(double rightSltPos_) { rightSltPos = rightSltPos_; }
; 94   : 
; 95   : 		double getLeftFlpPos() const { return leftFlpPos; }
; 96   : 		void setLeftFlpPos(double leftFlpPos_) { leftFlpPos = leftFlpPos_; }
; 97   : 
; 98   : 		double getRightFlpPos() const { return rightFlpPos; }
; 99   : 		void setRightFlpPos(double rightFlpPos_) { rightFlpPos = rightFlpPos_; }
; 100  : 
; 101  : 		void simulate(double dt, double mach, double pitch, double pitchTrim, double roll, double rollTrim, double yaw, double yawDamper, double yawTrim)
; 102  : 		{
; 103  : 			updateWheels(dt);
; 104  : 			updateStabilizer(dt, pitchTrim);
; 105  : 			updateActEle(dt, mach, pitch);
; 106  : 			updateActLeftAlrn(dt, roll, rollTrim);
; 107  : 			updateActRudder(dt, yaw, yawDamper, yawTrim);
; 108  : 		}
; 109  : 
; 110  : 		void updateWheels(double dt)
; 111  : 		{
; 112  : 			static constexpr double whlRdus = 0.609;
; 113  : 			static constexpr double whlfctr = 2.0 * PI * whlRdus;
; 114  : 			leftWhlSpd = whlfctr * calWhlArgChange(leftWhlArg, leftWhlPreArg) / dt;
; 115  : 			rightWhlSpd = whlfctr * calWhlArgChange(rightWhlArg, rightWhlPreArg) / dt;
; 116  : 
; 117  : 			leftWhlPreArg = leftWhlArg;
; 118  : 			rightWhlPreArg = rightWhlArg;
; 119  : 
; 120  : 			const Vec3 noseWhlVct = noseWhlForce.pos - pivotPos;
; 121  : 			const Vec3 noseTq = cross(noseWhlVct, noseWhlForce.force);
; 122  : 			const double dmpTq = noseWhlAngV * noseWhlDmp;
; 123  : 			const double tqSign = copysign(1.0, noseTq.y);
; 124  : 			static constexpr double maxBrkOutSpd = 0.1; // m/s
; 125  : 			const double weight = clamp(noseWhlGS / maxBrkOutSpd, 0.0, 1.0);
; 126  : 			const double brkOutTq = lerpWeight(brkOutTq, 0.0, weight);
; 127  : 			const double tqAftBrkOut = tqSign * std::max(abs(noseTq.y) - brkOutTq, 0.0);
; 128  : 			const double tqTotal = tqAftBrkOut - dmpTq;
; 129  : 			noseWhlAngV += tqTotal * dt;
; 130  : 			noseWhlAng += noseWhlAngV * dt;
; 131  : 		}
; 132  : 
; 133  : 		double getLeftGrPos() const { return leftGrPos; }
; 134  : 		void setLeftGrPos(double leftGrPos_) { leftGrPos = leftGrPos_; }
; 135  : 
; 136  : 		double getRightGrPos() const { return rightGrPos; }
; 137  : 		void setRightGrPos(double rightGrPos_) { rightGrPos = rightGrPos_; }
; 138  : 
; 139  : 		double getNoseGrPos() const { return noseGrPos; }
; 140  : 		void setNoseGrPos(double noseGrPos_) { noseGrPos = noseGrPos_; }
; 141  : 
; 142  : 		static double calWhlArgChange(double arg, double preArg)
; 143  : 		{
; 144  : 			double dltUpper = (1.0 - preArg) + arg;
; 145  : 			double dltLower = (arg - preArg);
; 146  : 
; 147  : 			if (abs(dltUpper) < abs(dltLower))
; 148  : 				return dltUpper;
; 149  : 			else
; 150  : 				return dltLower;
; 151  : 		}
; 152  : 
; 153  : 		void setRightWhlArg(double rightWhlArg_) { rightWhlArg = rightWhlArg_; }
; 154  : 
; 155  : 		void setLeftWhlArg(double leftWhlArg_) { leftWhlArg = leftWhlArg_; }
; 156  : 
; 157  : 		void setNoseWhlForce(const Force& noseWhlForce_) { noseWhlForce = noseWhlForce_; }
; 158  : 
; 159  : 		double getNoseWhlAng() const { return noseWhlAng; }
; 160  : 
; 161  : 		double getNoseWhlGS() const { return noseWhlGS; }
; 162  : 		void setNoseWhlGS(double noseWhlGS_) { noseWhlGS = noseWhlGS_; }
; 163  : 
; 164  : 		double getLeftWhlComp() const { return leftWhlComp; }
; 165  : 		void setLeftWhlComp(double leftWhlComp_) { leftWhlComp = leftWhlComp_; }
; 166  : 
; 167  : 		double getRightWhlComp() const { return rightWhlComp; }
; 168  : 		void setRightWhlComp(double rightWhlComp_) { rightWhlComp = rightWhlComp_; }
; 169  : 
; 170  : 		double getNoseWhlComp() const { return noseWhlComp; }
; 171  : 		void setNoseWhlComp(double noseWhlComp_) { noseWhlComp = noseWhlComp_; }
; 172  : 
; 173  : 		double getLeftWhlGS() const { return leftWhlGS; }
; 174  : 		void setLeftWhlGS(double leftWhlGS_) { leftWhlGS = leftWhlGS_; }
; 175  : 
; 176  : 		double getRightWhlGS() const { return rightWhlGS; }
; 177  : 		void setRightWhlGS(double rightWhlGS_) { rightWhlGS = rightWhlGS_; }
; 178  : 
; 179  : 	private:
; 180  : 		// Control Surfaces
; 181  : 		double stabilizer = 0.0;

  00056	4c 89 01	 mov	 QWORD PTR [rcx], r8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h

; 28   : 		double factor = 1;

  00059	48 89 51 08	 mov	 QWORD PTR [rcx+8], rdx

; 30   : 		double pos = 0;

  0005d	4c 89 41 18	 mov	 QWORD PTR [rcx+24], r8

; 31   : 		double targetPos = 0;

  00061	4c 89 41 20	 mov	 QWORD PTR [rcx+32], r8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 183  : 		double leftAlrnPos = 0.0;

  00065	4c 89 41 28	 mov	 QWORD PTR [rcx+40], r8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h

; 28   : 		double factor = 1;

  00069	48 89 51 30	 mov	 QWORD PTR [rcx+48], rdx

; 30   : 		double pos = 0;

  0006d	4c 89 41 40	 mov	 QWORD PTR [rcx+64], r8

; 31   : 		double targetPos = 0;

  00071	4c 89 41 48	 mov	 QWORD PTR [rcx+72], r8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 186  : 		double rightAlrnPos = 0.0;

  00075	4c 89 41 50	 mov	 QWORD PTR [rcx+80], r8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h

; 28   : 		double factor = 1;

  00079	48 89 51 58	 mov	 QWORD PTR [rcx+88], rdx

; 30   : 		double pos = 0;

  0007d	4c 89 41 68	 mov	 QWORD PTR [rcx+104], r8

; 31   : 		double targetPos = 0;

  00081	4c 89 41 70	 mov	 QWORD PTR [rcx+112], r8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 189  : 		double leftElePos = 0.0;

  00085	4c 89 41 78	 mov	 QWORD PTR [rcx+120], r8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h

; 28   : 		double factor = 1;

  00089	48 89 91 80 00
	00 00		 mov	 QWORD PTR [rcx+128], rdx

; 30   : 		double pos = 0;

  00090	4c 89 81 90 00
	00 00		 mov	 QWORD PTR [rcx+144], r8

; 31   : 		double targetPos = 0;

  00097	4c 89 81 98 00
	00 00		 mov	 QWORD PTR [rcx+152], r8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 192  : 		double rightElePos = 0.0;

  0009e	4c 89 81 a0 00
	00 00		 mov	 QWORD PTR [rcx+160], r8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h

; 28   : 		double factor = 1;

  000a5	48 89 91 a8 00
	00 00		 mov	 QWORD PTR [rcx+168], rdx

; 30   : 		double pos = 0;

  000ac	4c 89 81 b8 00
	00 00		 mov	 QWORD PTR [rcx+184], r8

; 31   : 		double targetPos = 0;

  000b3	4c 89 81 c0 00
	00 00		 mov	 QWORD PTR [rcx+192], r8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 195  : 		double rudderPos = 0.0;

  000ba	4c 89 81 c8 00
	00 00		 mov	 QWORD PTR [rcx+200], r8

; 196  : 
; 197  : 		// Speed Brake
; 198  : 		double spdBrkPos = 0.0;

  000c1	4c 89 81 d0 00
	00 00		 mov	 QWORD PTR [rcx+208], r8

; 199  : 
; 200  : 		// Flaps
; 201  : 		double leftFlpPos = 0.0;

  000c8	4c 89 81 d8 00
	00 00		 mov	 QWORD PTR [rcx+216], r8

; 202  : 		double rightFlpPos = 0.0;

  000cf	4c 89 81 e0 00
	00 00		 mov	 QWORD PTR [rcx+224], r8

; 203  : 
; 204  : 		// Slats
; 205  : 		double leftSltPos = 0.0;

  000d6	4c 89 81 e8 00
	00 00		 mov	 QWORD PTR [rcx+232], r8

; 206  : 		double rightSltPos = 0.0;

  000dd	4c 89 81 f0 00
	00 00		 mov	 QWORD PTR [rcx+240], r8

; 207  : 
; 208  : 		// Gears
; 209  : 		double leftGrPos = 0.0;

  000e4	4c 89 81 f8 00
	00 00		 mov	 QWORD PTR [rcx+248], r8

; 210  : 		double rightGrPos = 0.0;

  000eb	4c 89 81 00 01
	00 00		 mov	 QWORD PTR [rcx+256], r8

; 211  : 		double noseGrPos = 0.0;

  000f2	4c 89 81 08 01
	00 00		 mov	 QWORD PTR [rcx+264], r8

; 212  : 
; 213  : 		// Wheels
; 214  : 		double leftWhlArg = 0.0;

  000f9	4c 89 81 10 01
	00 00		 mov	 QWORD PTR [rcx+272], r8

; 215  : 		double leftWhlPreArg = 0.0;

  00100	4c 89 81 18 01
	00 00		 mov	 QWORD PTR [rcx+280], r8

; 216  : 		double leftWhlSpd = 0.0;

  00107	4c 89 81 20 01
	00 00		 mov	 QWORD PTR [rcx+288], r8

; 217  : 		double leftWhlGS = 0.0;

  0010e	4c 89 81 28 01
	00 00		 mov	 QWORD PTR [rcx+296], r8

; 218  : 		double leftWhlComp = 0.0;

  00115	4c 89 81 30 01
	00 00		 mov	 QWORD PTR [rcx+304], r8

; 219  : 
; 220  : 		double rightWhlArg = 0.0;

  0011c	4c 89 81 38 01
	00 00		 mov	 QWORD PTR [rcx+312], r8

; 221  : 		double rightWhlPreArg = 0.0;

  00123	4c 89 81 40 01
	00 00		 mov	 QWORD PTR [rcx+320], r8

; 222  : 		double rightWhlSpd = 0.0;

  0012a	4c 89 81 48 01
	00 00		 mov	 QWORD PTR [rcx+328], r8

; 223  : 		double rightWhlGS = 0.0;

  00131	4c 89 81 50 01
	00 00		 mov	 QWORD PTR [rcx+336], r8

; 224  : 		double rightWhlComp = 0.0;

  00138	4c 89 81 58 01
	00 00		 mov	 QWORD PTR [rcx+344], r8

; 225  : 
; 226  : 		double noseWhlGS = 0.0;

  0013f	4c 89 81 60 01
	00 00		 mov	 QWORD PTR [rcx+352], r8

; 227  : 		double noseWhlComp = 0.0;

  00146	4c 89 81 68 01
	00 00		 mov	 QWORD PTR [rcx+360], r8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 19   : 	Vec3() : x(0.0), y(0.0), z(0.0) {}

  0014d	4c 89 81 70 01
	00 00		 mov	 QWORD PTR [rcx+368], r8
  00154	4c 89 81 78 01
	00 00		 mov	 QWORD PTR [rcx+376], r8
  0015b	4c 89 81 80 01
	00 00		 mov	 QWORD PTR [rcx+384], r8
  00162	4c 89 81 88 01
	00 00		 mov	 QWORD PTR [rcx+392], r8
  00169	4c 89 81 90 01
	00 00		 mov	 QWORD PTR [rcx+400], r8
  00170	4c 89 81 98 01
	00 00		 mov	 QWORD PTR [rcx+408], r8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 229  : 		double noseWhlAng = 0.0;

  00177	4c 89 81 a0 01
	00 00		 mov	 QWORD PTR [rcx+416], r8

; 230  : 		double noseWhlAngV = 0.0;

  0017e	4c 89 81 a8 01
	00 00		 mov	 QWORD PTR [rcx+424], r8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 20   : 	Vec3(double x_, double y_, double z_) :x(x_), y(y_), z(z_) {}

  00185	4c 89 81 c0 01
	00 00		 mov	 QWORD PTR [rcx+448], r8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 16   : 		AirFrame() {};

  0018c	c3		 ret	 0
??0AirFrame@Aircraft@@QEAA@XZ ENDP			; Aircraft::AirFrame::AirFrame
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ??1AirFrame@Aircraft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1AirFrame@Aircraft@@QEAA@XZ PROC			; Aircraft::AirFrame::~AirFrame, COMDAT

; 17   : 		~AirFrame() {};

  00000	c2 00 00	 ret	 0
??1AirFrame@Aircraft@@QEAA@XZ ENDP			; Aircraft::AirFrame::~AirFrame
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?updateActEle@AirFrame@Aircraft@@QEAAXNNN@Z
_TEXT	SEGMENT
this$ = 64
dt$ = 72
mach$dead$ = 80
pitch$dead$ = 88
?updateActEle@AirFrame@Aircraft@@QEAAXNNN@Z PROC	; Aircraft::AirFrame::updateActEle, COMDAT

; 22   : 		{

$LN13:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b d9	 mov	 rbx, rcx
  00009	0f 29 74 24 20	 movaps	 XMMWORD PTR [rsp+32], xmm6

; 23   : 			double stabDflt = toDegrees(stabilizer);
; 24   : 			double bungeeTrimDeg = (stabDflt + 1.0) / (-13.25) * (-0.65306 - 7.3469) - 0.65306;
; 25   : 			double bungeeTrimStick = bungeeTrimDeg / 20.0; // transformation from control surface deflection to stick normalized coordinate goes here
; 26   : 			double speedbrakeTrim = -0.15 * spdBrkPos;
; 27   : 			double eleSpd = clamp(1.0 - 1.2 * pow(mach, 3.0), 0.1, 1.0);
; 28   : 			actLeftEle.setActuatorFactor(eleSpd);
; 29   : 			actRightEle.setActuatorFactor(eleSpd);
; 30   : 			// printf("factor: %lf\n", clamp(1.0 - 1.2 * pow(m_state.getMach(), 3.0), 0.1, 1.0));
; 31   : 
; 32   : 			double eleZeroForceDflt = bungeeTrimStick + speedbrakeTrim;
; 33   : 			double input = pitch + eleZeroForceDflt;
; 34   : 			leftElePos = actLeftEle.inputUpdate(input, dt);

  0000e	48 83 c1 58	 add	 rcx, 88			; 00000058H
  00012	0f 28 d1	 movaps	 xmm2, xmm1
  00015	0f 28 f1	 movaps	 xmm6, xmm1
  00018	e8 00 00 00 00	 call	 ?inputUpdate@Actuator@Aircraft@@QEAANNN@Z ; Aircraft::Actuator::inputUpdate

; 35   : 			rightElePos = actRightEle.inputUpdate(input, dt);

  0001d	48 8d 8b 80 00
	00 00		 lea	 rcx, QWORD PTR [rbx+128]
  00024	f2 0f 11 43 78	 movsd	 QWORD PTR [rbx+120], xmm0
  00029	0f 28 d6	 movaps	 xmm2, xmm6
  0002c	e8 00 00 00 00	 call	 ?inputUpdate@Actuator@Aircraft@@QEAANNN@Z ; Aircraft::Actuator::inputUpdate

; 36   : 		}

  00031	0f 28 74 24 20	 movaps	 xmm6, XMMWORD PTR [rsp+32]
  00036	f2 0f 11 83 a0
	00 00 00	 movsd	 QWORD PTR [rbx+160], xmm0
  0003e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00042	5b		 pop	 rbx
  00043	c3		 ret	 0
?updateActEle@AirFrame@Aircraft@@QEAAXNNN@Z ENDP	; Aircraft::AirFrame::updateActEle
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\maths.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?updateStabilizer@AirFrame@Aircraft@@QEAAXNN@Z
_TEXT	SEGMENT
this$ = 8
dt$dead$ = 16
ptichTrim$ = 24
?updateStabilizer@AirFrame@Aircraft@@QEAAXNN@Z PROC	; Aircraft::AirFrame::updateStabilizer, COMDAT

; 42   : 			stabilizer = toRad((ptichTrim - 1.0) / (-2.0) * (-13.25) + 12.25);

  00000	f2 0f 5c 15 00
	00 00 00	 subsd	 xmm2, QWORD PTR __real@3ff0000000000000
  00008	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4028800000000000
  00010	f2 0f 59 15 00
	00 00 00	 mulsd	 xmm2, QWORD PTR __real@3fe0000000000000
  00018	f2 0f 59 15 00
	00 00 00	 mulsd	 xmm2, QWORD PTR __real@c02a800000000000
  00020	f2 0f 5c c2	 subsd	 xmm0, xmm2
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\maths.h

; 31   : 	return degrees * PI / 180.0;

  00024	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@400921fb54442eea
  0002c	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4066800000000000
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 42   : 			stabilizer = toRad((ptichTrim - 1.0) / (-2.0) * (-13.25) + 12.25);

  00034	f2 0f 11 01	 movsd	 QWORD PTR [rcx], xmm0

; 43   : 		}

  00038	c3		 ret	 0
?updateStabilizer@AirFrame@Aircraft@@QEAAXNN@Z ENDP	; Aircraft::AirFrame::updateStabilizer
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?getSpdBrkPos@AirFrame@Aircraft@@QEBANXZ
_TEXT	SEGMENT
this$dead$ = 8
?getSpdBrkPos@AirFrame@Aircraft@@QEBANXZ PROC		; Aircraft::AirFrame::getSpdBrkPos, COMDAT

; 45   : 		double getSpdBrkPos() const { return spdBrkPos; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  00007	f2 0f 10 80 d0
	00 00 00	 movsd	 xmm0, QWORD PTR [rax+208]
  0000f	c3		 ret	 0
?getSpdBrkPos@AirFrame@Aircraft@@QEBANXZ ENDP		; Aircraft::AirFrame::getSpdBrkPos
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?updateActLeftAlrn@AirFrame@Aircraft@@QEAAXNNN@Z
_TEXT	SEGMENT
this$ = 48
dt$ = 56
roll$dead$ = 64
rollTrim$dead$ = 72
?updateActLeftAlrn@AirFrame@Aircraft@@QEAAXNNN@Z PROC	; Aircraft::AirFrame::updateActLeftAlrn, COMDAT

; 49   : 		{

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 50   : 			double input = roll + rollTrim;
; 51   : 			leftAlrnPos = actLeftAlrn.inputUpdate(-input, dt);

  00009	0f 28 d1	 movaps	 xmm2, xmm1
  0000c	48 83 c1 08	 add	 rcx, 8
  00010	e8 00 00 00 00	 call	 ?inputUpdate@Actuator@Aircraft@@QEAANNN@Z ; Aircraft::Actuator::inputUpdate
  00015	f2 0f 11 43 28	 movsd	 QWORD PTR [rbx+40], xmm0

; 52   : 		}

  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5b		 pop	 rbx
  0001f	c3		 ret	 0
?updateActLeftAlrn@AirFrame@Aircraft@@QEAAXNNN@Z ENDP	; Aircraft::AirFrame::updateActLeftAlrn
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?updateActRudder@AirFrame@Aircraft@@QEAAXNNNN@Z
_TEXT	SEGMENT
this$ = 48
dt$ = 56
yaw$dead$ = 64
yawDamper$dead$ = 72
yawTrim$dead$ = 80
?updateActRudder@AirFrame@Aircraft@@QEAAXNNNN@Z PROC	; Aircraft::AirFrame::updateActRudder, COMDAT

; 61   : 		{

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 62   : 			double input = yaw + yawDamper + yawTrim;
; 63   : 			rudderPos = actRudder.inputUpdate(input, dt);

  00009	0f 28 d1	 movaps	 xmm2, xmm1
  0000c	48 81 c1 a8 00
	00 00		 add	 rcx, 168		; 000000a8H
  00013	e8 00 00 00 00	 call	 ?inputUpdate@Actuator@Aircraft@@QEAANNN@Z ; Aircraft::Actuator::inputUpdate
  00018	f2 0f 11 83 c8
	00 00 00	 movsd	 QWORD PTR [rbx+200], xmm0

; 64   : 		}

  00020	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00024	5b		 pop	 rbx
  00025	c3		 ret	 0
?updateActRudder@AirFrame@Aircraft@@QEAAXNNNN@Z ENDP	; Aircraft::AirFrame::updateActRudder
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?getLeftAlrnPos@AirFrame@Aircraft@@QEBANXZ
_TEXT	SEGMENT
this$dead$ = 8
?getLeftAlrnPos@AirFrame@Aircraft@@QEBANXZ PROC		; Aircraft::AirFrame::getLeftAlrnPos, COMDAT

; 66   : 		double getLeftAlrnPos() const { return leftAlrnPos; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  00007	f2 0f 10 40 28	 movsd	 xmm0, QWORD PTR [rax+40]
  0000c	c3		 ret	 0
?getLeftAlrnPos@AirFrame@Aircraft@@QEBANXZ ENDP		; Aircraft::AirFrame::getLeftAlrnPos
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?getRightAlrnPos@AirFrame@Aircraft@@QEBANXZ
_TEXT	SEGMENT
this$dead$ = 8
?getRightAlrnPos@AirFrame@Aircraft@@QEBANXZ PROC	; Aircraft::AirFrame::getRightAlrnPos, COMDAT

; 68   : 		double getRightAlrnPos() const { return rightAlrnPos; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  00007	f2 0f 10 40 50	 movsd	 xmm0, QWORD PTR [rax+80]
  0000c	c3		 ret	 0
?getRightAlrnPos@AirFrame@Aircraft@@QEBANXZ ENDP	; Aircraft::AirFrame::getRightAlrnPos
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?getLeftElePos@AirFrame@Aircraft@@QEBANXZ
_TEXT	SEGMENT
this$dead$ = 8
?getLeftElePos@AirFrame@Aircraft@@QEBANXZ PROC		; Aircraft::AirFrame::getLeftElePos, COMDAT

; 70   : 		double getLeftElePos() const { return leftElePos; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  00007	f2 0f 10 40 78	 movsd	 xmm0, QWORD PTR [rax+120]
  0000c	c3		 ret	 0
?getLeftElePos@AirFrame@Aircraft@@QEBANXZ ENDP		; Aircraft::AirFrame::getLeftElePos
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?getRightElePos@AirFrame@Aircraft@@QEBANXZ
_TEXT	SEGMENT
this$dead$ = 8
?getRightElePos@AirFrame@Aircraft@@QEBANXZ PROC		; Aircraft::AirFrame::getRightElePos, COMDAT

; 72   : 		double getRightElePos() const { return rightElePos; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  00007	f2 0f 10 80 a0
	00 00 00	 movsd	 xmm0, QWORD PTR [rax+160]
  0000f	c3		 ret	 0
?getRightElePos@AirFrame@Aircraft@@QEBANXZ ENDP		; Aircraft::AirFrame::getRightElePos
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?getRudderPos@AirFrame@Aircraft@@QEBANXZ
_TEXT	SEGMENT
this$dead$ = 8
?getRudderPos@AirFrame@Aircraft@@QEBANXZ PROC		; Aircraft::AirFrame::getRudderPos, COMDAT

; 74   : 		double getRudderPos() const { return rudderPos; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  00007	f2 0f 10 80 c8
	00 00 00	 movsd	 xmm0, QWORD PTR [rax+200]
  0000f	c3		 ret	 0
?getRudderPos@AirFrame@Aircraft@@QEBANXZ ENDP		; Aircraft::AirFrame::getRudderPos
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\maths.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?getStabAnim@AirFrame@Aircraft@@QEBANXZ
_TEXT	SEGMENT
this$dead$ = 8
?getStabAnim@AirFrame@Aircraft@@QEBANXZ PROC		; Aircraft::AirFrame::getStabAnim, COMDAT
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\maths.h

; 26   : 	return radians * 180.0 / PI;

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  00007	0f 57 c0	 xorps	 xmm0, xmm0
  0000a	f2 0f 10 08	 movsd	 xmm1, QWORD PTR [rax]
  0000e	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4066800000000000
  00016	f2 0f 5e 0d 00
	00 00 00	 divsd	 xmm1, QWORD PTR __real@400921fb54442eea
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 79   : 			if (stab > 0.0)

  0001e	66 0f 2f c8	 comisd	 xmm1, xmm0
  00022	76 08		 jbe	 SHORT $LN2@getStabAni

; 80   : 			{
; 81   : 				return stab / 12.25;

  00024	f2 0f 5e 0d 00
	00 00 00	 divsd	 xmm1, QWORD PTR __real@4028800000000000
$LN2@getStabAni:

; 82   : 			}
; 83   : 			else
; 84   : 			{
; 85   : 				return stab;
; 86   : 			}
; 87   : 		}

  0002c	0f 28 c1	 movaps	 xmm0, xmm1
  0002f	c3		 ret	 0
?getStabAnim@AirFrame@Aircraft@@QEBANXZ ENDP		; Aircraft::AirFrame::getStabAnim
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?getLeftSltPos@AirFrame@Aircraft@@QEBANXZ
_TEXT	SEGMENT
this$dead$ = 8
?getLeftSltPos@AirFrame@Aircraft@@QEBANXZ PROC		; Aircraft::AirFrame::getLeftSltPos, COMDAT

; 89   : 		double getLeftSltPos() const { return leftSltPos; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  00007	f2 0f 10 80 e8
	00 00 00	 movsd	 xmm0, QWORD PTR [rax+232]
  0000f	c3		 ret	 0
?getLeftSltPos@AirFrame@Aircraft@@QEBANXZ ENDP		; Aircraft::AirFrame::getLeftSltPos
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?getRightSltPos@AirFrame@Aircraft@@QEBANXZ
_TEXT	SEGMENT
this$dead$ = 8
?getRightSltPos@AirFrame@Aircraft@@QEBANXZ PROC		; Aircraft::AirFrame::getRightSltPos, COMDAT

; 92   : 		double getRightSltPos() const { return rightSltPos; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  00007	f2 0f 10 80 f0
	00 00 00	 movsd	 xmm0, QWORD PTR [rax+240]
  0000f	c3		 ret	 0
?getRightSltPos@AirFrame@Aircraft@@QEBANXZ ENDP		; Aircraft::AirFrame::getRightSltPos
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?getLeftFlpPos@AirFrame@Aircraft@@QEBANXZ
_TEXT	SEGMENT
this$dead$ = 8
?getLeftFlpPos@AirFrame@Aircraft@@QEBANXZ PROC		; Aircraft::AirFrame::getLeftFlpPos, COMDAT

; 95   : 		double getLeftFlpPos() const { return leftFlpPos; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  00007	f2 0f 10 80 d8
	00 00 00	 movsd	 xmm0, QWORD PTR [rax+216]
  0000f	c3		 ret	 0
?getLeftFlpPos@AirFrame@Aircraft@@QEBANXZ ENDP		; Aircraft::AirFrame::getLeftFlpPos
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?getRightFlpPos@AirFrame@Aircraft@@QEBANXZ
_TEXT	SEGMENT
this$dead$ = 8
?getRightFlpPos@AirFrame@Aircraft@@QEBANXZ PROC		; Aircraft::AirFrame::getRightFlpPos, COMDAT

; 98   : 		double getRightFlpPos() const { return rightFlpPos; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  00007	f2 0f 10 80 e0
	00 00 00	 movsd	 xmm0, QWORD PTR [rax+224]
  0000f	c3		 ret	 0
?getRightFlpPos@AirFrame@Aircraft@@QEBANXZ ENDP		; Aircraft::AirFrame::getRightFlpPos
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\maths.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\maths.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\maths.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\maths.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?simulate@AirFrame@Aircraft@@QEAAXNNNNNNNNN@Z
_TEXT	SEGMENT
this$dead$ = 128
min$ = 128
dt$ = 136
mach$dead$ = 144
value$ = 144
pitch$dead$ = 152
max$ = 152
brkOutTq$21 = 152
pitchTrim$ = 160
roll$dead$ = 168
rollTrim$dead$ = 176
yaw$dead$ = 184
yawDamper$dead$ = 192
yawTrim$dead$ = 200
?simulate@AirFrame@Aircraft@@QEAAXNNNNNNNNN@Z PROC	; Aircraft::AirFrame::simulate, COMDAT

; 102  : 		{

$LN61:
  00000	48 8b c4	 mov	 rax, rsp
  00003	f2 0f 11 58 20	 movsd	 QWORD PTR [rax+32], xmm3
  00008	f2 0f 11 50 18	 movsd	 QWORD PTR [rax+24], xmm2
  0000d	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  00011	53		 push	 rbx
  00012	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00016	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  0001d	0f 29 70 e8	 movaps	 XMMWORD PTR [rax-24], xmm6
  00021	0f 29 78 d8	 movaps	 XMMWORD PTR [rax-40], xmm7
  00025	44 0f 29 40 c8	 movaps	 XMMWORD PTR [rax-56], xmm8

; 114  : 			leftWhlSpd = whlfctr * calWhlArgChange(leftWhlArg, leftWhlPreArg) / dt;

  0002a	f2 0f 10 83 18
	01 00 00	 movsd	 xmm0, QWORD PTR [rbx+280]
  00032	f2 0f 10 a3 10
	01 00 00	 movsd	 xmm4, QWORD PTR [rbx+272]
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib

; 24   :     return _CSTD fabs(_Xx);

  0003a	f2 44 0f 10 05
	00 00 00 00	 movsd	 xmm8, QWORD PTR __xmm@7fffffffffffffff7fffffffffffffff
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 145  : 			double dltLower = (arg - preArg);

  00043	0f 28 dc	 movaps	 xmm3, xmm4

; 102  : 		{

  00046	44 0f 29 48 b8	 movaps	 XMMWORD PTR [rax-72], xmm9

; 145  : 			double dltLower = (arg - preArg);

  0004b	f2 0f 5c d8	 subsd	 xmm3, xmm0
  0004f	f2 44 0f 10 0d
	00 00 00 00	 movsd	 xmm9, QWORD PTR __real@3ff0000000000000
  00058	41 0f 28 d1	 movaps	 xmm2, xmm9

; 102  : 		{

  0005c	44 0f 29 50 a8	 movaps	 XMMWORD PTR [rax-88], xmm10

; 144  : 			double dltUpper = (1.0 - preArg) + arg;

  00061	f2 0f 5c d0	 subsd	 xmm2, xmm0

; 102  : 		{

  00065	44 0f 28 d1	 movaps	 xmm10, xmm1
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib

; 24   :     return _CSTD fabs(_Xx);

  00069	0f 28 c3	 movaps	 xmm0, xmm3
  0006c	41 0f 54 c0	 andps	 xmm0, xmm8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 144  : 			double dltUpper = (1.0 - preArg) + arg;

  00070	f2 0f 58 d4	 addsd	 xmm2, xmm4
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib

; 24   :     return _CSTD fabs(_Xx);

  00074	0f 28 ca	 movaps	 xmm1, xmm2
  00077	41 0f 54 c8	 andps	 xmm1, xmm8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 147  : 			if (abs(dltUpper) < abs(dltLower))

  0007b	66 0f 2f c1	 comisd	 xmm0, xmm1
  0007f	77 03		 ja	 SHORT $LN7@simulate

; 148  : 				return dltUpper;
; 149  : 			else
; 150  : 				return dltLower;

  00081	0f 28 d3	 movaps	 xmm2, xmm3
$LN7@simulate:

; 114  : 			leftWhlSpd = whlfctr * calWhlArgChange(leftWhlArg, leftWhlPreArg) / dt;

  00084	f2 0f 10 35 00
	00 00 00	 movsd	 xmm6, QWORD PTR __real@400e9c96fba0df07

; 115  : 			rightWhlSpd = whlfctr * calWhlArgChange(rightWhlArg, rightWhlPreArg) / dt;

  0008c	f2 0f 10 83 40
	01 00 00	 movsd	 xmm0, QWORD PTR [rbx+320]
  00094	f2 0f 10 ab 38
	01 00 00	 movsd	 xmm5, QWORD PTR [rbx+312]
  0009c	f2 0f 59 d6	 mulsd	 xmm2, xmm6

; 145  : 			double dltLower = (arg - preArg);

  000a0	0f 28 dd	 movaps	 xmm3, xmm5
  000a3	f2 0f 5c d8	 subsd	 xmm3, xmm0

; 114  : 			leftWhlSpd = whlfctr * calWhlArgChange(leftWhlArg, leftWhlPreArg) / dt;

  000a7	f2 41 0f 5e d2	 divsd	 xmm2, xmm10
  000ac	f2 0f 11 93 20
	01 00 00	 movsd	 QWORD PTR [rbx+288], xmm2

; 144  : 			double dltUpper = (1.0 - preArg) + arg;

  000b4	41 0f 28 d1	 movaps	 xmm2, xmm9
  000b8	f2 0f 5c d0	 subsd	 xmm2, xmm0
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib

; 24   :     return _CSTD fabs(_Xx);

  000bc	0f 28 c3	 movaps	 xmm0, xmm3
  000bf	41 0f 54 c0	 andps	 xmm0, xmm8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 144  : 			double dltUpper = (1.0 - preArg) + arg;

  000c3	f2 0f 58 d5	 addsd	 xmm2, xmm5
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib

; 24   :     return _CSTD fabs(_Xx);

  000c7	0f 28 ca	 movaps	 xmm1, xmm2
  000ca	41 0f 54 c8	 andps	 xmm1, xmm8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 147  : 			if (abs(dltUpper) < abs(dltLower))

  000ce	66 0f 2f c1	 comisd	 xmm0, xmm1
  000d2	77 03		 ja	 SHORT $LN15@simulate

; 148  : 				return dltUpper;
; 149  : 			else
; 150  : 				return dltLower;

  000d4	0f 28 d3	 movaps	 xmm2, xmm3
$LN15@simulate:

; 117  : 			leftWhlPreArg = leftWhlArg;

  000d7	f2 0f 11 a3 18
	01 00 00	 movsd	 QWORD PTR [rbx+280], xmm4

; 118  : 			rightWhlPreArg = rightWhlArg;

  000df	f2 0f 11 ab 40
	01 00 00	 movsd	 QWORD PTR [rbx+320], xmm5
  000e7	f2 0f 59 d6	 mulsd	 xmm2, xmm6

; 119  : 
; 120  : 			const Vec3 noseWhlVct = noseWhlForce.pos - pivotPos;
; 121  : 			const Vec3 noseTq = cross(noseWhlVct, noseWhlForce.force);
; 122  : 			const double dmpTq = noseWhlAngV * noseWhlDmp;

  000eb	f2 0f 10 b3 a8
	01 00 00	 movsd	 xmm6, QWORD PTR [rbx+424]
  000f3	f2 0f 59 35 00
	00 00 00	 mulsd	 xmm6, QWORD PTR __real@4062c00000000000
  000fb	f2 41 0f 5e d2	 divsd	 xmm2, xmm10
  00100	f2 0f 11 93 48
	01 00 00	 movsd	 QWORD PTR [rbx+328], xmm2
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 88   : 		result.z = this->z - v.z;

  00108	f2 0f 10 bb 98
	01 00 00	 movsd	 xmm7, QWORD PTR [rbx+408]
  00110	f2 0f 5c bb c0
	01 00 00	 subsd	 xmm7, QWORD PTR [rbx+448]
  00118	f2 0f 10 83 88
	01 00 00	 movsd	 xmm0, QWORD PTR [rbx+392]
  00120	f2 0f 5c 83 b0
	01 00 00	 subsd	 xmm0, QWORD PTR [rbx+432]

; 140  : 	return Vec3(a.y * b.z - a.z * b.y,

  00128	f2 0f 59 bb 70
	01 00 00	 mulsd	 xmm7, QWORD PTR [rbx+368]
  00130	f2 0f 59 83 80
	01 00 00	 mulsd	 xmm0, QWORD PTR [rbx+384]
  00138	f2 0f 5c f8	 subsd	 xmm7, xmm0
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 123  : 			const double tqSign = copysign(1.0, noseTq.y);

  0013c	41 0f 28 c1	 movaps	 xmm0, xmm9
  00140	0f 28 cf	 movaps	 xmm1, xmm7
  00143	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_copysign

; 125  : 			const double weight = clamp(noseWhlGS / maxBrkOutSpd, 0.0, 1.0);

  00149	f2 0f 10 8b 60
	01 00 00	 movsd	 xmm1, QWORD PTR [rbx+352]
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 66   :     return _Right < _Left ? _Right : _Left;

  00151	48 8d 84 24 90
	00 00 00	 lea	 rax, QWORD PTR value$[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 125  : 			const double weight = clamp(noseWhlGS / maxBrkOutSpd, 0.0, 1.0);

  00159	f2 0f 5e 0d 00
	00 00 00	 divsd	 xmm1, QWORD PTR __real@3fb999999999999a
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 66   :     return _Right < _Left ? _Right : _Left;

  00161	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR max$[rsp]
  00169	0f 57 db	 xorps	 xmm3, xmm3
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 125  : 			const double weight = clamp(noseWhlGS / maxBrkOutSpd, 0.0, 1.0);

  0016c	f2 44 0f 11 8c
	24 98 00 00 00	 movsd	 QWORD PTR max$[rsp], xmm9
  00176	66 41 0f 2f c9	 comisd	 xmm1, xmm9
  0017b	f2 0f 11 8c 24
	90 00 00 00	 movsd	 QWORD PTR value$[rsp], xmm1
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib

; 24   :     return _CSTD fabs(_Xx);

  00184	41 0f 54 f8	 andps	 xmm7, xmm8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 125  : 			const double weight = clamp(noseWhlGS / maxBrkOutSpd, 0.0, 1.0);

  00188	f2 0f 11 9c 24
	80 00 00 00	 movsd	 QWORD PTR min$[rsp], xmm3
  00191	0f 57 c9	 xorps	 xmm1, xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\maths.h

; 42   : 	return v0 + w * (v1 - v0);

  00194	f2 0f 5c 8c 24
	98 00 00 00	 subsd	 xmm1, QWORD PTR brkOutTq$21[rsp]
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 66   :     return _Right < _Left ? _Right : _Left;

  0019d	48 0f 46 c8	 cmovbe	 rcx, rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 34   : 			leftElePos = actLeftEle.inputUpdate(input, dt);

  001a1	41 0f 28 d2	 movaps	 xmm2, xmm10
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 43   :     return _Left < _Right ? _Right : _Left;

  001a5	48 8d 84 24 80
	00 00 00	 lea	 rax, QWORD PTR min$[rsp]
  001ad	66 0f 2f 19	 comisd	 xmm3, QWORD PTR [rcx]
  001b1	48 0f 46 c1	 cmovbe	 rax, rcx
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 34   : 			leftElePos = actLeftEle.inputUpdate(input, dt);

  001b5	48 8d 4b 58	 lea	 rcx, QWORD PTR [rbx+88]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\maths.h

; 42   : 	return v0 + w * (v1 - v0);

  001b9	f2 0f 59 08	 mulsd	 xmm1, QWORD PTR [rax]
  001bd	f2 0f 58 8c 24
	98 00 00 00	 addsd	 xmm1, QWORD PTR brkOutTq$21[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 127  : 			const double tqAftBrkOut = tqSign * std::max(abs(noseTq.y) - brkOutTq, 0.0);

  001c6	f2 0f 5c f9	 subsd	 xmm7, xmm1

; 42   : 			stabilizer = toRad((ptichTrim - 1.0) / (-2.0) * (-13.25) + 12.25);

  001ca	f2 0f 10 8c 24
	a0 00 00 00	 movsd	 xmm1, QWORD PTR pitchTrim$[rsp]
  001d3	f2 41 0f 5c c9	 subsd	 xmm1, xmm9

; 127  : 			const double tqAftBrkOut = tqSign * std::max(abs(noseTq.y) - brkOutTq, 0.0);

  001d8	f2 0f 5f df	 maxsd	 xmm3, xmm7

; 42   : 			stabilizer = toRad((ptichTrim - 1.0) / (-2.0) * (-13.25) + 12.25);

  001dc	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000

; 127  : 			const double tqAftBrkOut = tqSign * std::max(abs(noseTq.y) - brkOutTq, 0.0);

  001e4	f2 0f 59 d8	 mulsd	 xmm3, xmm0

; 42   : 			stabilizer = toRad((ptichTrim - 1.0) / (-2.0) * (-13.25) + 12.25);

  001e8	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@c02a800000000000
  001f0	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4028800000000000

; 128  : 			const double tqTotal = tqAftBrkOut - dmpTq;

  001f8	f2 0f 5c de	 subsd	 xmm3, xmm6

; 42   : 			stabilizer = toRad((ptichTrim - 1.0) / (-2.0) * (-13.25) + 12.25);

  001fc	f2 0f 5c c1	 subsd	 xmm0, xmm1

; 129  : 			noseWhlAngV += tqTotal * dt;

  00200	f2 41 0f 59 da	 mulsd	 xmm3, xmm10
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\maths.h

; 31   : 	return degrees * PI / 180.0;

  00205	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@400921fb54442eea
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 129  : 			noseWhlAngV += tqTotal * dt;

  0020d	f2 0f 58 9b a8
	01 00 00	 addsd	 xmm3, QWORD PTR [rbx+424]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\maths.h

; 31   : 	return degrees * PI / 180.0;

  00215	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4066800000000000
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 129  : 			noseWhlAngV += tqTotal * dt;

  0021d	f2 0f 11 9b a8
	01 00 00	 movsd	 QWORD PTR [rbx+424], xmm3

; 130  : 			noseWhlAng += noseWhlAngV * dt;

  00225	f2 41 0f 59 da	 mulsd	 xmm3, xmm10

; 42   : 			stabilizer = toRad((ptichTrim - 1.0) / (-2.0) * (-13.25) + 12.25);

  0022a	f2 0f 11 03	 movsd	 QWORD PTR [rbx], xmm0

; 130  : 			noseWhlAng += noseWhlAngV * dt;

  0022e	f2 0f 58 9b a0
	01 00 00	 addsd	 xmm3, QWORD PTR [rbx+416]
  00236	f2 0f 11 9b a0
	01 00 00	 movsd	 QWORD PTR [rbx+416], xmm3

; 34   : 			leftElePos = actLeftEle.inputUpdate(input, dt);

  0023e	e8 00 00 00 00	 call	 ?inputUpdate@Actuator@Aircraft@@QEAANNN@Z ; Aircraft::Actuator::inputUpdate

; 35   : 			rightElePos = actRightEle.inputUpdate(input, dt);

  00243	48 8d 8b 80 00
	00 00		 lea	 rcx, QWORD PTR [rbx+128]
  0024a	f2 0f 11 43 78	 movsd	 QWORD PTR [rbx+120], xmm0
  0024f	41 0f 28 d2	 movaps	 xmm2, xmm10
  00253	e8 00 00 00 00	 call	 ?inputUpdate@Actuator@Aircraft@@QEAANNN@Z ; Aircraft::Actuator::inputUpdate

; 51   : 			leftAlrnPos = actLeftAlrn.inputUpdate(-input, dt);

  00258	48 8d 4b 08	 lea	 rcx, QWORD PTR [rbx+8]

; 35   : 			rightElePos = actRightEle.inputUpdate(input, dt);

  0025c	f2 0f 11 83 a0
	00 00 00	 movsd	 QWORD PTR [rbx+160], xmm0

; 51   : 			leftAlrnPos = actLeftAlrn.inputUpdate(-input, dt);

  00264	41 0f 28 d2	 movaps	 xmm2, xmm10
  00268	e8 00 00 00 00	 call	 ?inputUpdate@Actuator@Aircraft@@QEAANNN@Z ; Aircraft::Actuator::inputUpdate

; 63   : 			rudderPos = actRudder.inputUpdate(input, dt);

  0026d	48 8d 8b a8 00
	00 00		 lea	 rcx, QWORD PTR [rbx+168]

; 51   : 			leftAlrnPos = actLeftAlrn.inputUpdate(-input, dt);

  00274	f2 0f 11 43 28	 movsd	 QWORD PTR [rbx+40], xmm0

; 63   : 			rudderPos = actRudder.inputUpdate(input, dt);

  00279	41 0f 28 d2	 movaps	 xmm2, xmm10
  0027d	e8 00 00 00 00	 call	 ?inputUpdate@Actuator@Aircraft@@QEAANNN@Z ; Aircraft::Actuator::inputUpdate

; 103  : 			updateWheels(dt);
; 104  : 			updateStabilizer(dt, pitchTrim);
; 105  : 			updateActEle(dt, mach, pitch);
; 106  : 			updateActLeftAlrn(dt, roll, rollTrim);
; 107  : 			updateActRudder(dt, yaw, yawDamper, yawTrim);
; 108  : 		}

  00282	0f 28 74 24 60	 movaps	 xmm6, XMMWORD PTR [rsp+96]
  00287	0f 28 7c 24 50	 movaps	 xmm7, XMMWORD PTR [rsp+80]
  0028c	44 0f 28 44 24
	40		 movaps	 xmm8, XMMWORD PTR [rsp+64]
  00292	44 0f 28 4c 24
	30		 movaps	 xmm9, XMMWORD PTR [rsp+48]
  00298	44 0f 28 54 24
	20		 movaps	 xmm10, XMMWORD PTR [rsp+32]

; 63   : 			rudderPos = actRudder.inputUpdate(input, dt);

  0029e	f2 0f 11 83 c8
	00 00 00	 movsd	 QWORD PTR [rbx+200], xmm0

; 103  : 			updateWheels(dt);
; 104  : 			updateStabilizer(dt, pitchTrim);
; 105  : 			updateActEle(dt, mach, pitch);
; 106  : 			updateActLeftAlrn(dt, roll, rollTrim);
; 107  : 			updateActRudder(dt, yaw, yawDamper, yawTrim);
; 108  : 		}

  002a6	48 83 c4 70	 add	 rsp, 112		; 00000070H
  002aa	5b		 pop	 rbx
  002ab	c3		 ret	 0
?simulate@AirFrame@Aircraft@@QEAAXNNNNNNNNN@Z ENDP	; Aircraft::AirFrame::simulate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\maths.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\maths.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?updateWheels@AirFrame@Aircraft@@QEAAXN@Z
_TEXT	SEGMENT
max$ = 128
brkOutTq$ = 128
this$ = 128
value$ = 136
dt$ = 136
min$ = 144
?updateWheels@AirFrame@Aircraft@@QEAAXN@Z PROC		; Aircraft::AirFrame::updateWheels, COMDAT

; 111  : 		{

$LN41:
  00000	40 53		 push	 rbx
  00002	48 83 ec 70	 sub	 rsp, 112		; 00000070H

; 112  : 			static constexpr double whlRdus = 0.609;
; 113  : 			static constexpr double whlfctr = 2.0 * PI * whlRdus;
; 114  : 			leftWhlSpd = whlfctr * calWhlArgChange(leftWhlArg, leftWhlPreArg) / dt;

  00006	f2 0f 10 81 18
	01 00 00	 movsd	 xmm0, QWORD PTR [rcx+280]
  0000e	48 8b d9	 mov	 rbx, rcx
  00011	f2 0f 10 a1 10
	01 00 00	 movsd	 xmm4, QWORD PTR [rcx+272]
  00019	0f 29 74 24 60	 movaps	 XMMWORD PTR [rsp+96], xmm6

; 145  : 			double dltLower = (arg - preArg);

  0001e	0f 28 dc	 movaps	 xmm3, xmm4
  00021	0f 29 7c 24 50	 movaps	 XMMWORD PTR [rsp+80], xmm7
  00026	f2 0f 5c d8	 subsd	 xmm3, xmm0
  0002a	44 0f 29 44 24
	40		 movaps	 XMMWORD PTR [rsp+64], xmm8
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib

; 24   :     return _CSTD fabs(_Xx);

  00030	f2 44 0f 10 05
	00 00 00 00	 movsd	 xmm8, QWORD PTR __xmm@7fffffffffffffff7fffffffffffffff
  00039	44 0f 29 4c 24
	30		 movaps	 XMMWORD PTR [rsp+48], xmm9
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 144  : 			double dltUpper = (1.0 - preArg) + arg;

  0003f	f2 44 0f 10 0d
	00 00 00 00	 movsd	 xmm9, QWORD PTR __real@3ff0000000000000
  00048	41 0f 28 d1	 movaps	 xmm2, xmm9
  0004c	44 0f 29 54 24
	20		 movaps	 XMMWORD PTR [rsp+32], xmm10
  00052	f2 0f 5c d0	 subsd	 xmm2, xmm0

; 111  : 		{

  00056	44 0f 28 d1	 movaps	 xmm10, xmm1
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib

; 24   :     return _CSTD fabs(_Xx);

  0005a	0f 28 c3	 movaps	 xmm0, xmm3
  0005d	41 0f 54 c0	 andps	 xmm0, xmm8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 144  : 			double dltUpper = (1.0 - preArg) + arg;

  00061	f2 0f 58 d4	 addsd	 xmm2, xmm4
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib

; 24   :     return _CSTD fabs(_Xx);

  00065	0f 28 ca	 movaps	 xmm1, xmm2
  00068	41 0f 54 c8	 andps	 xmm1, xmm8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 147  : 			if (abs(dltUpper) < abs(dltLower))

  0006c	66 0f 2f c1	 comisd	 xmm0, xmm1
  00070	77 03		 ja	 SHORT $LN5@updateWhee

; 148  : 				return dltUpper;
; 149  : 			else
; 150  : 				return dltLower;

  00072	0f 28 d3	 movaps	 xmm2, xmm3
$LN5@updateWhee:

; 112  : 			static constexpr double whlRdus = 0.609;
; 113  : 			static constexpr double whlfctr = 2.0 * PI * whlRdus;
; 114  : 			leftWhlSpd = whlfctr * calWhlArgChange(leftWhlArg, leftWhlPreArg) / dt;

  00075	f2 0f 10 35 00
	00 00 00	 movsd	 xmm6, QWORD PTR __real@400e9c96fba0df07

; 115  : 			rightWhlSpd = whlfctr * calWhlArgChange(rightWhlArg, rightWhlPreArg) / dt;

  0007d	f2 0f 10 81 40
	01 00 00	 movsd	 xmm0, QWORD PTR [rcx+320]
  00085	f2 0f 10 a9 38
	01 00 00	 movsd	 xmm5, QWORD PTR [rcx+312]
  0008d	f2 0f 59 d6	 mulsd	 xmm2, xmm6

; 145  : 			double dltLower = (arg - preArg);

  00091	0f 28 dd	 movaps	 xmm3, xmm5
  00094	f2 0f 5c d8	 subsd	 xmm3, xmm0

; 112  : 			static constexpr double whlRdus = 0.609;
; 113  : 			static constexpr double whlfctr = 2.0 * PI * whlRdus;
; 114  : 			leftWhlSpd = whlfctr * calWhlArgChange(leftWhlArg, leftWhlPreArg) / dt;

  00098	f2 41 0f 5e d2	 divsd	 xmm2, xmm10
  0009d	f2 0f 11 91 20
	01 00 00	 movsd	 QWORD PTR [rcx+288], xmm2

; 144  : 			double dltUpper = (1.0 - preArg) + arg;

  000a5	41 0f 28 d1	 movaps	 xmm2, xmm9
  000a9	f2 0f 5c d0	 subsd	 xmm2, xmm0
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib

; 24   :     return _CSTD fabs(_Xx);

  000ad	0f 28 c3	 movaps	 xmm0, xmm3
  000b0	41 0f 54 c0	 andps	 xmm0, xmm8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 144  : 			double dltUpper = (1.0 - preArg) + arg;

  000b4	f2 0f 58 d5	 addsd	 xmm2, xmm5
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib

; 24   :     return _CSTD fabs(_Xx);

  000b8	0f 28 ca	 movaps	 xmm1, xmm2
  000bb	41 0f 54 c8	 andps	 xmm1, xmm8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 147  : 			if (abs(dltUpper) < abs(dltLower))

  000bf	66 0f 2f c1	 comisd	 xmm0, xmm1
  000c3	77 03		 ja	 SHORT $LN13@updateWhee

; 148  : 				return dltUpper;
; 149  : 			else
; 150  : 				return dltLower;

  000c5	0f 28 d3	 movaps	 xmm2, xmm3
$LN13@updateWhee:

; 116  : 
; 117  : 			leftWhlPreArg = leftWhlArg;

  000c8	f2 0f 11 a1 18
	01 00 00	 movsd	 QWORD PTR [rcx+280], xmm4

; 118  : 			rightWhlPreArg = rightWhlArg;

  000d0	f2 0f 11 a9 40
	01 00 00	 movsd	 QWORD PTR [rcx+320], xmm5
  000d8	f2 0f 59 d6	 mulsd	 xmm2, xmm6

; 119  : 
; 120  : 			const Vec3 noseWhlVct = noseWhlForce.pos - pivotPos;
; 121  : 			const Vec3 noseTq = cross(noseWhlVct, noseWhlForce.force);
; 122  : 			const double dmpTq = noseWhlAngV * noseWhlDmp;

  000dc	f2 0f 10 b1 a8
	01 00 00	 movsd	 xmm6, QWORD PTR [rcx+424]
  000e4	f2 0f 59 35 00
	00 00 00	 mulsd	 xmm6, QWORD PTR __real@4062c00000000000
  000ec	f2 41 0f 5e d2	 divsd	 xmm2, xmm10
  000f1	f2 0f 11 91 48
	01 00 00	 movsd	 QWORD PTR [rcx+328], xmm2
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 88   : 		result.z = this->z - v.z;

  000f9	f2 0f 10 b9 98
	01 00 00	 movsd	 xmm7, QWORD PTR [rcx+408]
  00101	f2 0f 5c b9 c0
	01 00 00	 subsd	 xmm7, QWORD PTR [rcx+448]
  00109	f2 0f 10 81 88
	01 00 00	 movsd	 xmm0, QWORD PTR [rcx+392]
  00111	f2 0f 5c 81 b0
	01 00 00	 subsd	 xmm0, QWORD PTR [rcx+432]

; 140  : 	return Vec3(a.y * b.z - a.z * b.y,

  00119	f2 0f 59 b9 70
	01 00 00	 mulsd	 xmm7, QWORD PTR [rcx+368]
  00121	f2 0f 59 81 80
	01 00 00	 mulsd	 xmm0, QWORD PTR [rcx+384]
  00129	f2 0f 5c f8	 subsd	 xmm7, xmm0
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 123  : 			const double tqSign = copysign(1.0, noseTq.y);

  0012d	41 0f 28 c1	 movaps	 xmm0, xmm9
  00131	0f 28 cf	 movaps	 xmm1, xmm7
  00134	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_copysign

; 125  : 			const double weight = clamp(noseWhlGS / maxBrkOutSpd, 0.0, 1.0);

  0013a	f2 0f 10 8b 60
	01 00 00	 movsd	 xmm1, QWORD PTR [rbx+352]
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 66   :     return _Right < _Left ? _Right : _Left;

  00142	48 8d 84 24 88
	00 00 00	 lea	 rax, QWORD PTR value$[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 125  : 			const double weight = clamp(noseWhlGS / maxBrkOutSpd, 0.0, 1.0);

  0014a	f2 0f 5e 0d 00
	00 00 00	 divsd	 xmm1, QWORD PTR __real@3fb999999999999a
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 66   :     return _Right < _Left ? _Right : _Left;

  00152	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR max$[rsp]
  0015a	0f 57 db	 xorps	 xmm3, xmm3
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 125  : 			const double weight = clamp(noseWhlGS / maxBrkOutSpd, 0.0, 1.0);

  0015d	f2 44 0f 11 8c
	24 80 00 00 00	 movsd	 QWORD PTR max$[rsp], xmm9
  00167	66 41 0f 2f c9	 comisd	 xmm1, xmm9

; 131  : 		}

  0016c	44 0f 28 4c 24
	30		 movaps	 xmm9, XMMWORD PTR [rsp+48]
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib

; 24   :     return _CSTD fabs(_Xx);

  00172	41 0f 54 f8	 andps	 xmm7, xmm8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 131  : 		}

  00176	44 0f 28 44 24
	40		 movaps	 xmm8, XMMWORD PTR [rsp+64]
  0017c	f2 0f 11 9c 24
	90 00 00 00	 movsd	 QWORD PTR min$[rsp], xmm3
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 66   :     return _Right < _Left ? _Right : _Left;

  00185	48 0f 46 c8	 cmovbe	 rcx, rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 125  : 			const double weight = clamp(noseWhlGS / maxBrkOutSpd, 0.0, 1.0);

  00189	f2 0f 11 8c 24
	88 00 00 00	 movsd	 QWORD PTR value$[rsp], xmm1
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 43   :     return _Left < _Right ? _Right : _Left;

  00192	48 8d 84 24 90
	00 00 00	 lea	 rax, QWORD PTR min$[rsp]
  0019a	0f 57 c9	 xorps	 xmm1, xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\maths.h

; 42   : 	return v0 + w * (v1 - v0);

  0019d	f2 0f 5c 8c 24
	80 00 00 00	 subsd	 xmm1, QWORD PTR brkOutTq$[rsp]
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 43   :     return _Left < _Right ? _Right : _Left;

  001a6	66 0f 2f 19	 comisd	 xmm3, QWORD PTR [rcx]
  001aa	48 0f 46 c1	 cmovbe	 rax, rcx
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\maths.h

; 42   : 	return v0 + w * (v1 - v0);

  001ae	f2 0f 59 08	 mulsd	 xmm1, QWORD PTR [rax]
  001b2	f2 0f 58 8c 24
	80 00 00 00	 addsd	 xmm1, QWORD PTR brkOutTq$[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 127  : 			const double tqAftBrkOut = tqSign * std::max(abs(noseTq.y) - brkOutTq, 0.0);

  001bb	f2 0f 5c f9	 subsd	 xmm7, xmm1
  001bf	f2 0f 5f df	 maxsd	 xmm3, xmm7

; 131  : 		}

  001c3	0f 28 7c 24 50	 movaps	 xmm7, XMMWORD PTR [rsp+80]
  001c8	f2 0f 59 d8	 mulsd	 xmm3, xmm0
  001cc	f2 0f 5c de	 subsd	 xmm3, xmm6
  001d0	0f 28 74 24 60	 movaps	 xmm6, XMMWORD PTR [rsp+96]
  001d5	f2 41 0f 59 da	 mulsd	 xmm3, xmm10
  001da	f2 0f 58 9b a8
	01 00 00	 addsd	 xmm3, QWORD PTR [rbx+424]
  001e2	f2 0f 11 9b a8
	01 00 00	 movsd	 QWORD PTR [rbx+424], xmm3
  001ea	f2 41 0f 59 da	 mulsd	 xmm3, xmm10
  001ef	44 0f 28 54 24
	20		 movaps	 xmm10, XMMWORD PTR [rsp+32]
  001f5	f2 0f 58 9b a0
	01 00 00	 addsd	 xmm3, QWORD PTR [rbx+416]
  001fd	f2 0f 11 9b a0
	01 00 00	 movsd	 QWORD PTR [rbx+416], xmm3
  00205	48 83 c4 70	 add	 rsp, 112		; 00000070H
  00209	5b		 pop	 rbx
  0020a	c3		 ret	 0
?updateWheels@AirFrame@Aircraft@@QEAAXN@Z ENDP		; Aircraft::AirFrame::updateWheels
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?getLeftGrPos@AirFrame@Aircraft@@QEBANXZ
_TEXT	SEGMENT
this$dead$ = 8
?getLeftGrPos@AirFrame@Aircraft@@QEBANXZ PROC		; Aircraft::AirFrame::getLeftGrPos, COMDAT

; 133  : 		double getLeftGrPos() const { return leftGrPos; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  00007	f2 0f 10 80 f8
	00 00 00	 movsd	 xmm0, QWORD PTR [rax+248]
  0000f	c3		 ret	 0
?getLeftGrPos@AirFrame@Aircraft@@QEBANXZ ENDP		; Aircraft::AirFrame::getLeftGrPos
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?getNoseGrPos@AirFrame@Aircraft@@QEBANXZ
_TEXT	SEGMENT
this$dead$ = 8
?getNoseGrPos@AirFrame@Aircraft@@QEBANXZ PROC		; Aircraft::AirFrame::getNoseGrPos, COMDAT

; 139  : 		double getNoseGrPos() const { return noseGrPos; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  00007	f2 0f 10 80 08
	01 00 00	 movsd	 xmm0, QWORD PTR [rax+264]
  0000f	c3		 ret	 0
?getNoseGrPos@AirFrame@Aircraft@@QEBANXZ ENDP		; Aircraft::AirFrame::getNoseGrPos
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?calWhlArgChange@AirFrame@Aircraft@@SANNN@Z
_TEXT	SEGMENT
arg$ = 8
preArg$ = 16
?calWhlArgChange@AirFrame@Aircraft@@SANNN@Z PROC	; Aircraft::AirFrame::calWhlArgChange, COMDAT

; 143  : 		{

  00000	0f 28 e0	 movaps	 xmm4, xmm0

; 144  : 			double dltUpper = (1.0 - preArg) + arg;

  00003	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  0000b	f2 0f 5c c1	 subsd	 xmm0, xmm1
  0000f	f2 0f 58 c4	 addsd	 xmm0, xmm4

; 145  : 			double dltLower = (arg - preArg);

  00013	f2 0f 5c e1	 subsd	 xmm4, xmm1
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstdlib

; 24   :     return _CSTD fabs(_Xx);

  00017	0f 28 d8	 movaps	 xmm3, xmm0
  0001a	0f 54 1d 00 00
	00 00		 andps	 xmm3, QWORD PTR __xmm@7fffffffffffffff7fffffffffffffff
  00021	0f 28 cc	 movaps	 xmm1, xmm4
  00024	0f 54 0d 00 00
	00 00		 andps	 xmm1, QWORD PTR __xmm@7fffffffffffffff7fffffffffffffff
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 147  : 			if (abs(dltUpper) < abs(dltLower))

  0002b	66 0f 2f cb	 comisd	 xmm1, xmm3
  0002f	77 03		 ja	 SHORT $LN3@calWhlArgC

; 148  : 				return dltUpper;
; 149  : 			else
; 150  : 				return dltLower;

  00031	0f 28 c4	 movaps	 xmm0, xmm4
$LN3@calWhlArgC:

; 151  : 		}

  00034	c3		 ret	 0
?calWhlArgChange@AirFrame@Aircraft@@SANNN@Z ENDP	; Aircraft::AirFrame::calWhlArgChange
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?setRightWhlArg@AirFrame@Aircraft@@QEAAXN@Z
_TEXT	SEGMENT
this$dead$ = 8
rightWhlArg_$ = 16
?setRightWhlArg@AirFrame@Aircraft@@QEAAXN@Z PROC	; Aircraft::AirFrame::setRightWhlArg, COMDAT

; 153  : 		void setRightWhlArg(double rightWhlArg_) { rightWhlArg = rightWhlArg_; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  00007	f2 0f 11 88 38
	01 00 00	 movsd	 QWORD PTR [rax+312], xmm1
  0000f	c3		 ret	 0
?setRightWhlArg@AirFrame@Aircraft@@QEAAXN@Z ENDP	; Aircraft::AirFrame::setRightWhlArg
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?setLeftWhlArg@AirFrame@Aircraft@@QEAAXN@Z
_TEXT	SEGMENT
this$dead$ = 8
leftWhlArg_$ = 16
?setLeftWhlArg@AirFrame@Aircraft@@QEAAXN@Z PROC		; Aircraft::AirFrame::setLeftWhlArg, COMDAT

; 155  : 		void setLeftWhlArg(double leftWhlArg_) { leftWhlArg = leftWhlArg_; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  00007	f2 0f 11 88 10
	01 00 00	 movsd	 QWORD PTR [rax+272], xmm1
  0000f	c3		 ret	 0
?setLeftWhlArg@AirFrame@Aircraft@@QEAAXN@Z ENDP		; Aircraft::AirFrame::setLeftWhlArg
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?setNoseWhlForce@AirFrame@Aircraft@@QEAAXAEBUForce@@@Z
_TEXT	SEGMENT
this$dead$ = 8
noseWhlForce_$ = 16
?setNoseWhlForce@AirFrame@Aircraft@@QEAAXAEBUForce@@@Z PROC ; Aircraft::AirFrame::setNoseWhlForce, COMDAT

; 157  : 		void setNoseWhlForce(const Force& noseWhlForce_) { noseWhlForce = noseWhlForce_; }

  00000	0f 10 02	 movups	 xmm0, XMMWORD PTR [rdx]
  00003	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  0000a	0f 11 80 70 01
	00 00		 movups	 XMMWORD PTR [rax+368], xmm0
  00011	0f 10 4a 10	 movups	 xmm1, XMMWORD PTR [rdx+16]
  00015	0f 11 88 80 01
	00 00		 movups	 XMMWORD PTR [rax+384], xmm1
  0001c	0f 10 42 20	 movups	 xmm0, XMMWORD PTR [rdx+32]
  00020	0f 11 80 90 01
	00 00		 movups	 XMMWORD PTR [rax+400], xmm0
  00027	c3		 ret	 0
?setNoseWhlForce@AirFrame@Aircraft@@QEAAXAEBUForce@@@Z ENDP ; Aircraft::AirFrame::setNoseWhlForce
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?getNoseWhlAng@AirFrame@Aircraft@@QEBANXZ
_TEXT	SEGMENT
this$dead$ = 8
?getNoseWhlAng@AirFrame@Aircraft@@QEBANXZ PROC		; Aircraft::AirFrame::getNoseWhlAng, COMDAT

; 159  : 		double getNoseWhlAng() const { return noseWhlAng; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  00007	f2 0f 10 80 a0
	01 00 00	 movsd	 xmm0, QWORD PTR [rax+416]
  0000f	c3		 ret	 0
?getNoseWhlAng@AirFrame@Aircraft@@QEBANXZ ENDP		; Aircraft::AirFrame::getNoseWhlAng
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?setNoseWhlGS@AirFrame@Aircraft@@QEAAXN@Z
_TEXT	SEGMENT
this$dead$ = 8
noseWhlGS_$ = 16
?setNoseWhlGS@AirFrame@Aircraft@@QEAAXN@Z PROC		; Aircraft::AirFrame::setNoseWhlGS, COMDAT

; 162  : 		void setNoseWhlGS(double noseWhlGS_) { noseWhlGS = noseWhlGS_; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  00007	f2 0f 11 88 60
	01 00 00	 movsd	 QWORD PTR [rax+352], xmm1
  0000f	c3		 ret	 0
?setNoseWhlGS@AirFrame@Aircraft@@QEAAXN@Z ENDP		; Aircraft::AirFrame::setNoseWhlGS
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?setLeftWhlComp@AirFrame@Aircraft@@QEAAXN@Z
_TEXT	SEGMENT
this$dead$ = 8
leftWhlComp_$ = 16
?setLeftWhlComp@AirFrame@Aircraft@@QEAAXN@Z PROC	; Aircraft::AirFrame::setLeftWhlComp, COMDAT

; 165  : 		void setLeftWhlComp(double leftWhlComp_) { leftWhlComp = leftWhlComp_; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  00007	f2 0f 11 88 30
	01 00 00	 movsd	 QWORD PTR [rax+304], xmm1
  0000f	c3		 ret	 0
?setLeftWhlComp@AirFrame@Aircraft@@QEAAXN@Z ENDP	; Aircraft::AirFrame::setLeftWhlComp
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?setRightWhlComp@AirFrame@Aircraft@@QEAAXN@Z
_TEXT	SEGMENT
this$dead$ = 8
rightWhlComp_$ = 16
?setRightWhlComp@AirFrame@Aircraft@@QEAAXN@Z PROC	; Aircraft::AirFrame::setRightWhlComp, COMDAT

; 168  : 		void setRightWhlComp(double rightWhlComp_) { rightWhlComp = rightWhlComp_; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  00007	f2 0f 11 88 58
	01 00 00	 movsd	 QWORD PTR [rax+344], xmm1
  0000f	c3		 ret	 0
?setRightWhlComp@AirFrame@Aircraft@@QEAAXN@Z ENDP	; Aircraft::AirFrame::setRightWhlComp
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?setNoseWhlComp@AirFrame@Aircraft@@QEAAXN@Z
_TEXT	SEGMENT
this$dead$ = 8
noseWhlComp_$ = 16
?setNoseWhlComp@AirFrame@Aircraft@@QEAAXN@Z PROC	; Aircraft::AirFrame::setNoseWhlComp, COMDAT

; 171  : 		void setNoseWhlComp(double noseWhlComp_) { noseWhlComp = noseWhlComp_; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  00007	f2 0f 11 88 68
	01 00 00	 movsd	 QWORD PTR [rax+360], xmm1
  0000f	c3		 ret	 0
?setNoseWhlComp@AirFrame@Aircraft@@QEAAXN@Z ENDP	; Aircraft::AirFrame::setNoseWhlComp
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?setLeftWhlGS@AirFrame@Aircraft@@QEAAXN@Z
_TEXT	SEGMENT
this$dead$ = 8
leftWhlGS_$ = 16
?setLeftWhlGS@AirFrame@Aircraft@@QEAAXN@Z PROC		; Aircraft::AirFrame::setLeftWhlGS, COMDAT

; 174  : 		void setLeftWhlGS(double leftWhlGS_) { leftWhlGS = leftWhlGS_; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  00007	f2 0f 11 88 28
	01 00 00	 movsd	 QWORD PTR [rax+296], xmm1
  0000f	c3		 ret	 0
?setLeftWhlGS@AirFrame@Aircraft@@QEAAXN@Z ENDP		; Aircraft::AirFrame::setLeftWhlGS
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
;	COMDAT ?setRightWhlGS@AirFrame@Aircraft@@QEAAXN@Z
_TEXT	SEGMENT
this$dead$ = 8
rightWhlGS_$ = 16
?setRightWhlGS@AirFrame@Aircraft@@QEAAXN@Z PROC		; Aircraft::AirFrame::setRightWhlGS, COMDAT

; 177  : 		void setRightWhlGS(double rightWhlGS_) { rightWhlGS = rightWhlGS_; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  00007	f2 0f 11 88 50
	01 00 00	 movsd	 QWORD PTR [rax+336], xmm1
  0000f	c3		 ret	 0
?setRightWhlGS@AirFrame@Aircraft@@QEAAXN@Z ENDP		; Aircraft::AirFrame::setRightWhlGS
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
;	COMDAT ??0State@Aircraft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0State@Aircraft@@QEAA@XZ PROC				; Aircraft::State::State, COMDAT

; 14   : 		~State() {};
; 15   : 
; 16   : 		double getAoa() const
; 17   : 		{
; 18   : 			return aoa;
; 19   : 		}
; 20   : 
; 21   : 		void setAoa(double aoa_)
; 22   : 		{
; 23   : 			aoa = aoa_;
; 24   : 		}
; 25   : 
; 26   : 		Vec3 getCg() const
; 27   : 		{
; 28   : 			return cg;
; 29   : 		}
; 30   : 
; 31   : 		void setCg(const Vec3& cg_)
; 32   : 		{
; 33   : 			cg = cg_;
; 34   : 		}
; 35   : 
; 36   : 		Vec3 getAirspeed() const
; 37   : 		{
; 38   : 			return airspeed;
; 39   : 		}
; 40   : 
; 41   : 		void setAirspeed(const Vec3& airspeed_)
; 42   : 		{
; 43   : 			airspeed = airspeed_;
; 44   : 		}
; 45   : 
; 46   : 		Vec3 getMoment() const
; 47   : 		{
; 48   : 			return moment;
; 49   : 		}
; 50   : 
; 51   : 		void setMoment(const Vec3& moment_)
; 52   : 		{
; 53   : 			moment = moment_;
; 54   : 		}
; 55   : 
; 56   : 		Vec3 getForce() const
; 57   : 		{
; 58   : 			return force;
; 59   : 		}
; 60   : 
; 61   : 		void setForce(const Vec3& force_)
; 62   : 		{
; 63   : 			force = force_;
; 64   : 		}
; 65   : 
; 66   : 		inline void resetForce();
; 67   : 
; 68   : 		inline void addForce(const Force& force_);
; 69   : 
; 70   : 		double getMach() const { return mach; }
; 71   : 		void setMach(double mach_) { mach = mach_; }
; 72   : 
; 73   : 		double getDyPre() const { return dyPre; }
; 74   : 		void setDyPre(double dyPre_) { dyPre = dyPre_; }
; 75   : 
; 76   : 		double getMass() const { return mass; }
; 77   : 		void setMass(double mass_) { mass = mass_; }
; 78   : 
; 79   : 		double getAos() const { return aos; }
; 80   : 		void setAos(double aos_) { aos = aos_; }
; 81   : 
; 82   : 		Vec3 getAngle() const { return angle; }
; 83   : 		void setAngle(const Vec3& angle_) { angle = angle_; }
; 84   : 
; 85   : 		Vec3 getAngAcc() const { return angAcc; }
; 86   : 		void setAngAcc(const Vec3& angAcc_) { angAcc = angAcc_; }
; 87   : 
; 88   : 		Vec3 getAngVelo() const { return angVelo; }
; 89   : 		void setAngVelo(const Vec3& angVelo_) { angVelo = angVelo_; }
; 90   : 
; 91   : 		Vec3 getLocalSpeed() const { return localSpeed; }
; 92   : 		void setLocalSpeed(const Vec3& localSpeed_) { localSpeed = localSpeed_; }
; 93   : 
; 94   : 		Vec3 getAccel() const { return accel; }
; 95   : 		void setAccel(const Vec3& accel_) { accel = accel_; }
; 96   : 
; 97   : 	private:
; 98   : 		double aoa = 0;

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax

; 99   : 		double aos = 0;

  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 21   : 	Vec3(double v) : x(v), y(v), z(v) {}

  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
  0000d	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax
  00011	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax
  00015	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax
  00019	48 89 41 30	 mov	 QWORD PTR [rcx+48], rax
  0001d	48 89 41 38	 mov	 QWORD PTR [rcx+56], rax
  00021	48 89 41 40	 mov	 QWORD PTR [rcx+64], rax
  00025	48 89 41 48	 mov	 QWORD PTR [rcx+72], rax
  00029	48 89 41 50	 mov	 QWORD PTR [rcx+80], rax
  0002d	48 89 41 58	 mov	 QWORD PTR [rcx+88], rax
  00031	48 89 41 60	 mov	 QWORD PTR [rcx+96], rax
  00035	48 89 41 68	 mov	 QWORD PTR [rcx+104], rax
  00039	48 89 41 70	 mov	 QWORD PTR [rcx+112], rax
  0003d	48 89 41 78	 mov	 QWORD PTR [rcx+120], rax
  00041	48 89 81 80 00
	00 00		 mov	 QWORD PTR [rcx+128], rax
  00048	48 89 81 88 00
	00 00		 mov	 QWORD PTR [rcx+136], rax
  0004f	48 89 81 90 00
	00 00		 mov	 QWORD PTR [rcx+144], rax
  00056	48 89 81 98 00
	00 00		 mov	 QWORD PTR [rcx+152], rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h

; 108  : 		double mach = 0;

  0005d	48 89 81 a0 00
	00 00		 mov	 QWORD PTR [rcx+160], rax

; 109  : 		double dyPre = 0;

  00064	48 89 81 a8 00
	00 00		 mov	 QWORD PTR [rcx+168], rax

; 110  : 		double mass = 0;

  0006b	48 89 81 b0 00
	00 00		 mov	 QWORD PTR [rcx+176], rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 21   : 	Vec3(double v) : x(v), y(v), z(v) {}

  00072	48 89 81 b8 00
	00 00		 mov	 QWORD PTR [rcx+184], rax
  00079	48 89 81 c0 00
	00 00		 mov	 QWORD PTR [rcx+192], rax
  00080	48 89 81 c8 00
	00 00		 mov	 QWORD PTR [rcx+200], rax
  00087	48 89 81 d0 00
	00 00		 mov	 QWORD PTR [rcx+208], rax
  0008e	48 89 81 d8 00
	00 00		 mov	 QWORD PTR [rcx+216], rax
  00095	48 89 81 e0 00
	00 00		 mov	 QWORD PTR [rcx+224], rax
  0009c	48 89 81 e8 00
	00 00		 mov	 QWORD PTR [rcx+232], rax
  000a3	48 89 81 f0 00
	00 00		 mov	 QWORD PTR [rcx+240], rax
  000aa	48 89 81 f8 00
	00 00		 mov	 QWORD PTR [rcx+248], rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h

; 13   : 		State() {};

  000b1	48 8b c1	 mov	 rax, rcx
  000b4	c3		 ret	 0
??0State@Aircraft@@QEAA@XZ ENDP				; Aircraft::State::State
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
;	COMDAT ??1State@Aircraft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1State@Aircraft@@QEAA@XZ PROC				; Aircraft::State::~State, COMDAT

; 14   : 		~State() {};

  00000	c2 00 00	 ret	 0
??1State@Aircraft@@QEAA@XZ ENDP				; Aircraft::State::~State
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
;	COMDAT ?getAoa@State@Aircraft@@QEBANXZ
_TEXT	SEGMENT
this$dead$ = 8
?getAoa@State@Aircraft@@QEBANXZ PROC			; Aircraft::State::getAoa, COMDAT

; 18   : 			return aoa;

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?state@@3PEAVState@Aircraft@@EA
  00007	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [rax]

; 19   : 		}

  0000b	c3		 ret	 0
?getAoa@State@Aircraft@@QEBANXZ ENDP			; Aircraft::State::getAoa
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
;	COMDAT ?setAoa@State@Aircraft@@QEAAXN@Z
_TEXT	SEGMENT
this$dead$ = 8
aoa_$ = 16
?setAoa@State@Aircraft@@QEAAXN@Z PROC			; Aircraft::State::setAoa, COMDAT

; 23   : 			aoa = aoa_;

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?state@@3PEAVState@Aircraft@@EA
  00007	f2 0f 11 08	 movsd	 QWORD PTR [rax], xmm1

; 24   : 		}

  0000b	c3		 ret	 0
?setAoa@State@Aircraft@@QEAAXN@Z ENDP			; Aircraft::State::setAoa
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
;	COMDAT ?getCg@State@Aircraft@@QEBA?AUVec3@@XZ
_TEXT	SEGMENT
this$dead$ = 8
__$ReturnUdt$ = 16
?getCg@State@Aircraft@@QEBA?AUVec3@@XZ PROC		; Aircraft::State::getCg, COMDAT

; 28   : 			return cg;

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?state@@3PEAVState@Aircraft@@EA
  00007	0f 10 80 b8 00
	00 00		 movups	 xmm0, XMMWORD PTR [rax+184]
  0000e	f2 0f 10 88 c8
	00 00 00	 movsd	 xmm1, QWORD PTR [rax+200]
  00016	48 8b c2	 mov	 rax, rdx
  00019	0f 11 02	 movups	 XMMWORD PTR [rdx], xmm0
  0001c	f2 0f 11 4a 10	 movsd	 QWORD PTR [rdx+16], xmm1

; 29   : 		}

  00021	c3		 ret	 0
?getCg@State@Aircraft@@QEBA?AUVec3@@XZ ENDP		; Aircraft::State::getCg
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
;	COMDAT ?setCg@State@Aircraft@@QEAAXAEBUVec3@@@Z
_TEXT	SEGMENT
this$dead$ = 8
cg_$ = 16
?setCg@State@Aircraft@@QEAAXAEBUVec3@@@Z PROC		; Aircraft::State::setCg, COMDAT

; 33   : 			cg = cg_;

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?state@@3PEAVState@Aircraft@@EA
  00007	0f 10 02	 movups	 xmm0, XMMWORD PTR [rdx]
  0000a	0f 11 80 b8 00
	00 00		 movups	 XMMWORD PTR [rax+184], xmm0
  00011	f2 0f 10 4a 10	 movsd	 xmm1, QWORD PTR [rdx+16]
  00016	f2 0f 11 88 c8
	00 00 00	 movsd	 QWORD PTR [rax+200], xmm1

; 34   : 		}

  0001e	c3		 ret	 0
?setCg@State@Aircraft@@QEAAXAEBUVec3@@@Z ENDP		; Aircraft::State::setCg
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
;	COMDAT ?getAirspeed@State@Aircraft@@QEBA?AUVec3@@XZ
_TEXT	SEGMENT
this$dead$ = 8
__$ReturnUdt$ = 16
?getAirspeed@State@Aircraft@@QEBA?AUVec3@@XZ PROC	; Aircraft::State::getAirspeed, COMDAT

; 38   : 			return airspeed;

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?state@@3PEAVState@Aircraft@@EA
  00007	0f 10 40 70	 movups	 xmm0, XMMWORD PTR [rax+112]
  0000b	f2 0f 10 88 80
	00 00 00	 movsd	 xmm1, QWORD PTR [rax+128]
  00013	48 8b c2	 mov	 rax, rdx
  00016	0f 11 02	 movups	 XMMWORD PTR [rdx], xmm0
  00019	f2 0f 11 4a 10	 movsd	 QWORD PTR [rdx+16], xmm1

; 39   : 		}

  0001e	c3		 ret	 0
?getAirspeed@State@Aircraft@@QEBA?AUVec3@@XZ ENDP	; Aircraft::State::getAirspeed
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
;	COMDAT ?setAirspeed@State@Aircraft@@QEAAXAEBUVec3@@@Z
_TEXT	SEGMENT
this$dead$ = 8
airspeed_$ = 16
?setAirspeed@State@Aircraft@@QEAAXAEBUVec3@@@Z PROC	; Aircraft::State::setAirspeed, COMDAT

; 43   : 			airspeed = airspeed_;

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?state@@3PEAVState@Aircraft@@EA
  00007	0f 10 02	 movups	 xmm0, XMMWORD PTR [rdx]
  0000a	0f 11 40 70	 movups	 XMMWORD PTR [rax+112], xmm0
  0000e	f2 0f 10 4a 10	 movsd	 xmm1, QWORD PTR [rdx+16]
  00013	f2 0f 11 88 80
	00 00 00	 movsd	 QWORD PTR [rax+128], xmm1

; 44   : 		}

  0001b	c3		 ret	 0
?setAirspeed@State@Aircraft@@QEAAXAEBUVec3@@@Z ENDP	; Aircraft::State::setAirspeed
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
;	COMDAT ?getMoment@State@Aircraft@@QEBA?AUVec3@@XZ
_TEXT	SEGMENT
this$dead$ = 8
__$ReturnUdt$ = 16
?getMoment@State@Aircraft@@QEBA?AUVec3@@XZ PROC		; Aircraft::State::getMoment, COMDAT

; 48   : 			return moment;

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?state@@3PEAVState@Aircraft@@EA
  00007	0f 10 80 d0 00
	00 00		 movups	 xmm0, XMMWORD PTR [rax+208]
  0000e	f2 0f 10 88 e0
	00 00 00	 movsd	 xmm1, QWORD PTR [rax+224]
  00016	48 8b c2	 mov	 rax, rdx
  00019	0f 11 02	 movups	 XMMWORD PTR [rdx], xmm0
  0001c	f2 0f 11 4a 10	 movsd	 QWORD PTR [rdx+16], xmm1

; 49   : 		}

  00021	c3		 ret	 0
?getMoment@State@Aircraft@@QEBA?AUVec3@@XZ ENDP		; Aircraft::State::getMoment
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
;	COMDAT ?getForce@State@Aircraft@@QEBA?AUVec3@@XZ
_TEXT	SEGMENT
this$dead$ = 8
__$ReturnUdt$ = 16
?getForce@State@Aircraft@@QEBA?AUVec3@@XZ PROC		; Aircraft::State::getForce, COMDAT

; 58   : 			return force;

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?state@@3PEAVState@Aircraft@@EA
  00007	0f 10 80 e8 00
	00 00		 movups	 xmm0, XMMWORD PTR [rax+232]
  0000e	f2 0f 10 88 f8
	00 00 00	 movsd	 xmm1, QWORD PTR [rax+248]
  00016	48 8b c2	 mov	 rax, rdx
  00019	0f 11 02	 movups	 XMMWORD PTR [rdx], xmm0
  0001c	f2 0f 11 4a 10	 movsd	 QWORD PTR [rdx+16], xmm1

; 59   : 		}

  00021	c3		 ret	 0
?getForce@State@Aircraft@@QEBA?AUVec3@@XZ ENDP		; Aircraft::State::getForce
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
;	COMDAT ?setMass@State@Aircraft@@QEAAXN@Z
_TEXT	SEGMENT
this$dead$ = 8
mass_$ = 16
?setMass@State@Aircraft@@QEAAXN@Z PROC			; Aircraft::State::setMass, COMDAT

; 77   : 		void setMass(double mass_) { mass = mass_; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?state@@3PEAVState@Aircraft@@EA
  00007	f2 0f 11 88 b0
	00 00 00	 movsd	 QWORD PTR [rax+176], xmm1
  0000f	c3		 ret	 0
?setMass@State@Aircraft@@QEAAXN@Z ENDP			; Aircraft::State::setMass
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
;	COMDAT ?setAos@State@Aircraft@@QEAAXN@Z
_TEXT	SEGMENT
this$dead$ = 8
aos_$ = 16
?setAos@State@Aircraft@@QEAAXN@Z PROC			; Aircraft::State::setAos, COMDAT

; 80   : 		void setAos(double aos_) { aos = aos_; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?state@@3PEAVState@Aircraft@@EA
  00007	f2 0f 11 48 08	 movsd	 QWORD PTR [rax+8], xmm1
  0000c	c3		 ret	 0
?setAos@State@Aircraft@@QEAAXN@Z ENDP			; Aircraft::State::setAos
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
;	COMDAT ?setAngle@State@Aircraft@@QEAAXAEBUVec3@@@Z
_TEXT	SEGMENT
this$dead$ = 8
angle_$ = 16
?setAngle@State@Aircraft@@QEAAXAEBUVec3@@@Z PROC	; Aircraft::State::setAngle, COMDAT

; 83   : 		void setAngle(const Vec3& angle_) { angle = angle_; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?state@@3PEAVState@Aircraft@@EA
  00007	0f 10 02	 movups	 xmm0, XMMWORD PTR [rdx]
  0000a	0f 11 40 10	 movups	 XMMWORD PTR [rax+16], xmm0
  0000e	f2 0f 10 4a 10	 movsd	 xmm1, QWORD PTR [rdx+16]
  00013	f2 0f 11 48 20	 movsd	 QWORD PTR [rax+32], xmm1
  00018	c3		 ret	 0
?setAngle@State@Aircraft@@QEAAXAEBUVec3@@@Z ENDP	; Aircraft::State::setAngle
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
;	COMDAT ?setAngAcc@State@Aircraft@@QEAAXAEBUVec3@@@Z
_TEXT	SEGMENT
this$dead$ = 8
angAcc_$ = 16
?setAngAcc@State@Aircraft@@QEAAXAEBUVec3@@@Z PROC	; Aircraft::State::setAngAcc, COMDAT

; 86   : 		void setAngAcc(const Vec3& angAcc_) { angAcc = angAcc_; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?state@@3PEAVState@Aircraft@@EA
  00007	0f 10 02	 movups	 xmm0, XMMWORD PTR [rdx]
  0000a	0f 11 40 28	 movups	 XMMWORD PTR [rax+40], xmm0
  0000e	f2 0f 10 4a 10	 movsd	 xmm1, QWORD PTR [rdx+16]
  00013	f2 0f 11 48 38	 movsd	 QWORD PTR [rax+56], xmm1
  00018	c3		 ret	 0
?setAngAcc@State@Aircraft@@QEAAXAEBUVec3@@@Z ENDP	; Aircraft::State::setAngAcc
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
;	COMDAT ?setAngVelo@State@Aircraft@@QEAAXAEBUVec3@@@Z
_TEXT	SEGMENT
this$dead$ = 8
angVelo_$ = 16
?setAngVelo@State@Aircraft@@QEAAXAEBUVec3@@@Z PROC	; Aircraft::State::setAngVelo, COMDAT

; 89   : 		void setAngVelo(const Vec3& angVelo_) { angVelo = angVelo_; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?state@@3PEAVState@Aircraft@@EA
  00007	0f 10 02	 movups	 xmm0, XMMWORD PTR [rdx]
  0000a	0f 11 40 40	 movups	 XMMWORD PTR [rax+64], xmm0
  0000e	f2 0f 10 4a 10	 movsd	 xmm1, QWORD PTR [rdx+16]
  00013	f2 0f 11 48 50	 movsd	 QWORD PTR [rax+80], xmm1
  00018	c3		 ret	 0
?setAngVelo@State@Aircraft@@QEAAXAEBUVec3@@@Z ENDP	; Aircraft::State::setAngVelo
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
;	COMDAT ?setLocalSpeed@State@Aircraft@@QEAAXAEBUVec3@@@Z
_TEXT	SEGMENT
this$dead$ = 8
localSpeed_$ = 16
?setLocalSpeed@State@Aircraft@@QEAAXAEBUVec3@@@Z PROC	; Aircraft::State::setLocalSpeed, COMDAT

; 92   : 		void setLocalSpeed(const Vec3& localSpeed_) { localSpeed = localSpeed_; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?state@@3PEAVState@Aircraft@@EA
  00007	0f 10 02	 movups	 xmm0, XMMWORD PTR [rdx]
  0000a	0f 11 40 58	 movups	 XMMWORD PTR [rax+88], xmm0
  0000e	f2 0f 10 4a 10	 movsd	 xmm1, QWORD PTR [rdx+16]
  00013	f2 0f 11 48 68	 movsd	 QWORD PTR [rax+104], xmm1
  00018	c3		 ret	 0
?setLocalSpeed@State@Aircraft@@QEAAXAEBUVec3@@@Z ENDP	; Aircraft::State::setLocalSpeed
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
;	COMDAT ?setAccel@State@Aircraft@@QEAAXAEBUVec3@@@Z
_TEXT	SEGMENT
this$dead$ = 8
accel_$ = 16
?setAccel@State@Aircraft@@QEAAXAEBUVec3@@@Z PROC	; Aircraft::State::setAccel, COMDAT

; 95   : 		void setAccel(const Vec3& accel_) { accel = accel_; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?state@@3PEAVState@Aircraft@@EA
  00007	0f 10 02	 movups	 xmm0, XMMWORD PTR [rdx]
  0000a	0f 11 80 88 00
	00 00		 movups	 XMMWORD PTR [rax+136], xmm0
  00011	f2 0f 10 4a 10	 movsd	 xmm1, QWORD PTR [rdx+16]
  00016	f2 0f 11 88 98
	00 00 00	 movsd	 QWORD PTR [rax+152], xmm1
  0001e	c3		 ret	 0
?setAccel@State@Aircraft@@QEAAXAEBUVec3@@@Z ENDP	; Aircraft::State::setAccel
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
;	COMDAT ?addForce@State@Aircraft@@QEAAXAEBUForce@@@Z
_TEXT	SEGMENT
this$dead$ = 96
force_$ = 104
?addForce@State@Aircraft@@QEAAXAEBUForce@@@Z PROC	; Aircraft::State::addForce, COMDAT

; 118  : 	{

$LN20:
  00000	48 83 ec 58	 sub	 rsp, 88			; 00000058H

; 119  : 		force = force + force_.force;

  00004	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?state@@3PEAVState@Aircraft@@EA
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 76   : 		result.x = this->x + v.x;

  0000b	f2 0f 10 02	 movsd	 xmm0, QWORD PTR [rdx]
  0000f	0f 29 74 24 40	 movaps	 XMMWORD PTR [rsp+64], xmm6
  00014	0f 29 7c 24 30	 movaps	 XMMWORD PTR [rsp+48], xmm7
  00019	f2 0f 58 80 e8
	00 00 00	 addsd	 xmm0, QWORD PTR [rax+232]

; 77   : 		result.y = this->y + v.y;

  00021	f2 0f 10 88 f0
	00 00 00	 movsd	 xmm1, QWORD PTR [rax+240]
  00029	f2 0f 58 4a 08	 addsd	 xmm1, QWORD PTR [rdx+8]

; 78   : 		result.z = this->z + v.z;

  0002e	f2 0f 10 90 f8
	00 00 00	 movsd	 xmm2, QWORD PTR [rax+248]
  00036	f2 0f 58 52 10	 addsd	 xmm2, QWORD PTR [rdx+16]
  0003b	44 0f 29 44 24
	20		 movaps	 XMMWORD PTR [rsp+32], xmm8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h

; 119  : 		force = force + force_.force;

  00041	66 0f 14 c1	 unpcklpd xmm0, xmm1
  00045	0f 11 80 e8 00
	00 00		 movups	 XMMWORD PTR [rax+232], xmm0
  0004c	f2 0f 11 90 f8
	00 00 00	 movsd	 QWORD PTR [rax+248], xmm2
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 140  : 	return Vec3(a.y * b.z - a.z * b.y,

  00054	f2 44 0f 10 42
	08		 movsd	 xmm8, QWORD PTR [rdx+8]

; 87   : 		result.y = this->y - v.y;

  0005a	f2 0f 10 72 20	 movsd	 xmm6, QWORD PTR [rdx+32]

; 140  : 	return Vec3(a.y * b.z - a.z * b.y,

  0005f	41 0f 28 c0	 movaps	 xmm0, xmm8

; 87   : 		result.y = this->y - v.y;

  00063	f2 0f 5c b0 c0
	00 00 00	 subsd	 xmm6, QWORD PTR [rax+192]
  0006b	f2 0f 10 7a 18	 movsd	 xmm7, QWORD PTR [rdx+24]
  00070	f2 0f 5c b8 b8
	00 00 00	 subsd	 xmm7, QWORD PTR [rax+184]

; 140  : 	return Vec3(a.y * b.z - a.z * b.y,

  00078	f2 0f 10 52 10	 movsd	 xmm2, QWORD PTR [rdx+16]
  0007d	f2 0f 10 22	 movsd	 xmm4, QWORD PTR [rdx]
  00081	0f 28 ea	 movaps	 xmm5, xmm2

; 88   : 		result.z = this->z - v.z;

  00084	f2 0f 10 4a 28	 movsd	 xmm1, QWORD PTR [rdx+40]

; 140  : 	return Vec3(a.y * b.z - a.z * b.y,

  00089	0f 28 dc	 movaps	 xmm3, xmm4

; 88   : 		result.z = this->z - v.z;

  0008c	f2 0f 5c 88 c8
	00 00 00	 subsd	 xmm1, QWORD PTR [rax+200]

; 140  : 	return Vec3(a.y * b.z - a.z * b.y,

  00094	f2 0f 59 ee	 mulsd	 xmm5, xmm6
  00098	f2 44 0f 59 c7	 mulsd	 xmm8, xmm7
  0009d	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  000a1	f2 0f 59 d9	 mulsd	 xmm3, xmm1
  000a5	f2 0f 59 d7	 mulsd	 xmm2, xmm7
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h

; 124  : 	}

  000a9	0f 28 7c 24 30	 movaps	 xmm7, XMMWORD PTR [rsp+48]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 140  : 	return Vec3(a.y * b.z - a.z * b.y,

  000ae	f2 0f 5c e8	 subsd	 xmm5, xmm0
  000b2	f2 0f 59 e6	 mulsd	 xmm4, xmm6
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h

; 124  : 	}

  000b6	0f 28 74 24 40	 movaps	 xmm6, XMMWORD PTR [rsp+64]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 140  : 	return Vec3(a.y * b.z - a.z * b.y,

  000bb	f2 0f 5c da	 subsd	 xmm3, xmm2

; 76   : 		result.x = this->x + v.x;

  000bf	f2 0f 58 a8 d0
	00 00 00	 addsd	 xmm5, QWORD PTR [rax+208]

; 140  : 	return Vec3(a.y * b.z - a.z * b.y,

  000c7	f2 44 0f 5c c4	 subsd	 xmm8, xmm4

; 77   : 		result.y = this->y + v.y;

  000cc	f2 0f 58 98 d8
	00 00 00	 addsd	 xmm3, QWORD PTR [rax+216]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h

; 123  : 		moment = moment + deltaMoment;

  000d4	0f 28 c5	 movaps	 xmm0, xmm5
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 78   : 		result.z = this->z + v.z;

  000d7	f2 44 0f 58 80
	e0 00 00 00	 addsd	 xmm8, QWORD PTR [rax+224]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h

; 123  : 		moment = moment + deltaMoment;

  000e0	66 0f 14 c3	 unpcklpd xmm0, xmm3
  000e4	0f 11 80 d0 00
	00 00		 movups	 XMMWORD PTR [rax+208], xmm0
  000eb	f2 44 0f 11 80
	e0 00 00 00	 movsd	 QWORD PTR [rax+224], xmm8

; 124  : 	}

  000f4	44 0f 28 44 24
	20		 movaps	 xmm8, XMMWORD PTR [rsp+32]
  000fa	48 83 c4 58	 add	 rsp, 88			; 00000058H
  000fe	c3		 ret	 0
?addForce@State@Aircraft@@QEAAXAEBUForce@@@Z ENDP	; Aircraft::State::addForce
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
;	COMDAT ?resetForce@State@Aircraft@@QEAAXXZ
_TEXT	SEGMENT
this$dead$ = 48
?resetForce@State@Aircraft@@QEAAXXZ PROC		; Aircraft::State::resetForce, COMDAT

; 127  : 	{

$LN8:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 128  : 		force = Vec3();

  00004	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?state@@3PEAVState@Aircraft@@EA
  0000b	0f 57 c0	 xorps	 xmm0, xmm0
  0000e	0f 57 c9	 xorps	 xmm1, xmm1
  00011	0f 11 80 e8 00
	00 00		 movups	 XMMWORD PTR [rax+232], xmm0

; 129  : 		moment = Vec3();

  00018	0f 11 80 d0 00
	00 00		 movups	 XMMWORD PTR [rax+208], xmm0
  0001f	f2 0f 11 88 f8
	00 00 00	 movsd	 QWORD PTR [rax+248], xmm1
  00027	f2 0f 11 88 e0
	00 00 00	 movsd	 QWORD PTR [rax+224], xmm1

; 130  : 	}

  0002f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00033	c3		 ret	 0
?resetForce@State@Aircraft@@QEAAXXZ ENDP		; Aircraft::State::resetForce
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
;	COMDAT ??0World@Aircraft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0World@Aircraft@@QEAA@XZ PROC				; Aircraft::World::World, COMDAT
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 21   : 	Vec3(double v) : x(v), y(v), z(v) {}

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax
  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h

; 54   : 		double atmTemp = 0; // Kelwins

  0000d	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 55   : 		double atmDensity = 0;

  00011	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax

; 56   : 		double atmPre = 0;

  00015	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax

; 57   : 		double soundSpeed = 0;

  00019	48 89 41 30	 mov	 QWORD PTR [rcx+48], rax

; 58   : 		double altitude = 0;

  0001d	48 89 41 38	 mov	 QWORD PTR [rcx+56], rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 21   : 	Vec3(double v) : x(v), y(v), z(v) {}

  00021	48 89 41 40	 mov	 QWORD PTR [rcx+64], rax
  00025	48 89 41 48	 mov	 QWORD PTR [rcx+72], rax
  00029	48 89 41 50	 mov	 QWORD PTR [rcx+80], rax
  0002d	48 89 41 58	 mov	 QWORD PTR [rcx+88], rax
  00031	48 89 41 60	 mov	 QWORD PTR [rcx+96], rax
  00035	48 89 41 68	 mov	 QWORD PTR [rcx+104], rax
  00039	48 89 41 70	 mov	 QWORD PTR [rcx+112], rax
  0003d	48 89 41 78	 mov	 QWORD PTR [rcx+120], rax
  00041	48 89 81 80 00
	00 00		 mov	 QWORD PTR [rcx+128], rax
  00048	48 89 81 88 00
	00 00		 mov	 QWORD PTR [rcx+136], rax
  0004f	48 89 81 90 00
	00 00		 mov	 QWORD PTR [rcx+144], rax
  00056	48 89 81 98 00
	00 00		 mov	 QWORD PTR [rcx+152], rax
  0005d	48 89 81 a0 00
	00 00		 mov	 QWORD PTR [rcx+160], rax
  00064	48 89 81 a8 00
	00 00		 mov	 QWORD PTR [rcx+168], rax
  0006b	48 89 81 b0 00
	00 00		 mov	 QWORD PTR [rcx+176], rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h

; 66   : 		double surfHeight = 0;

  00072	48 89 81 b8 00
	00 00		 mov	 QWORD PTR [rcx+184], rax
  00079	48 8b c1	 mov	 rax, rcx
  0007c	c3		 ret	 0
??0World@Aircraft@@QEAA@XZ ENDP				; Aircraft::World::World
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
;	COMDAT ??1World@Aircraft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1World@Aircraft@@QEAA@XZ PROC				; Aircraft::World::~World, COMDAT

; 14   : 		~World() {};

  00000	c2 00 00	 ret	 0
??1World@Aircraft@@QEAA@XZ ENDP				; Aircraft::World::~World
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
;	COMDAT ?setWind@World@Aircraft@@QEAAXAEBUVec3@@@Z
_TEXT	SEGMENT
this$dead$ = 8
wind_$ = 16
?setWind@World@Aircraft@@QEAAXAEBUVec3@@@Z PROC		; Aircraft::World::setWind, COMDAT

; 17   : 		void setWind(const Vec3& wind_) { wind = wind_; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?world@@3PEAVWorld@Aircraft@@EA
  00007	0f 10 02	 movups	 xmm0, XMMWORD PTR [rdx]
  0000a	0f 11 00	 movups	 XMMWORD PTR [rax], xmm0
  0000d	f2 0f 10 4a 10	 movsd	 xmm1, QWORD PTR [rdx+16]
  00012	f2 0f 11 48 10	 movsd	 QWORD PTR [rax+16], xmm1
  00017	c3		 ret	 0
?setWind@World@Aircraft@@QEAAXAEBUVec3@@@Z ENDP		; Aircraft::World::setWind
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
;	COMDAT ?setAtmTemp@World@Aircraft@@QEAAXN@Z
_TEXT	SEGMENT
this$dead$ = 8
atmTemp_$ = 16
?setAtmTemp@World@Aircraft@@QEAAXN@Z PROC		; Aircraft::World::setAtmTemp, COMDAT

; 20   : 		void setAtmTemp(double atmTemp_) { atmTemp = atmTemp_; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?world@@3PEAVWorld@Aircraft@@EA
  00007	f2 0f 11 48 18	 movsd	 QWORD PTR [rax+24], xmm1
  0000c	c3		 ret	 0
?setAtmTemp@World@Aircraft@@QEAAXN@Z ENDP		; Aircraft::World::setAtmTemp
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
;	COMDAT ?getAtmDensity@World@Aircraft@@QEBANXZ
_TEXT	SEGMENT
this$dead$ = 8
?getAtmDensity@World@Aircraft@@QEBANXZ PROC		; Aircraft::World::getAtmDensity, COMDAT

; 22   : 		double getAtmDensity() const { return atmDensity; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?world@@3PEAVWorld@Aircraft@@EA
  00007	f2 0f 10 40 20	 movsd	 xmm0, QWORD PTR [rax+32]
  0000c	c3		 ret	 0
?getAtmDensity@World@Aircraft@@QEBANXZ ENDP		; Aircraft::World::getAtmDensity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
;	COMDAT ?setAtmDensity@World@Aircraft@@QEAAXN@Z
_TEXT	SEGMENT
this$dead$ = 8
atmDensity_$ = 16
?setAtmDensity@World@Aircraft@@QEAAXN@Z PROC		; Aircraft::World::setAtmDensity, COMDAT

; 23   : 		void setAtmDensity(double atmDensity_) { atmDensity = atmDensity_; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?world@@3PEAVWorld@Aircraft@@EA
  00007	f2 0f 11 48 20	 movsd	 QWORD PTR [rax+32], xmm1
  0000c	c3		 ret	 0
?setAtmDensity@World@Aircraft@@QEAAXN@Z ENDP		; Aircraft::World::setAtmDensity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
;	COMDAT ?setAtmPre@World@Aircraft@@QEAAXN@Z
_TEXT	SEGMENT
this$dead$ = 8
atmPre_$ = 16
?setAtmPre@World@Aircraft@@QEAAXN@Z PROC		; Aircraft::World::setAtmPre, COMDAT

; 26   : 		void setAtmPre(double atmPre_) { atmPre = atmPre_; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?world@@3PEAVWorld@Aircraft@@EA
  00007	f2 0f 11 48 28	 movsd	 QWORD PTR [rax+40], xmm1
  0000c	c3		 ret	 0
?setAtmPre@World@Aircraft@@QEAAXN@Z ENDP		; Aircraft::World::setAtmPre
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
;	COMDAT ?setAltitude@World@Aircraft@@QEAAXN@Z
_TEXT	SEGMENT
this$dead$ = 8
altitude_$ = 16
?setAltitude@World@Aircraft@@QEAAXN@Z PROC		; Aircraft::World::setAltitude, COMDAT

; 32   : 		void setAltitude(double altitude_) { altitude = altitude_; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?world@@3PEAVWorld@Aircraft@@EA
  00007	f2 0f 11 48 38	 movsd	 QWORD PTR [rax+56], xmm1
  0000c	c3		 ret	 0
?setAltitude@World@Aircraft@@QEAAXN@Z ENDP		; Aircraft::World::setAltitude
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
;	COMDAT ?getPos@World@Aircraft@@QEBA?AUVec3@@XZ
_TEXT	SEGMENT
this$dead$ = 8
__$ReturnUdt$ = 16
?getPos@World@Aircraft@@QEBA?AUVec3@@XZ PROC		; Aircraft::World::getPos, COMDAT

; 34   : 		Vec3 getPos() const { return pos; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?world@@3PEAVWorld@Aircraft@@EA
  00007	0f 10 40 40	 movups	 xmm0, XMMWORD PTR [rax+64]
  0000b	f2 0f 10 48 50	 movsd	 xmm1, QWORD PTR [rax+80]
  00010	48 8b c2	 mov	 rax, rdx
  00013	0f 11 02	 movups	 XMMWORD PTR [rdx], xmm0
  00016	f2 0f 11 4a 10	 movsd	 QWORD PTR [rdx+16], xmm1
  0001b	c3		 ret	 0
?getPos@World@Aircraft@@QEBA?AUVec3@@XZ ENDP		; Aircraft::World::getPos
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
;	COMDAT ?setPos@World@Aircraft@@QEAAXAEBUVec3@@@Z
_TEXT	SEGMENT
this$dead$ = 8
pos_$ = 16
?setPos@World@Aircraft@@QEAAXAEBUVec3@@@Z PROC		; Aircraft::World::setPos, COMDAT

; 35   : 		void setPos(const Vec3& pos_) { pos = pos_; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?world@@3PEAVWorld@Aircraft@@EA
  00007	0f 10 02	 movups	 xmm0, XMMWORD PTR [rdx]
  0000a	0f 11 40 40	 movups	 XMMWORD PTR [rax+64], xmm0
  0000e	f2 0f 10 4a 10	 movsd	 xmm1, QWORD PTR [rdx+16]
  00013	f2 0f 11 48 50	 movsd	 QWORD PTR [rax+80], xmm1
  00018	c3		 ret	 0
?setPos@World@Aircraft@@QEAAXAEBUVec3@@@Z ENDP		; Aircraft::World::setPos
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
;	COMDAT ?setVelocity@World@Aircraft@@QEAAXAEBUVec3@@@Z
_TEXT	SEGMENT
this$dead$ = 8
velocity_$ = 16
?setVelocity@World@Aircraft@@QEAAXAEBUVec3@@@Z PROC	; Aircraft::World::setVelocity, COMDAT

; 38   : 		void setVelocity(const Vec3& velocity_) { velocity = velocity_; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?world@@3PEAVWorld@Aircraft@@EA
  00007	0f 10 02	 movups	 xmm0, XMMWORD PTR [rdx]
  0000a	0f 11 40 58	 movups	 XMMWORD PTR [rax+88], xmm0
  0000e	f2 0f 10 4a 10	 movsd	 xmm1, QWORD PTR [rdx+16]
  00013	f2 0f 11 48 68	 movsd	 QWORD PTR [rax+104], xmm1
  00018	c3		 ret	 0
?setVelocity@World@Aircraft@@QEAAXAEBUVec3@@@Z ENDP	; Aircraft::World::setVelocity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
;	COMDAT ?setDirection@World@Aircraft@@QEAAXAEBUVec3@@@Z
_TEXT	SEGMENT
this$dead$ = 8
direction_$ = 16
?setDirection@World@Aircraft@@QEAAXAEBUVec3@@@Z PROC	; Aircraft::World::setDirection, COMDAT

; 41   : 		void setDirection(const Vec3& direction_) { direction = direction_; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?world@@3PEAVWorld@Aircraft@@EA
  00007	0f 10 02	 movups	 xmm0, XMMWORD PTR [rdx]
  0000a	0f 11 40 70	 movups	 XMMWORD PTR [rax+112], xmm0
  0000e	f2 0f 10 4a 10	 movsd	 xmm1, QWORD PTR [rdx+16]
  00013	f2 0f 11 88 80
	00 00 00	 movsd	 QWORD PTR [rax+128], xmm1
  0001b	c3		 ret	 0
?setDirection@World@Aircraft@@QEAAXAEBUVec3@@@Z ENDP	; Aircraft::World::setDirection
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
;	COMDAT ?setGlobalDown@World@Aircraft@@QEAAXAEBUVec3@@@Z
_TEXT	SEGMENT
this$dead$ = 8
globalDown_$ = 16
?setGlobalDown@World@Aircraft@@QEAAXAEBUVec3@@@Z PROC	; Aircraft::World::setGlobalDown, COMDAT

; 44   : 		void setGlobalDown(const Vec3& globalDown_) { globalDown = globalDown_; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?world@@3PEAVWorld@Aircraft@@EA
  00007	0f 10 02	 movups	 xmm0, XMMWORD PTR [rdx]
  0000a	0f 11 80 88 00
	00 00		 movups	 XMMWORD PTR [rax+136], xmm0
  00011	f2 0f 10 4a 10	 movsd	 xmm1, QWORD PTR [rdx+16]
  00016	f2 0f 11 88 98
	00 00 00	 movsd	 QWORD PTR [rax+152], xmm1
  0001e	c3		 ret	 0
?setGlobalDown@World@Aircraft@@QEAAXAEBUVec3@@@Z ENDP	; Aircraft::World::setGlobalDown
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
;	COMDAT ?setSurfNorm@World@Aircraft@@QEAAXAEBUVec3@@@Z
_TEXT	SEGMENT
this$dead$ = 8
surfNorm_$ = 16
?setSurfNorm@World@Aircraft@@QEAAXAEBUVec3@@@Z PROC	; Aircraft::World::setSurfNorm, COMDAT

; 47   : 		void setSurfNorm(const Vec3& surfNorm_) { surfNorm = surfNorm_; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?world@@3PEAVWorld@Aircraft@@EA
  00007	0f 10 02	 movups	 xmm0, XMMWORD PTR [rdx]
  0000a	0f 11 80 a0 00
	00 00		 movups	 XMMWORD PTR [rax+160], xmm0
  00011	f2 0f 10 4a 10	 movsd	 xmm1, QWORD PTR [rdx+16]
  00016	f2 0f 11 88 b0
	00 00 00	 movsd	 QWORD PTR [rax+176], xmm1
  0001e	c3		 ret	 0
?setSurfNorm@World@Aircraft@@QEAAXAEBUVec3@@@Z ENDP	; Aircraft::World::setSurfNorm
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
;	COMDAT ?setSurfHeight@World@Aircraft@@QEAAXN@Z
_TEXT	SEGMENT
this$dead$ = 8
surfHeight_$ = 16
?setSurfHeight@World@Aircraft@@QEAAXN@Z PROC		; Aircraft::World::setSurfHeight, COMDAT

; 50   : 		void setSurfHeight(double surfHeight_) { surfHeight = surfHeight_; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?world@@3PEAVWorld@Aircraft@@EA
  00007	f2 0f 11 88 b8
	00 00 00	 movsd	 QWORD PTR [rax+184], xmm1
  0000f	c3		 ret	 0
?setSurfHeight@World@Aircraft@@QEAAXN@Z ENDP		; Aircraft::World::setSurfHeight
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h
;	COMDAT ??0Axis@@QEAA@NNNNN@Z
_TEXT	SEGMENT
this$ = 8
sensitivity$ = 16
min$ = 24
max$ = 32
resetVal$ = 40
linear$ = 48
??0Axis@@QEAA@NNNNN@Z PROC				; Axis::Axis, COMDAT

; 15   : 		resetVal(resetVal),

  00000	f2 0f 10 44 24
	28		 movsd	 xmm0, QWORD PTR resetVal$[rsp]

; 19   : 	~Axis() {}
; 20   : 	inline void update();
; 21   : 	inline void updateAxis(double axis);
; 22   : 	inline void keyIncrease();
; 23   : 	inline void keyDecrease();
; 24   : 	inline void reset();
; 25   : 	inline void slowResetx();
; 26   : 	inline void stop();
; 27   : 	inline const double getValue() const;
; 28   : 
; 29   : private:
; 30   : 	double value = 0.0;

  00006	33 c0		 xor	 eax, eax
  00008	f2 0f 11 49 10	 movsd	 QWORD PTR [rcx+16], xmm1
  0000d	f2 0f 10 4c 24
	30		 movsd	 xmm1, QWORD PTR linear$[rsp]
  00013	48 89 01	 mov	 QWORD PTR [rcx], rax

; 31   : 	int dir = 0;

  00016	89 41 08	 mov	 DWORD PTR [rcx+8], eax

; 32   : 	bool slowReset = false;

  00019	88 41 0c	 mov	 BYTE PTR [rcx+12], al
  0001c	48 8b c1	 mov	 rax, rcx
  0001f	f2 0f 11 49 30	 movsd	 QWORD PTR [rcx+48], xmm1
  00024	f2 0f 11 51 18	 movsd	 QWORD PTR [rcx+24], xmm2
  00029	f2 0f 11 59 20	 movsd	 QWORD PTR [rcx+32], xmm3
  0002e	f2 0f 11 41 28	 movsd	 QWORD PTR [rcx+40], xmm0
  00033	c3		 ret	 0
??0Axis@@QEAA@NNNNN@Z ENDP				; Axis::Axis
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h
;	COMDAT ??1Axis@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1Axis@@QEAA@XZ PROC					; Axis::~Axis, COMDAT

; 19   : 	~Axis() {}

  00000	c2 00 00	 ret	 0
??1Axis@@QEAA@XZ ENDP					; Axis::~Axis
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h
;	COMDAT ?updateAxis@Axis@@QEAAXN@Z
_TEXT	SEGMENT
this$ = 8
axis$ = 16
?updateAxis@Axis@@QEAAXN@Z PROC				; Axis::updateAxis, COMDAT

; 43   : 	value = axis;

  00000	f2 0f 11 09	 movsd	 QWORD PTR [rcx], xmm1

; 44   : 	dir = 0;

  00004	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [rcx+8], 0

; 45   : }

  0000b	c3		 ret	 0
?updateAxis@Axis@@QEAAXN@Z ENDP				; Axis::updateAxis
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h
;	COMDAT ?getValue@Axis@@QEBA?BNXZ
_TEXT	SEGMENT
this$ = 8
?getValue@Axis@@QEBA?BNXZ PROC				; Axis::getValue, COMDAT

; 86   : 	return value;

  00000	f2 0f 10 01	 movsd	 xmm0, QWORD PTR [rcx]

; 87   : }

  00004	c3		 ret	 0
?getValue@Axis@@QEBA?BNXZ ENDP				; Axis::getValue
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
;	COMDAT ??0Input@Aircraft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0Input@Aircraft@@QEAA@XZ PROC				; Aircraft::Input::Input, COMDAT
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h

; 30   : 	double value = 0.0;

  00000	45 33 c9	 xor	 r9d, r9d
  00003	49 b8 00 00 00
	00 00 00 f0 3f	 mov	 r8, 4607182418800017408	; 3ff0000000000000H
  0000d	48 b8 00 00 00
	00 00 00 f0 bf	 mov	 rax, -4616189618054758400 ; bff0000000000000H
  00017	4c 89 09	 mov	 QWORD PTR [rcx], r9
  0001a	48 ba b8 1e 85
	eb 51 b8 8e 3f	 mov	 rdx, 4579800533065604792 ; 3f8eb851eb851eb8H
  00024	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 13   : 		min(min),

  00028	48 89 41 50	 mov	 QWORD PTR [rcx+80], rax
  0002c	48 89 81 88 00
	00 00		 mov	 QWORD PTR [rcx+136], rax
  00033	48 89 81 c0 00
	00 00		 mov	 QWORD PTR [rcx+192], rax

; 12   : 	Axis(double sensitivity, double min, double max, double resetVal, double linear) : sensitivity(sensitivity),

  0003a	48 b8 7b 14 ae
	47 e1 7a 94 3f	 mov	 rax, 4581421828931458171 ; 3f947ae147ae147bH
  00044	48 89 81 f0 00
	00 00		 mov	 QWORD PTR [rcx+240], rax
  0004b	48 89 81 28 01
	00 00		 mov	 QWORD PTR [rcx+296], rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h

; 82   : 		}

  00052	48 8b c1	 mov	 rax, rcx
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h

; 31   : 	int dir = 0;

  00055	44 89 49 08	 mov	 DWORD PTR [rcx+8], r9d

; 32   : 	bool slowReset = false;

  00059	44 88 49 0c	 mov	 BYTE PTR [rcx+12], r9b
  0005d	48 89 51 10	 mov	 QWORD PTR [rcx+16], rdx
  00061	4c 89 41 20	 mov	 QWORD PTR [rcx+32], r8
  00065	4c 89 49 28	 mov	 QWORD PTR [rcx+40], r9
  00069	4c 89 41 30	 mov	 QWORD PTR [rcx+48], r8

; 30   : 	double value = 0.0;

  0006d	4c 89 49 38	 mov	 QWORD PTR [rcx+56], r9

; 31   : 	int dir = 0;

  00071	44 89 49 40	 mov	 DWORD PTR [rcx+64], r9d

; 32   : 	bool slowReset = false;

  00075	44 88 49 44	 mov	 BYTE PTR [rcx+68], r9b
  00079	48 89 51 48	 mov	 QWORD PTR [rcx+72], rdx
  0007d	4c 89 41 58	 mov	 QWORD PTR [rcx+88], r8
  00081	4c 89 49 60	 mov	 QWORD PTR [rcx+96], r9
  00085	4c 89 41 68	 mov	 QWORD PTR [rcx+104], r8

; 30   : 	double value = 0.0;

  00089	4c 89 49 70	 mov	 QWORD PTR [rcx+112], r9

; 31   : 	int dir = 0;

  0008d	44 89 49 78	 mov	 DWORD PTR [rcx+120], r9d

; 32   : 	bool slowReset = false;

  00091	44 88 49 7c	 mov	 BYTE PTR [rcx+124], r9b
  00095	48 89 91 80 00
	00 00		 mov	 QWORD PTR [rcx+128], rdx
  0009c	4c 89 81 90 00
	00 00		 mov	 QWORD PTR [rcx+144], r8
  000a3	4c 89 89 98 00
	00 00		 mov	 QWORD PTR [rcx+152], r9
  000aa	4c 89 81 a0 00
	00 00		 mov	 QWORD PTR [rcx+160], r8

; 30   : 	double value = 0.0;

  000b1	4c 89 89 a8 00
	00 00		 mov	 QWORD PTR [rcx+168], r9

; 31   : 	int dir = 0;

  000b8	44 89 89 b0 00
	00 00		 mov	 DWORD PTR [rcx+176], r9d

; 32   : 	bool slowReset = false;

  000bf	44 88 89 b4 00
	00 00		 mov	 BYTE PTR [rcx+180], r9b
  000c6	48 89 91 b8 00
	00 00		 mov	 QWORD PTR [rcx+184], rdx
  000cd	4c 89 81 c8 00
	00 00		 mov	 QWORD PTR [rcx+200], r8
  000d4	4c 89 89 d0 00
	00 00		 mov	 QWORD PTR [rcx+208], r9
  000db	4c 89 81 d8 00
	00 00		 mov	 QWORD PTR [rcx+216], r8

; 30   : 	double value = 0.0;

  000e2	4c 89 89 e0 00
	00 00		 mov	 QWORD PTR [rcx+224], r9

; 31   : 	int dir = 0;

  000e9	44 89 89 e8 00
	00 00		 mov	 DWORD PTR [rcx+232], r9d

; 32   : 	bool slowReset = false;

  000f0	44 88 89 ec 00
	00 00		 mov	 BYTE PTR [rcx+236], r9b
  000f7	4c 89 89 f8 00
	00 00		 mov	 QWORD PTR [rcx+248], r9
  000fe	4c 89 81 00 01
	00 00		 mov	 QWORD PTR [rcx+256], r8
  00105	4c 89 89 08 01
	00 00		 mov	 QWORD PTR [rcx+264], r9
  0010c	4c 89 89 10 01
	00 00		 mov	 QWORD PTR [rcx+272], r9

; 30   : 	double value = 0.0;

  00113	4c 89 89 18 01
	00 00		 mov	 QWORD PTR [rcx+280], r9

; 31   : 	int dir = 0;

  0011a	44 89 89 20 01
	00 00		 mov	 DWORD PTR [rcx+288], r9d

; 32   : 	bool slowReset = false;

  00121	44 88 89 24 01
	00 00		 mov	 BYTE PTR [rcx+292], r9b
  00128	4c 89 89 30 01
	00 00		 mov	 QWORD PTR [rcx+304], r9
  0012f	4c 89 81 38 01
	00 00		 mov	 QWORD PTR [rcx+312], r8
  00136	4c 89 89 40 01
	00 00		 mov	 QWORD PTR [rcx+320], r9
  0013d	4c 89 89 48 01
	00 00		 mov	 QWORD PTR [rcx+328], r9
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h

; 149  : 		double throttle = 0;

  00144	4c 89 89 50 01
	00 00		 mov	 QWORD PTR [rcx+336], r9

; 150  : 		double stickPitch = 0;

  0014b	4c 89 89 58 01
	00 00		 mov	 QWORD PTR [rcx+344], r9

; 151  : 		double stickRoll = 0;

  00152	4c 89 89 60 01
	00 00		 mov	 QWORD PTR [rcx+352], r9

; 152  : 		double pedalYaw = 0;

  00159	4c 89 89 68 01
	00 00		 mov	 QWORD PTR [rcx+360], r9

; 153  : 		double leftBrk = 0;

  00160	4c 89 89 70 01
	00 00		 mov	 QWORD PTR [rcx+368], r9

; 154  : 		double rightBrk = 0;

  00167	4c 89 89 78 01
	00 00		 mov	 QWORD PTR [rcx+376], r9

; 155  : 		double yawDamper = 0;

  0016e	4c 89 89 80 01
	00 00		 mov	 QWORD PTR [rcx+384], r9

; 156  : 		double pitchTrim = 0;

  00175	4c 89 89 88 01
	00 00		 mov	 QWORD PTR [rcx+392], r9

; 157  : 		double rollTrim = 0;

  0017c	4c 89 89 90 01
	00 00		 mov	 QWORD PTR [rcx+400], r9

; 158  : 		double yawTrim = 0;

  00183	4c 89 89 98 01
	00 00		 mov	 QWORD PTR [rcx+408], r9
  0018a	c3		 ret	 0
??0Input@Aircraft@@QEAA@XZ ENDP				; Aircraft::Input::Input
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
;	COMDAT ??1Input@Aircraft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1Input@Aircraft@@QEAA@XZ PROC				; Aircraft::Input::~Input, COMDAT

; 83   : 		~Input() {}

  00000	c2 00 00	 ret	 0
??1Input@Aircraft@@QEAA@XZ ENDP				; Aircraft::Input::~Input
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
;	COMDAT ?setLeftBrk@Input@Aircraft@@QEBAAEBNXZ
_TEXT	SEGMENT
this$dead$ = 8
$T8 = 8
?setLeftBrk@Input@Aircraft@@QEBAAEBNXZ PROC		; Aircraft::Input::setLeftBrk, COMDAT

; 108  : 			//Fade the brake linearly based on rudder position.
; 109  : 			return (1.0 - clamp(yawAxis.getValue(), 0.0, 1.0)) * leftBrkAxis.getValue();

  00000	48 8d 44 24 08	 lea	 rax, QWORD PTR $T8[rsp]

; 110  : 		}

  00005	c3		 ret	 0
?setLeftBrk@Input@Aircraft@@QEBAAEBNXZ ENDP		; Aircraft::Input::setLeftBrk
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
;	COMDAT ?getYawDamper@Input@Aircraft@@QEBANXZ
_TEXT	SEGMENT
this$dead$ = 8
?getYawDamper@Input@Aircraft@@QEBANXZ PROC		; Aircraft::Input::getYawDamper, COMDAT

; 117  : 		double getYawDamper() const { return yawDamper; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?input@@3PEAVInput@Aircraft@@EA
  00007	f2 0f 10 80 80
	01 00 00	 movsd	 xmm0, QWORD PTR [rax+384]
  0000f	c3		 ret	 0
?getYawDamper@Input@Aircraft@@QEBANXZ ENDP		; Aircraft::Input::getYawDamper
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
;	COMDAT ?setRightBrk@Input@Aircraft@@QEBAAEBNXZ
_TEXT	SEGMENT
this$dead$ = 8
$T8 = 8
?setRightBrk@Input@Aircraft@@QEBAAEBNXZ PROC		; Aircraft::Input::setRightBrk, COMDAT

; 126  : 			//Fade the brake linearly based on rudder position.
; 127  : 			return (1.0 - clamp(yawAxis.getValue(), -1.0, 0.0)) * rightBrkAxis.getValue();

  00000	48 8d 44 24 08	 lea	 rax, QWORD PTR $T8[rsp]

; 128  : 		}

  00005	c3		 ret	 0
?setRightBrk@Input@Aircraft@@QEBAAEBNXZ ENDP		; Aircraft::Input::setRightBrk
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
;	COMDAT ?getPitchTrim@Input@Aircraft@@QEBANXZ
_TEXT	SEGMENT
this$dead$ = 8
?getPitchTrim@Input@Aircraft@@QEBANXZ PROC		; Aircraft::Input::getPitchTrim, COMDAT

; 135  : 		double getPitchTrim() const { return pitchTrim; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?input@@3PEAVInput@Aircraft@@EA
  00007	f2 0f 10 80 88
	01 00 00	 movsd	 xmm0, QWORD PTR [rax+392]
  0000f	c3		 ret	 0
?getPitchTrim@Input@Aircraft@@QEBANXZ ENDP		; Aircraft::Input::getPitchTrim
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
;	COMDAT ?getRollTrim@Input@Aircraft@@QEBANXZ
_TEXT	SEGMENT
this$dead$ = 8
?getRollTrim@Input@Aircraft@@QEBANXZ PROC		; Aircraft::Input::getRollTrim, COMDAT

; 137  : 		double getRollTrim() const { return rollTrim; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?input@@3PEAVInput@Aircraft@@EA
  00007	f2 0f 10 80 90
	01 00 00	 movsd	 xmm0, QWORD PTR [rax+400]
  0000f	c3		 ret	 0
?getRollTrim@Input@Aircraft@@QEBANXZ ENDP		; Aircraft::Input::getRollTrim
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
;	COMDAT ?getYawTrim@Input@Aircraft@@QEBANXZ
_TEXT	SEGMENT
this$dead$ = 8
?getYawTrim@Input@Aircraft@@QEBANXZ PROC		; Aircraft::Input::getYawTrim, COMDAT

; 139  : 		double getYawTrim() const { return yawTrim; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?input@@3PEAVInput@Aircraft@@EA
  00007	f2 0f 10 80 98
	01 00 00	 movsd	 xmm0, QWORD PTR [rax+408]
  0000f	c3		 ret	 0
?getYawTrim@Input@Aircraft@@QEBANXZ ENDP		; Aircraft::Input::getYawTrim
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
;	COMDAT ?setThrottle@Input@Aircraft@@QEAAXN@Z
_TEXT	SEGMENT
this$dead$ = 8
thrt$ = 16
?setThrottle@Input@Aircraft@@QEAAXN@Z PROC		; Aircraft::Input::setThrottle, COMDAT
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h

; 43   : 	value = axis;

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?input@@3PEAVInput@Aircraft@@EA
  00007	f2 0f 11 08	 movsd	 QWORD PTR [rax], xmm1

; 44   : 	dir = 0;

  0000b	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [rax+8], 0
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h

; 164  : 	}

  00012	c3		 ret	 0
?setThrottle@Input@Aircraft@@QEAAXN@Z ENDP		; Aircraft::Input::setThrottle
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
;	COMDAT ?setStickPitch@Input@Aircraft@@QEAAXN@Z
_TEXT	SEGMENT
this$dead$ = 8
pitch$ = 16
?setStickPitch@Input@Aircraft@@QEAAXN@Z PROC		; Aircraft::Input::setStickPitch, COMDAT

; 168  : 		pitchAxis.updateAxis(pitch);

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?input@@3PEAVInput@Aircraft@@EA
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h

; 43   : 	value = axis;

  00007	f2 0f 11 48 38	 movsd	 QWORD PTR [rax+56], xmm1

; 44   : 	dir = 0;

  0000c	c7 40 40 00 00
	00 00		 mov	 DWORD PTR [rax+64], 0
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h

; 169  : 	}

  00013	c3		 ret	 0
?setStickPitch@Input@Aircraft@@QEAAXN@Z ENDP		; Aircraft::Input::setStickPitch
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
;	COMDAT ?setStickRoll@Input@Aircraft@@QEAAXN@Z
_TEXT	SEGMENT
this$dead$ = 8
roll$ = 16
?setStickRoll@Input@Aircraft@@QEAAXN@Z PROC		; Aircraft::Input::setStickRoll, COMDAT

; 173  : 		rollAxis.updateAxis(roll);

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?input@@3PEAVInput@Aircraft@@EA
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h

; 43   : 	value = axis;

  00007	f2 0f 11 48 70	 movsd	 QWORD PTR [rax+112], xmm1

; 44   : 	dir = 0;

  0000c	c7 40 78 00 00
	00 00		 mov	 DWORD PTR [rax+120], 0
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h

; 174  : 	}

  00013	c3		 ret	 0
?setStickRoll@Input@Aircraft@@QEAAXN@Z ENDP		; Aircraft::Input::setStickRoll
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
;	COMDAT ?setPedalYaw@Input@Aircraft@@QEAAXN@Z
_TEXT	SEGMENT
this$dead$ = 8
yaw$ = 16
?setPedalYaw@Input@Aircraft@@QEAAXN@Z PROC		; Aircraft::Input::setPedalYaw, COMDAT

; 178  : 		yawAxis.updateAxis(yaw);

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?input@@3PEAVInput@Aircraft@@EA
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h

; 43   : 	value = axis;

  00007	f2 0f 11 88 a8
	00 00 00	 movsd	 QWORD PTR [rax+168], xmm1

; 44   : 	dir = 0;

  0000f	c7 80 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+176], 0
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h

; 179  : 	}

  00019	c3		 ret	 0
?setPedalYaw@Input@Aircraft@@QEAAXN@Z ENDP		; Aircraft::Input::setPedalYaw
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
;	COMDAT ?getThrottle@Input@Aircraft@@QEAANXZ
_TEXT	SEGMENT
this$dead$ = 8
?getThrottle@Input@Aircraft@@QEAANXZ PROC		; Aircraft::Input::getThrottle, COMDAT

; 183  : 		return thrtAxis.getValue();

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?input@@3PEAVInput@Aircraft@@EA
  00007	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [rax]

; 184  : 	}

  0000b	c3		 ret	 0
?getThrottle@Input@Aircraft@@QEAANXZ ENDP		; Aircraft::Input::getThrottle
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
;	COMDAT ?getStickPitch@Input@Aircraft@@QEAANXZ
_TEXT	SEGMENT
this$dead$ = 8
?getStickPitch@Input@Aircraft@@QEAANXZ PROC		; Aircraft::Input::getStickPitch, COMDAT

; 188  : 		return pitchAxis.getValue();

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?input@@3PEAVInput@Aircraft@@EA
  00007	f2 0f 10 40 38	 movsd	 xmm0, QWORD PTR [rax+56]

; 189  : 	}

  0000c	c3		 ret	 0
?getStickPitch@Input@Aircraft@@QEAANXZ ENDP		; Aircraft::Input::getStickPitch
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
;	COMDAT ?getStickRoll@Input@Aircraft@@QEAANXZ
_TEXT	SEGMENT
this$dead$ = 8
?getStickRoll@Input@Aircraft@@QEAANXZ PROC		; Aircraft::Input::getStickRoll, COMDAT

; 193  : 		return rollAxis.getValue();

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?input@@3PEAVInput@Aircraft@@EA
  00007	f2 0f 10 40 70	 movsd	 xmm0, QWORD PTR [rax+112]

; 194  : 	}

  0000c	c3		 ret	 0
?getStickRoll@Input@Aircraft@@QEAANXZ ENDP		; Aircraft::Input::getStickRoll
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
;	COMDAT ?getPedalYaw@Input@Aircraft@@QEAANXZ
_TEXT	SEGMENT
this$dead$ = 8
?getPedalYaw@Input@Aircraft@@QEAANXZ PROC		; Aircraft::Input::getPedalYaw, COMDAT

; 198  : 		return yawAxis.getValue();

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?input@@3PEAVInput@Aircraft@@EA
  00007	f2 0f 10 80 a8
	00 00 00	 movsd	 xmm0, QWORD PTR [rax+168]

; 199  : 	}

  0000f	c3		 ret	 0
?getPedalYaw@Input@Aircraft@@QEAANXZ ENDP		; Aircraft::Input::getPedalYaw
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\fuelsys.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\engine.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\engine.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\engine.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\engine.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\engine.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ?init@@YAXXZ
_TEXT	SEGMENT
$T49 = 80
$T41 = 80
$T36 = 80
$T31 = 80
$T28 = 80
$T20 = 80
$T9 = 80
$T1 = 80
?init@@YAXXZ PROC					; init, COMDAT

; 31   : {

$LN133:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H

; 32   : 	LOG("aircraft init...\n");

  0000a	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?g_log@@3PEAU_iobuf@@EA ; g_log
  00011	48 85 c9	 test	 rcx, rcx
  00014	74 0c		 je	 SHORT $LN2@init
  00016	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BC@NKBKLCNF@aircraft?5init?4?4?4?6@
  0001d	e8 00 00 00 00	 call	 fprintf
$LN2@init:

; 33   : 
; 34   : 	srand(741);

  00022	b9 e5 02 00 00	 mov	 ecx, 741		; 000002e5H
  00027	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_srand

; 35   : 	world = new Aircraft::World;

  0002d	b9 c0 00 00 00	 mov	 ecx, 192		; 000000c0H
  00032	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 21   : 	Vec3(double v) : x(v), y(v), z(v) {}

  00037	33 ff		 xor	 edi, edi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 35   : 	world = new Aircraft::World;

  00039	48 89 44 24 50	 mov	 QWORD PTR $T1[rsp], rax

; 36   : 	state = new Aircraft::State;

  0003e	b9 00 01 00 00	 mov	 ecx, 256		; 00000100H
  00043	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?world@@3PEAVWorld@Aircraft@@EA, rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 21   : 	Vec3(double v) : x(v), y(v), z(v) {}

  0004a	48 89 38	 mov	 QWORD PTR [rax], rdi
  0004d	48 89 78 08	 mov	 QWORD PTR [rax+8], rdi
  00051	48 89 78 10	 mov	 QWORD PTR [rax+16], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h

; 54   : 		double atmTemp = 0; // Kelwins

  00055	48 89 78 18	 mov	 QWORD PTR [rax+24], rdi

; 55   : 		double atmDensity = 0;

  00059	48 89 78 20	 mov	 QWORD PTR [rax+32], rdi

; 56   : 		double atmPre = 0;

  0005d	48 89 78 28	 mov	 QWORD PTR [rax+40], rdi

; 57   : 		double soundSpeed = 0;

  00061	48 89 78 30	 mov	 QWORD PTR [rax+48], rdi

; 58   : 		double altitude = 0;

  00065	48 89 78 38	 mov	 QWORD PTR [rax+56], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 21   : 	Vec3(double v) : x(v), y(v), z(v) {}

  00069	48 89 78 40	 mov	 QWORD PTR [rax+64], rdi
  0006d	48 89 78 48	 mov	 QWORD PTR [rax+72], rdi
  00071	48 89 78 50	 mov	 QWORD PTR [rax+80], rdi
  00075	48 89 78 58	 mov	 QWORD PTR [rax+88], rdi
  00079	48 89 78 60	 mov	 QWORD PTR [rax+96], rdi
  0007d	48 89 78 68	 mov	 QWORD PTR [rax+104], rdi
  00081	48 89 78 70	 mov	 QWORD PTR [rax+112], rdi
  00085	48 89 78 78	 mov	 QWORD PTR [rax+120], rdi
  00089	48 89 b8 80 00
	00 00		 mov	 QWORD PTR [rax+128], rdi
  00090	48 89 b8 88 00
	00 00		 mov	 QWORD PTR [rax+136], rdi
  00097	48 89 b8 90 00
	00 00		 mov	 QWORD PTR [rax+144], rdi
  0009e	48 89 b8 98 00
	00 00		 mov	 QWORD PTR [rax+152], rdi
  000a5	48 89 b8 a0 00
	00 00		 mov	 QWORD PTR [rax+160], rdi
  000ac	48 89 b8 a8 00
	00 00		 mov	 QWORD PTR [rax+168], rdi
  000b3	48 89 b8 b0 00
	00 00		 mov	 QWORD PTR [rax+176], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h

; 66   : 		double surfHeight = 0;

  000ba	48 89 b8 b8 00
	00 00		 mov	 QWORD PTR [rax+184], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 36   : 	state = new Aircraft::State;

  000c1	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 37   : 	aeroModel = new Aircraft::AeroModel;

  000c6	b9 e8 00 00 00	 mov	 ecx, 232		; 000000e8H
  000cb	48 89 44 24 50	 mov	 QWORD PTR $T9[rsp], rax
  000d0	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?state@@3PEAVState@Aircraft@@EA, rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h

; 98   : 		double aoa = 0;

  000d7	48 89 38	 mov	 QWORD PTR [rax], rdi

; 99   : 		double aos = 0;

  000da	48 89 78 08	 mov	 QWORD PTR [rax+8], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 21   : 	Vec3(double v) : x(v), y(v), z(v) {}

  000de	48 89 78 10	 mov	 QWORD PTR [rax+16], rdi
  000e2	48 89 78 18	 mov	 QWORD PTR [rax+24], rdi
  000e6	48 89 78 20	 mov	 QWORD PTR [rax+32], rdi
  000ea	48 89 78 28	 mov	 QWORD PTR [rax+40], rdi
  000ee	48 89 78 30	 mov	 QWORD PTR [rax+48], rdi
  000f2	48 89 78 38	 mov	 QWORD PTR [rax+56], rdi
  000f6	48 89 78 40	 mov	 QWORD PTR [rax+64], rdi
  000fa	48 89 78 48	 mov	 QWORD PTR [rax+72], rdi
  000fe	48 89 78 50	 mov	 QWORD PTR [rax+80], rdi
  00102	48 89 78 58	 mov	 QWORD PTR [rax+88], rdi
  00106	48 89 78 60	 mov	 QWORD PTR [rax+96], rdi
  0010a	48 89 78 68	 mov	 QWORD PTR [rax+104], rdi
  0010e	48 89 78 70	 mov	 QWORD PTR [rax+112], rdi
  00112	48 89 78 78	 mov	 QWORD PTR [rax+120], rdi
  00116	48 89 b8 80 00
	00 00		 mov	 QWORD PTR [rax+128], rdi
  0011d	48 89 b8 88 00
	00 00		 mov	 QWORD PTR [rax+136], rdi
  00124	48 89 b8 90 00
	00 00		 mov	 QWORD PTR [rax+144], rdi
  0012b	48 89 b8 98 00
	00 00		 mov	 QWORD PTR [rax+152], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h

; 108  : 		double mach = 0;

  00132	48 89 b8 a0 00
	00 00		 mov	 QWORD PTR [rax+160], rdi

; 109  : 		double dyPre = 0;

  00139	48 89 b8 a8 00
	00 00		 mov	 QWORD PTR [rax+168], rdi

; 110  : 		double mass = 0;

  00140	48 89 b8 b0 00
	00 00		 mov	 QWORD PTR [rax+176], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 21   : 	Vec3(double v) : x(v), y(v), z(v) {}

  00147	48 89 b8 b8 00
	00 00		 mov	 QWORD PTR [rax+184], rdi
  0014e	48 89 b8 c0 00
	00 00		 mov	 QWORD PTR [rax+192], rdi
  00155	48 89 b8 c8 00
	00 00		 mov	 QWORD PTR [rax+200], rdi
  0015c	48 89 b8 d0 00
	00 00		 mov	 QWORD PTR [rax+208], rdi
  00163	48 89 b8 d8 00
	00 00		 mov	 QWORD PTR [rax+216], rdi
  0016a	48 89 b8 e0 00
	00 00		 mov	 QWORD PTR [rax+224], rdi
  00171	48 89 b8 e8 00
	00 00		 mov	 QWORD PTR [rax+232], rdi
  00178	48 89 b8 f0 00
	00 00		 mov	 QWORD PTR [rax+240], rdi
  0017f	48 89 b8 f8 00
	00 00		 mov	 QWORD PTR [rax+248], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 37   : 	aeroModel = new Aircraft::AeroModel;

  00186	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 40   : 		double wingArea = 29;

  0018b	48 b9 00 00 00
	00 00 00 3d 40	 mov	 rcx, 4628855992006737920 ; 403d000000000000H
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 37   : 	aeroModel = new Aircraft::AeroModel;

  00195	48 89 44 24 50	 mov	 QWORD PTR $T20[rsp], rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 40   : 		double wingArea = 29;

  0019a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 41   : 		double cyAlpha = 0;

  0019d	48 89 78 08	 mov	 QWORD PTR [rax+8], rdi

; 42   : 		double cxZero = 0;

  001a1	48 89 78 10	 mov	 QWORD PTR [rax+16], rdi

; 43   : 		double cyMax = 0;

  001a5	48 89 78 18	 mov	 QWORD PTR [rax+24], rdi

; 44   : 		double b = 0;

  001a9	48 89 78 20	 mov	 QWORD PTR [rax+32], rdi

; 45   : 		double b4 = 0;

  001ad	48 89 78 28	 mov	 QWORD PTR [rax+40], rdi

; 46   : 		double cx = 0;

  001b1	48 89 78 30	 mov	 QWORD PTR [rax+48], rdi

; 47   : 		double cy = 0;

  001b5	48 89 78 38	 mov	 QWORD PTR [rax+56], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 21   : 	Vec3(double v) : x(v), y(v), z(v) {}

  001b9	48 89 78 40	 mov	 QWORD PTR [rax+64], rdi
  001bd	48 89 78 48	 mov	 QWORD PTR [rax+72], rdi
  001c1	48 89 78 50	 mov	 QWORD PTR [rax+80], rdi
  001c5	48 b9 00 00 00
	00 00 00 14 c0	 mov	 rcx, -4606056518893174784 ; c014000000000000H
  001cf	48 89 48 58	 mov	 QWORD PTR [rax+88], rcx
  001d3	48 89 48 60	 mov	 QWORD PTR [rax+96], rcx
  001d7	48 89 48 68	 mov	 QWORD PTR [rax+104], rcx
  001db	48 b9 00 00 00
	00 00 00 14 40	 mov	 rcx, 4617315517961601024 ; 4014000000000000H
  001e5	48 89 48 70	 mov	 QWORD PTR [rax+112], rcx
  001e9	48 89 48 78	 mov	 QWORD PTR [rax+120], rcx
  001ed	48 89 88 80 00
	00 00		 mov	 QWORD PTR [rax+128], rcx
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 55   : 		double alronArea = 5;

  001f4	48 89 88 88 00
	00 00		 mov	 QWORD PTR [rax+136], rcx
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 21   : 	Vec3(double v) : x(v), y(v), z(v) {}

  001fb	48 b9 00 00 00
	00 00 00 00 c0	 mov	 rcx, -4611686018427387904 ; c000000000000000H
  00205	48 89 88 90 00
	00 00		 mov	 QWORD PTR [rax+144], rcx
  0020c	48 89 88 98 00
	00 00		 mov	 QWORD PTR [rax+152], rcx
  00213	48 89 88 a0 00
	00 00		 mov	 QWORD PTR [rax+160], rcx
  0021a	48 b9 00 00 00
	00 00 00 00 40	 mov	 rcx, 4611686018427387904 ; 4000000000000000H
  00224	48 89 88 a8 00
	00 00		 mov	 QWORD PTR [rax+168], rcx
  0022b	48 89 88 b0 00
	00 00		 mov	 QWORD PTR [rax+176], rcx
  00232	48 89 88 b8 00
	00 00		 mov	 QWORD PTR [rax+184], rcx
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 59   : 		double eleArea = 2;

  00239	48 89 88 c0 00
	00 00		 mov	 QWORD PTR [rax+192], rcx
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 21   : 	Vec3(double v) : x(v), y(v), z(v) {}

  00240	48 89 b8 c8 00
	00 00		 mov	 QWORD PTR [rax+200], rdi
  00247	48 89 b8 d0 00
	00 00		 mov	 QWORD PTR [rax+208], rdi
  0024e	48 89 b8 d8 00
	00 00		 mov	 QWORD PTR [rax+216], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 62   : 		double rudderArea = 2;

  00255	48 89 88 e0 00
	00 00		 mov	 QWORD PTR [rax+224], rcx
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 38   : 	fuelSys = new Aircraft::FuelSys;

  0025c	8d 4f 30	 lea	 ecx, QWORD PTR [rdi+48]
  0025f	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?aeroModel@@3PEAVAeroModel@Aircraft@@EA, rax
  00266	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 39   : 	engineL = new Aircraft::Engine;

  0026b	8d 4f 20	 lea	 ecx, QWORD PTR [rdi+32]
  0026e	48 89 44 24 50	 mov	 QWORD PTR $T28[rsp], rax
  00273	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?fuelSys@@3PEAVFuelSys@Aircraft@@EA, rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\fuelsys.h

; 34   : 		double internalFuel = 0;

  0027a	48 89 38	 mov	 QWORD PTR [rax], rdi

; 35   : 		double preInterFuel = 0;

  0027d	48 89 78 08	 mov	 QWORD PTR [rax+8], rdi

; 36   : 		double fuelFlow = 0;

  00281	48 89 78 10	 mov	 QWORD PTR [rax+16], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 21   : 	Vec3(double v) : x(v), y(v), z(v) {}

  00285	48 89 78 18	 mov	 QWORD PTR [rax+24], rdi
  00289	48 89 78 20	 mov	 QWORD PTR [rax+32], rdi
  0028d	48 89 78 28	 mov	 QWORD PTR [rax+40], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 39   : 	engineL = new Aircraft::Engine;

  00291	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 20   : 	Vec3(double x_, double y_, double z_) :x(x_), y(y_), z(z_) {}

  00296	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@0000000000000000c020000000000000
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 41   : 	engineR = new Aircraft::Engine;

  0029d	8d 4f 20	 lea	 ecx, QWORD PTR [rdi+32]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 20   : 	Vec3(double x_, double y_, double z_) :x(x_), y(y_), z(z_) {}

  002a0	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bff0000000000000
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\engine.h

; 28   : 		double maxThrustVal = 157000;

  002a8	48 bb 00 00 00
	00 40 2a 03 41	 mov	 rbx, 4684634491761721344 ; 41032a4000000000H
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 39   : 	engineL = new Aircraft::Engine;

  002b2	48 89 44 24 50	 mov	 QWORD PTR $T31[rsp], rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\engine.h

; 28   : 		double maxThrustVal = 157000;

  002b7	48 89 18	 mov	 QWORD PTR [rax], rbx

; 44   : 		pos = pos_;

  002ba	0f 11 40 08	 movups	 XMMWORD PTR [rax+8], xmm0
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 39   : 	engineL = new Aircraft::Engine;

  002be	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?engineL@@3PEAVEngine@Aircraft@@EA, rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\engine.h

; 44   : 		pos = pos_;

  002c5	f2 0f 11 48 18	 movsd	 QWORD PTR [rax+24], xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 41   : 	engineR = new Aircraft::Engine;

  002ca	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 20   : 	Vec3(double x_, double y_, double z_) :x(x_), y(y_), z(z_) {}

  002cf	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@0000000000000000c020000000000000
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 43   : 	input = new Aircraft::Input;

  002d6	b9 a0 01 00 00	 mov	 ecx, 416		; 000001a0H
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 20   : 	Vec3(double x_, double y_, double z_) :x(x_), y(y_), z(z_) {}

  002db	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 41   : 	engineR = new Aircraft::Engine;

  002e3	48 89 44 24 50	 mov	 QWORD PTR $T36[rsp], rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\engine.h

; 28   : 		double maxThrustVal = 157000;

  002e8	48 89 18	 mov	 QWORD PTR [rax], rbx

; 44   : 		pos = pos_;

  002eb	0f 11 40 08	 movups	 XMMWORD PTR [rax+8], xmm0
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 41   : 	engineR = new Aircraft::Engine;

  002ef	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?engineR@@3PEAVEngine@Aircraft@@EA, rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\engine.h

; 44   : 		pos = pos_;

  002f6	f2 0f 11 48 18	 movsd	 QWORD PTR [rax+24], xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 43   : 	input = new Aircraft::Input;

  002fb	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h

; 14   : 		max(max),

  00300	48 bb 00 00 00
	00 00 00 f0 3f	 mov	 rbx, 4607182418800017408 ; 3ff0000000000000H
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 43   : 	input = new Aircraft::Input;

  0030a	48 89 44 24 50	 mov	 QWORD PTR $T41[rsp], rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h

; 12   : 	Axis(double sensitivity, double min, double max, double resetVal, double linear) : sensitivity(sensitivity),

  0030f	48 ba b8 1e 85
	eb 51 b8 8e 3f	 mov	 rdx, 4579800533065604792 ; 3f8eb851eb851eb8H

; 13   : 		min(min),

  00319	48 b9 00 00 00
	00 00 00 f0 bf	 mov	 rcx, -4616189618054758400 ; bff0000000000000H

; 30   : 	double value = 0.0;

  00323	48 89 38	 mov	 QWORD PTR [rax], rdi

; 31   : 	int dir = 0;

  00326	89 78 08	 mov	 DWORD PTR [rax+8], edi

; 32   : 	bool slowReset = false;

  00329	40 88 78 0c	 mov	 BYTE PTR [rax+12], dil
  0032d	48 89 50 10	 mov	 QWORD PTR [rax+16], rdx
  00331	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx
  00335	48 89 58 20	 mov	 QWORD PTR [rax+32], rbx
  00339	48 89 78 28	 mov	 QWORD PTR [rax+40], rdi
  0033d	48 89 58 30	 mov	 QWORD PTR [rax+48], rbx

; 30   : 	double value = 0.0;

  00341	48 89 78 38	 mov	 QWORD PTR [rax+56], rdi

; 31   : 	int dir = 0;

  00345	89 78 40	 mov	 DWORD PTR [rax+64], edi

; 32   : 	bool slowReset = false;

  00348	40 88 78 44	 mov	 BYTE PTR [rax+68], dil
  0034c	48 89 50 48	 mov	 QWORD PTR [rax+72], rdx
  00350	48 89 48 50	 mov	 QWORD PTR [rax+80], rcx
  00354	48 89 58 58	 mov	 QWORD PTR [rax+88], rbx
  00358	48 89 78 60	 mov	 QWORD PTR [rax+96], rdi
  0035c	48 89 58 68	 mov	 QWORD PTR [rax+104], rbx

; 30   : 	double value = 0.0;

  00360	48 89 78 70	 mov	 QWORD PTR [rax+112], rdi

; 31   : 	int dir = 0;

  00364	89 78 78	 mov	 DWORD PTR [rax+120], edi

; 32   : 	bool slowReset = false;

  00367	40 88 78 7c	 mov	 BYTE PTR [rax+124], dil
  0036b	48 89 90 80 00
	00 00		 mov	 QWORD PTR [rax+128], rdx
  00372	48 89 88 88 00
	00 00		 mov	 QWORD PTR [rax+136], rcx
  00379	48 89 98 90 00
	00 00		 mov	 QWORD PTR [rax+144], rbx

; 15   : 		resetVal(resetVal),
; 16   : 		linear(linear)

  00380	48 89 b8 98 00
	00 00		 mov	 QWORD PTR [rax+152], rdi
  00387	48 89 98 a0 00
	00 00		 mov	 QWORD PTR [rax+160], rbx

; 13   : 		min(min),

  0038e	48 89 88 c0 00
	00 00		 mov	 QWORD PTR [rax+192], rcx

; 12   : 	Axis(double sensitivity, double min, double max, double resetVal, double linear) : sensitivity(sensitivity),

  00395	48 b9 7b 14 ae
	47 e1 7a 94 3f	 mov	 rcx, 4581421828931458171 ; 3f947ae147ae147bH

; 30   : 	double value = 0.0;

  0039f	48 89 b8 a8 00
	00 00		 mov	 QWORD PTR [rax+168], rdi

; 31   : 	int dir = 0;

  003a6	89 b8 b0 00 00
	00		 mov	 DWORD PTR [rax+176], edi

; 32   : 	bool slowReset = false;

  003ac	40 88 b8 b4 00
	00 00		 mov	 BYTE PTR [rax+180], dil
  003b3	48 89 90 b8 00
	00 00		 mov	 QWORD PTR [rax+184], rdx
  003ba	48 89 98 c8 00
	00 00		 mov	 QWORD PTR [rax+200], rbx
  003c1	48 89 b8 d0 00
	00 00		 mov	 QWORD PTR [rax+208], rdi
  003c8	48 89 98 d8 00
	00 00		 mov	 QWORD PTR [rax+216], rbx

; 12   : 	Axis(double sensitivity, double min, double max, double resetVal, double linear) : sensitivity(sensitivity),

  003cf	48 89 88 f0 00
	00 00		 mov	 QWORD PTR [rax+240], rcx

; 30   : 	double value = 0.0;

  003d6	48 89 b8 e0 00
	00 00		 mov	 QWORD PTR [rax+224], rdi

; 31   : 	int dir = 0;

  003dd	89 b8 e8 00 00
	00		 mov	 DWORD PTR [rax+232], edi

; 32   : 	bool slowReset = false;

  003e3	40 88 b8 ec 00
	00 00		 mov	 BYTE PTR [rax+236], dil
  003ea	48 89 b8 f8 00
	00 00		 mov	 QWORD PTR [rax+248], rdi
  003f1	48 89 98 00 01
	00 00		 mov	 QWORD PTR [rax+256], rbx
  003f8	48 89 b8 08 01
	00 00		 mov	 QWORD PTR [rax+264], rdi
  003ff	48 89 b8 10 01
	00 00		 mov	 QWORD PTR [rax+272], rdi

; 12   : 	Axis(double sensitivity, double min, double max, double resetVal, double linear) : sensitivity(sensitivity),

  00406	48 89 88 28 01
	00 00		 mov	 QWORD PTR [rax+296], rcx
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 44   : 	airFrame = new Aircraft::AirFrame;

  0040d	b9 c8 01 00 00	 mov	 ecx, 456		; 000001c8H
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h

; 30   : 	double value = 0.0;

  00412	48 89 b8 18 01
	00 00		 mov	 QWORD PTR [rax+280], rdi

; 31   : 	int dir = 0;

  00419	89 b8 20 01 00
	00		 mov	 DWORD PTR [rax+288], edi

; 32   : 	bool slowReset = false;

  0041f	40 88 b8 24 01
	00 00		 mov	 BYTE PTR [rax+292], dil
  00426	48 89 b8 30 01
	00 00		 mov	 QWORD PTR [rax+304], rdi
  0042d	48 89 98 38 01
	00 00		 mov	 QWORD PTR [rax+312], rbx
  00434	48 89 b8 40 01
	00 00		 mov	 QWORD PTR [rax+320], rdi
  0043b	48 89 b8 48 01
	00 00		 mov	 QWORD PTR [rax+328], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h

; 149  : 		double throttle = 0;

  00442	48 89 b8 50 01
	00 00		 mov	 QWORD PTR [rax+336], rdi

; 150  : 		double stickPitch = 0;

  00449	48 89 b8 58 01
	00 00		 mov	 QWORD PTR [rax+344], rdi

; 151  : 		double stickRoll = 0;

  00450	48 89 b8 60 01
	00 00		 mov	 QWORD PTR [rax+352], rdi

; 152  : 		double pedalYaw = 0;

  00457	48 89 b8 68 01
	00 00		 mov	 QWORD PTR [rax+360], rdi

; 153  : 		double leftBrk = 0;

  0045e	48 89 b8 70 01
	00 00		 mov	 QWORD PTR [rax+368], rdi

; 154  : 		double rightBrk = 0;

  00465	48 89 b8 78 01
	00 00		 mov	 QWORD PTR [rax+376], rdi

; 155  : 		double yawDamper = 0;

  0046c	48 89 b8 80 01
	00 00		 mov	 QWORD PTR [rax+384], rdi

; 156  : 		double pitchTrim = 0;

  00473	48 89 b8 88 01
	00 00		 mov	 QWORD PTR [rax+392], rdi

; 157  : 		double rollTrim = 0;

  0047a	48 89 b8 90 01
	00 00		 mov	 QWORD PTR [rax+400], rdi

; 158  : 		double yawTrim = 0;

  00481	48 89 b8 98 01
	00 00		 mov	 QWORD PTR [rax+408], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 43   : 	input = new Aircraft::Input;

  00488	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?input@@3PEAVInput@Aircraft@@EA, rax

; 44   : 	airFrame = new Aircraft::AirFrame;

  0048f	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h

; 29   : 		double speed = 10;

  00494	48 b9 00 00 00
	00 00 00 24 40	 mov	 rcx, 4621819117588971520 ; 4024000000000000H
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 44   : 	airFrame = new Aircraft::AirFrame;

  0049e	48 89 44 24 50	 mov	 QWORD PTR $T49[rsp], rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 181  : 		double stabilizer = 0.0;

  004a3	48 89 38	 mov	 QWORD PTR [rax], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h

; 28   : 		double factor = 1;

  004a6	48 89 58 08	 mov	 QWORD PTR [rax+8], rbx

; 29   : 		double speed = 10;

  004aa	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 30   : 		double pos = 0;

  004ae	48 89 78 18	 mov	 QWORD PTR [rax+24], rdi

; 31   : 		double targetPos = 0;

  004b2	48 89 78 20	 mov	 QWORD PTR [rax+32], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 183  : 		double leftAlrnPos = 0.0;

  004b6	48 89 78 28	 mov	 QWORD PTR [rax+40], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h

; 28   : 		double factor = 1;

  004ba	48 89 58 30	 mov	 QWORD PTR [rax+48], rbx

; 29   : 		double speed = 10;

  004be	48 89 48 38	 mov	 QWORD PTR [rax+56], rcx

; 30   : 		double pos = 0;

  004c2	48 89 78 40	 mov	 QWORD PTR [rax+64], rdi

; 31   : 		double targetPos = 0;

  004c6	48 89 78 48	 mov	 QWORD PTR [rax+72], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 186  : 		double rightAlrnPos = 0.0;

  004ca	48 89 78 50	 mov	 QWORD PTR [rax+80], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h

; 28   : 		double factor = 1;

  004ce	48 89 58 58	 mov	 QWORD PTR [rax+88], rbx

; 29   : 		double speed = 10;

  004d2	48 89 48 60	 mov	 QWORD PTR [rax+96], rcx

; 30   : 		double pos = 0;

  004d6	48 89 78 68	 mov	 QWORD PTR [rax+104], rdi

; 31   : 		double targetPos = 0;

  004da	48 89 78 70	 mov	 QWORD PTR [rax+112], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 189  : 		double leftElePos = 0.0;

  004de	48 89 78 78	 mov	 QWORD PTR [rax+120], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h

; 28   : 		double factor = 1;

  004e2	48 89 98 80 00
	00 00		 mov	 QWORD PTR [rax+128], rbx

; 29   : 		double speed = 10;

  004e9	48 89 88 88 00
	00 00		 mov	 QWORD PTR [rax+136], rcx

; 30   : 		double pos = 0;

  004f0	48 89 b8 90 00
	00 00		 mov	 QWORD PTR [rax+144], rdi

; 31   : 		double targetPos = 0;

  004f7	48 89 b8 98 00
	00 00		 mov	 QWORD PTR [rax+152], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 192  : 		double rightElePos = 0.0;

  004fe	48 89 b8 a0 00
	00 00		 mov	 QWORD PTR [rax+160], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\actuator.h

; 28   : 		double factor = 1;

  00505	48 89 98 a8 00
	00 00		 mov	 QWORD PTR [rax+168], rbx

; 29   : 		double speed = 10;

  0050c	48 89 88 b0 00
	00 00		 mov	 QWORD PTR [rax+176], rcx

; 30   : 		double pos = 0;

  00513	48 89 b8 b8 00
	00 00		 mov	 QWORD PTR [rax+184], rdi

; 31   : 		double targetPos = 0;

  0051a	48 89 b8 c0 00
	00 00		 mov	 QWORD PTR [rax+192], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 195  : 		double rudderPos = 0.0;

  00521	48 89 b8 c8 00
	00 00		 mov	 QWORD PTR [rax+200], rdi

; 196  : 
; 197  : 		// Speed Brake
; 198  : 		double spdBrkPos = 0.0;

  00528	48 89 b8 d0 00
	00 00		 mov	 QWORD PTR [rax+208], rdi

; 199  : 
; 200  : 		// Flaps
; 201  : 		double leftFlpPos = 0.0;

  0052f	48 89 b8 d8 00
	00 00		 mov	 QWORD PTR [rax+216], rdi

; 202  : 		double rightFlpPos = 0.0;

  00536	48 89 b8 e0 00
	00 00		 mov	 QWORD PTR [rax+224], rdi

; 203  : 
; 204  : 		// Slats
; 205  : 		double leftSltPos = 0.0;

  0053d	48 89 b8 e8 00
	00 00		 mov	 QWORD PTR [rax+232], rdi

; 206  : 		double rightSltPos = 0.0;

  00544	48 89 b8 f0 00
	00 00		 mov	 QWORD PTR [rax+240], rdi

; 207  : 
; 208  : 		// Gears
; 209  : 		double leftGrPos = 0.0;

  0054b	48 89 b8 f8 00
	00 00		 mov	 QWORD PTR [rax+248], rdi

; 210  : 		double rightGrPos = 0.0;

  00552	48 89 b8 00 01
	00 00		 mov	 QWORD PTR [rax+256], rdi

; 211  : 		double noseGrPos = 0.0;

  00559	48 89 b8 08 01
	00 00		 mov	 QWORD PTR [rax+264], rdi

; 212  : 
; 213  : 		// Wheels
; 214  : 		double leftWhlArg = 0.0;

  00560	48 89 b8 10 01
	00 00		 mov	 QWORD PTR [rax+272], rdi

; 215  : 		double leftWhlPreArg = 0.0;

  00567	48 89 b8 18 01
	00 00		 mov	 QWORD PTR [rax+280], rdi

; 216  : 		double leftWhlSpd = 0.0;

  0056e	48 89 b8 20 01
	00 00		 mov	 QWORD PTR [rax+288], rdi

; 217  : 		double leftWhlGS = 0.0;

  00575	48 89 b8 28 01
	00 00		 mov	 QWORD PTR [rax+296], rdi

; 218  : 		double leftWhlComp = 0.0;

  0057c	48 89 b8 30 01
	00 00		 mov	 QWORD PTR [rax+304], rdi

; 219  : 
; 220  : 		double rightWhlArg = 0.0;

  00583	48 89 b8 38 01
	00 00		 mov	 QWORD PTR [rax+312], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 20   : 	Vec3(double x_, double y_, double z_) :x(x_), y(y_), z(z_) {}

  0058a	48 b9 4a 9b aa
	7b 64 93 05 40	 mov	 rcx, 4613255453091732298 ; 400593647baa9b4aH
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 221  : 		double rightWhlPreArg = 0.0;

  00594	48 89 b8 40 01
	00 00		 mov	 QWORD PTR [rax+320], rdi

; 222  : 		double rightWhlSpd = 0.0;

  0059b	48 89 b8 48 01
	00 00		 mov	 QWORD PTR [rax+328], rdi

; 223  : 		double rightWhlGS = 0.0;

  005a2	48 89 b8 50 01
	00 00		 mov	 QWORD PTR [rax+336], rdi

; 224  : 		double rightWhlComp = 0.0;

  005a9	48 89 b8 58 01
	00 00		 mov	 QWORD PTR [rax+344], rdi

; 225  : 
; 226  : 		double noseWhlGS = 0.0;

  005b0	48 89 b8 60 01
	00 00		 mov	 QWORD PTR [rax+352], rdi

; 227  : 		double noseWhlComp = 0.0;

  005b7	48 89 b8 68 01
	00 00		 mov	 QWORD PTR [rax+360], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 19   : 	Vec3() : x(0.0), y(0.0), z(0.0) {}

  005be	48 89 b8 70 01
	00 00		 mov	 QWORD PTR [rax+368], rdi
  005c5	48 89 b8 78 01
	00 00		 mov	 QWORD PTR [rax+376], rdi
  005cc	48 89 b8 80 01
	00 00		 mov	 QWORD PTR [rax+384], rdi
  005d3	48 89 b8 88 01
	00 00		 mov	 QWORD PTR [rax+392], rdi
  005da	48 89 b8 90 01
	00 00		 mov	 QWORD PTR [rax+400], rdi
  005e1	48 89 b8 98 01
	00 00		 mov	 QWORD PTR [rax+408], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 229  : 		double noseWhlAng = 0.0;

  005e8	48 89 b8 a0 01
	00 00		 mov	 QWORD PTR [rax+416], rdi

; 230  : 		double noseWhlAngV = 0.0;

  005ef	48 89 b8 a8 01
	00 00		 mov	 QWORD PTR [rax+424], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 20   : 	Vec3(double x_, double y_, double z_) :x(x_), y(y_), z(z_) {}

  005f6	48 89 88 b0 01
	00 00		 mov	 QWORD PTR [rax+432], rcx
  005fd	48 b9 d5 23 0d
	6e 6b 2b 02 c0	 mov	 rcx, -4611075328066116651 ; c0022b6b6e0d23d5H
  00607	48 89 88 b8 01
	00 00		 mov	 QWORD PTR [rax+440], rcx
  0060e	48 89 b8 c0 01
	00 00		 mov	 QWORD PTR [rax+448], rdi
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 44   : 	airFrame = new Aircraft::AirFrame;

  00615	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA, rax

; 45   : 
; 46   : 	window = GetActiveWindow();

  0061c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetActiveWindow

; 47   : 	printf("Have window: %p\n", window);

  00622	48 8b d0	 mov	 rdx, rax
  00625	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?window@@3PEAUHWND__@@EA, rax
  0062c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@ENPFDANH@Have?5window?3?5?$CFp?6@
  00633	e8 00 00 00 00	 call	 printf

; 48   : 	LOG("aircraft init complete \n");

  00638	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?g_log@@3PEAU_iobuf@@EA ; g_log
  0063f	48 85 c9	 test	 rcx, rcx
  00642	74 0c		 je	 SHORT $LN3@init
  00644	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@KKAIJPL@aircraft?5init?5complete?5?6@
  0064b	e8 00 00 00 00	 call	 fprintf
$LN3@init:

; 49   : }

  00650	48 8b 5c 24 58	 mov	 rbx, QWORD PTR [rsp+88]
  00655	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00659	5f		 pop	 rdi
  0065a	c3		 ret	 0
?init@@YAXXZ ENDP					; init
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ?cleanup@@YAXXZ
_TEXT	SEGMENT
?cleanup@@YAXXZ PROC					; cleanup, COMDAT

; 52   : {

$LN45:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 53   : 	delete world;

  00004	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?world@@3PEAVWorld@Aircraft@@EA
  0000b	48 85 c9	 test	 rcx, rcx
  0000e	74 0a		 je	 SHORT $LN20@cleanup
  00010	ba c0 00 00 00	 mov	 edx, 192		; 000000c0H
  00015	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN20@cleanup:

; 54   : 	delete state;

  0001a	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?state@@3PEAVState@Aircraft@@EA
  00021	48 85 c9	 test	 rcx, rcx
  00024	74 0a		 je	 SHORT $LN23@cleanup
  00026	ba 00 01 00 00	 mov	 edx, 256		; 00000100H
  0002b	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN23@cleanup:

; 55   : 	delete aeroModel;

  00030	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?aeroModel@@3PEAVAeroModel@Aircraft@@EA
  00037	48 85 c9	 test	 rcx, rcx
  0003a	74 0a		 je	 SHORT $LN26@cleanup
  0003c	ba e8 00 00 00	 mov	 edx, 232		; 000000e8H
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN26@cleanup:

; 56   : 	delete fuelSys;

  00046	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?fuelSys@@3PEAVFuelSys@Aircraft@@EA
  0004d	48 85 c9	 test	 rcx, rcx
  00050	74 0a		 je	 SHORT $LN29@cleanup
  00052	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  00057	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN29@cleanup:

; 57   : 	delete engineL;

  0005c	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?engineL@@3PEAVEngine@Aircraft@@EA
  00063	48 85 c9	 test	 rcx, rcx
  00066	74 0a		 je	 SHORT $LN32@cleanup
  00068	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  0006d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN32@cleanup:

; 58   : 	delete engineR;

  00072	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?engineR@@3PEAVEngine@Aircraft@@EA
  00079	48 85 c9	 test	 rcx, rcx
  0007c	74 0a		 je	 SHORT $LN35@cleanup
  0007e	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00083	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN35@cleanup:

; 59   : 	delete input;

  00088	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?input@@3PEAVInput@Aircraft@@EA
  0008f	48 85 c9	 test	 rcx, rcx
  00092	74 0a		 je	 SHORT $LN38@cleanup
  00094	ba a0 01 00 00	 mov	 edx, 416		; 000001a0H
  00099	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN38@cleanup:

; 60   : 	delete airFrame;

  0009e	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  000a5	48 85 c9	 test	 rcx, rcx
  000a8	74 0a		 je	 SHORT $LN41@cleanup
  000aa	ba c8 01 00 00	 mov	 edx, 456		; 000001c8H
  000af	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN41@cleanup:

; 61   : 
; 62   : 	world = NULL;

  000b4	33 c0		 xor	 eax, eax
  000b6	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?world@@3PEAVWorld@Aircraft@@EA, rax

; 63   : 	state = NULL;

  000bd	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?state@@3PEAVState@Aircraft@@EA, rax

; 64   : 	aeroModel = NULL;

  000c4	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?aeroModel@@3PEAVAeroModel@Aircraft@@EA, rax

; 65   : 	fuelSys = NULL;

  000cb	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?fuelSys@@3PEAVFuelSys@Aircraft@@EA, rax

; 66   : 	engineL = NULL;

  000d2	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?engineL@@3PEAVEngine@Aircraft@@EA, rax

; 67   : 	engineR = NULL;

  000d9	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?engineR@@3PEAVEngine@Aircraft@@EA, rax

; 68   : 	input = NULL;

  000e0	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?input@@3PEAVInput@Aircraft@@EA, rax

; 69   : 	airFrame = NULL;

  000e7	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA, rax

; 70   : 	window = NULL;

  000ee	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?window@@3PEAUHWND__@@EA, rax

; 71   : }

  000f5	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000f9	c3		 ret	 0
?cleanup@@YAXXZ ENDP					; cleanup
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_GWorld@Aircraft@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_GWorld@Aircraft@@QEAAPEAXI@Z PROC			; Aircraft::World::`scalar deleting destructor', COMDAT
$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	ba c0 00 00 00	 mov	 edx, 192		; 000000c0H
  0000b	48 8b d9	 mov	 rbx, rcx
  0000e	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00013	48 8b c3	 mov	 rax, rbx
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5b		 pop	 rbx
  0001b	c3		 ret	 0
??_GWorld@Aircraft@@QEAAPEAXI@Z ENDP			; Aircraft::World::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_GState@Aircraft@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_GState@Aircraft@@QEAAPEAXI@Z PROC			; Aircraft::State::`scalar deleting destructor', COMDAT
$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	ba 00 01 00 00	 mov	 edx, 256		; 00000100H
  0000b	48 8b d9	 mov	 rbx, rcx
  0000e	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00013	48 8b c3	 mov	 rax, rbx
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5b		 pop	 rbx
  0001b	c3		 ret	 0
??_GState@Aircraft@@QEAAPEAXI@Z ENDP			; Aircraft::State::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_GAeroModel@Aircraft@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_GAeroModel@Aircraft@@QEAAPEAXI@Z PROC		; Aircraft::AeroModel::`scalar deleting destructor', COMDAT
$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	ba e8 00 00 00	 mov	 edx, 232		; 000000e8H
  0000b	48 8b d9	 mov	 rbx, rcx
  0000e	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00013	48 8b c3	 mov	 rax, rbx
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5b		 pop	 rbx
  0001b	c3		 ret	 0
??_GAeroModel@Aircraft@@QEAAPEAXI@Z ENDP		; Aircraft::AeroModel::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_GFuelSys@Aircraft@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_GFuelSys@Aircraft@@QEAAPEAXI@Z PROC			; Aircraft::FuelSys::`scalar deleting destructor', COMDAT
$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0000b	48 8b d9	 mov	 rbx, rcx
  0000e	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00013	48 8b c3	 mov	 rax, rbx
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5b		 pop	 rbx
  0001b	c3		 ret	 0
??_GFuelSys@Aircraft@@QEAAPEAXI@Z ENDP			; Aircraft::FuelSys::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_GEngine@Aircraft@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_GEngine@Aircraft@@QEAAPEAXI@Z PROC			; Aircraft::Engine::`scalar deleting destructor', COMDAT
$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  0000b	48 8b d9	 mov	 rbx, rcx
  0000e	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00013	48 8b c3	 mov	 rax, rbx
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5b		 pop	 rbx
  0001b	c3		 ret	 0
??_GEngine@Aircraft@@QEAAPEAXI@Z ENDP			; Aircraft::Engine::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_GInput@Aircraft@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_GInput@Aircraft@@QEAAPEAXI@Z PROC			; Aircraft::Input::`scalar deleting destructor', COMDAT
$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	ba a0 01 00 00	 mov	 edx, 416		; 000001a0H
  0000b	48 8b d9	 mov	 rbx, rcx
  0000e	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00013	48 8b c3	 mov	 rax, rbx
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5b		 pop	 rbx
  0001b	c3		 ret	 0
??_GInput@Aircraft@@QEAAPEAXI@Z ENDP			; Aircraft::Input::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_GAirFrame@Aircraft@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_GAirFrame@Aircraft@@QEAAPEAXI@Z PROC			; Aircraft::AirFrame::`scalar deleting destructor', COMDAT
$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	ba c8 01 00 00	 mov	 edx, 456		; 000001c8H
  0000b	48 8b d9	 mov	 rbx, rcx
  0000e	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00013	48 8b c3	 mov	 rax, rbx
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5b		 pop	 rbx
  0001b	c3		 ret	 0
??_GAirFrame@Aircraft@@QEAAPEAXI@Z ENDP			; Aircraft::AirFrame::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_add_local_force
_TEXT	SEGMENT
x$ = 48
y$ = 56
z$ = 64
pos_x$ = 72
pos_y$ = 80
pos_z$ = 88
ed_fm_add_local_force PROC				; COMDAT

; 74   : {

$LN16:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h

; 58   : 			return force;

  00004	4c 8b 15 00 00
	00 00		 mov	 r10, QWORD PTR ?state@@3PEAVState@Aircraft@@EA
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 80   : 	pos_y = state->getCg().y;

  0000b	48 8b 44 24 50	 mov	 rax, QWORD PTR pos_y$[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h

; 58   : 			return force;

  00010	41 0f 10 8a e8
	00 00 00	 movups	 xmm1, XMMWORD PTR [r10+232]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 75   : 	x = state->getForce().x;

  00018	f2 0f 11 09	 movsd	 QWORD PTR [rcx], xmm1

; 76   : 	y = state->getForce().y;

  0001c	f2 41 0f 10 92
	f0 00 00 00	 movsd	 xmm2, QWORD PTR [r10+240]
  00025	f2 0f 11 12	 movsd	 QWORD PTR [rdx], xmm2
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h

; 58   : 			return force;

  00029	f2 41 0f 10 8a
	f8 00 00 00	 movsd	 xmm1, QWORD PTR [r10+248]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 77   : 	z = state->getForce().z;

  00032	f2 41 0f 11 08	 movsd	 QWORD PTR [r8], xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h

; 28   : 			return cg;

  00037	41 0f 10 8a b8
	00 00 00	 movups	 xmm1, XMMWORD PTR [r10+184]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 79   : 	pos_x = state->getCg().x;

  0003f	f2 41 0f 11 09	 movsd	 QWORD PTR [r9], xmm1

; 80   : 	pos_y = state->getCg().y;

  00044	f2 41 0f 10 92
	c0 00 00 00	 movsd	 xmm2, QWORD PTR [r10+192]
  0004d	f2 0f 11 10	 movsd	 QWORD PTR [rax], xmm2

; 81   : 	pos_z = state->getCg().z;

  00051	48 8b 44 24 58	 mov	 rax, QWORD PTR pos_z$[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h

; 28   : 			return cg;

  00056	f2 41 0f 10 8a
	c8 00 00 00	 movsd	 xmm1, QWORD PTR [r10+200]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 81   : 	pos_z = state->getCg().z;

  0005f	f2 0f 11 08	 movsd	 QWORD PTR [rax], xmm1

; 82   : }

  00063	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00067	c3		 ret	 0
ed_fm_add_local_force ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_add_global_force
_TEXT	SEGMENT
x$ = 8
y$ = 16
z$ = 24
pos_x$ = 32
pos_y$ = 40
pos_z$ = 48
ed_fm_add_global_force PROC				; COMDAT

; 86   : }

  00000	c2 00 00	 ret	 0
ed_fm_add_global_force ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_add_global_moment
_TEXT	SEGMENT
x$ = 8
y$ = 16
z$ = 24
ed_fm_add_global_moment PROC				; COMDAT

; 90   : }

  00000	c2 00 00	 ret	 0
ed_fm_add_global_moment ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_add_local_moment
_TEXT	SEGMENT
x$ = 48
y$ = 56
z$ = 64
ed_fm_add_local_moment PROC				; COMDAT

; 93   : {

$LN10:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h

; 48   : 			return moment;

  00004	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?state@@3PEAVState@Aircraft@@EA
  0000b	0f 10 88 d0 00
	00 00		 movups	 xmm1, XMMWORD PTR [rax+208]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 94   : 	x = state->getMoment().x;

  00012	f2 0f 11 09	 movsd	 QWORD PTR [rcx], xmm1

; 95   : 	y = state->getMoment().y;

  00016	f2 0f 10 90 d8
	00 00 00	 movsd	 xmm2, QWORD PTR [rax+216]
  0001e	f2 0f 11 12	 movsd	 QWORD PTR [rdx], xmm2
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h

; 48   : 			return moment;

  00022	f2 0f 10 88 e0
	00 00 00	 movsd	 xmm1, QWORD PTR [rax+224]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 96   : 	z = state->getMoment().z;

  0002a	f2 41 0f 11 08	 movsd	 QWORD PTR [r8], xmm1

; 97   : }

  0002f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00033	c3		 ret	 0
ed_fm_add_local_moment ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\units.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\fuelsys.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_simulate
_TEXT	SEGMENT
rudderF$ = 104
thrustL$ = 152
thrustR$ = 200
aeroForce$ = 248
alrnLeftF$ = 296
alrnRightF$ = 344
eleLeftF$ = 392
eleRightF$ = 440
dt$ = 592
ed_fm_simulate PROC					; COMDAT

; 100  : {

$LN85:
  00000	48 8b c4	 mov	 rax, rsp
  00003	48 89 58 08	 mov	 QWORD PTR [rax+8], rbx
  00007	55		 push	 rbp
  00008	48 8d a8 b8 fe
	ff ff		 lea	 rbp, QWORD PTR [rax-328]
  0000f	48 81 ec 40 02
	00 00		 sub	 rsp, 576		; 00000240H

; 101  : 	if (!aircraftInited)

  00016	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?aircraftInited@@3_NA, 0
  0001d	0f 29 70 e8	 movaps	 XMMWORD PTR [rax-24], xmm6
  00021	0f 29 78 d8	 movaps	 XMMWORD PTR [rax-40], xmm7
  00025	44 0f 29 40 c8	 movaps	 XMMWORD PTR [rax-56], xmm8
  0002a	44 0f 29 48 b8	 movaps	 XMMWORD PTR [rax-72], xmm9
  0002f	44 0f 28 c8	 movaps	 xmm9, xmm0
  00033	44 0f 29 50 a8	 movaps	 XMMWORD PTR [rax-88], xmm10
  00038	75 0c		 jne	 SHORT $LN2@ed_fm_simu

; 102  : 	{
; 103  : 		init();

  0003a	e8 00 00 00 00	 call	 ?init@@YAXXZ		; init

; 104  : 		aircraftInited = true;

  0003f	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?aircraftInited@@3_NA, 1
$LN2@ed_fm_simu:

; 105  : 	}
; 106  : 
; 107  : 	LOG("aircraft simulate...\n");

  00046	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?g_log@@3PEAU_iobuf@@EA ; g_log
  0004d	48 85 c9	 test	 rcx, rcx
  00050	74 0c		 je	 SHORT $LN3@ed_fm_simu
  00052	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BG@CMFOKJLF@aircraft?5simulate?4?4?4?6@
  00059	e8 00 00 00 00	 call	 fprintf
$LN3@ed_fm_simu:
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  0005e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?engineL@@3PEAVEngine@Aircraft@@EA
  00065	0f 57 c0	 xorps	 xmm0, xmm0
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h

; 38   : 			return airspeed;

  00068	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR ?state@@3PEAVState@Aircraft@@EA
  0006f	0f 57 ff	 xorps	 xmm7, xmm7
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  00072	0f 11 45 98	 movups	 XMMWORD PTR thrustL$[rbp-256], xmm0
  00076	0f 10 40 08	 movups	 xmm0, XMMWORD PTR [rax+8]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h

; 38   : 			return airspeed;

  0007a	0f 10 53 70	 movups	 xmm2, XMMWORD PTR [rbx+112]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  0007e	f2 0f 10 48 18	 movsd	 xmm1, QWORD PTR [rax+24]
  00083	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?engineR@@3PEAVEngine@Aircraft@@EA
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 157  : 	return a.x * b.x + a.y * b.y + a.z * b.z;

  0008a	0f 28 e2	 movaps	 xmm4, xmm2
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h

; 38   : 			return airspeed;

  0008d	f2 0f 10 9b 80
	00 00 00	 movsd	 xmm3, QWORD PTR [rbx+128]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 157  : 	return a.x * b.x + a.y * b.y + a.z * b.z;

  00095	66 0f 15 e2	 unpckhpd xmm4, xmm2
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  00099	0f 11 45 b0	 movups	 XMMWORD PTR thrustL$[rbp-232], xmm0
  0009d	0f 57 c0	 xorps	 xmm0, xmm0
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 157  : 	return a.x * b.x + a.y * b.y + a.z * b.z;

  000a0	f2 0f 59 e4	 mulsd	 xmm4, xmm4
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  000a4	0f 11 45 c8	 movups	 XMMWORD PTR thrustR$[rbp-256], xmm0
  000a8	0f 10 40 08	 movups	 xmm0, XMMWORD PTR [rax+8]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 157  : 	return a.x * b.x + a.y * b.y + a.z * b.z;

  000ac	f2 0f 59 d2	 mulsd	 xmm2, xmm2
  000b0	f2 0f 59 db	 mulsd	 xmm3, xmm3
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  000b4	0f 11 45 e0	 movups	 XMMWORD PTR thrustR$[rbp-232], xmm0
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 157  : 	return a.x * b.x + a.y * b.y + a.z * b.z;

  000b8	f2 0f 58 e2	 addsd	 xmm4, xmm2
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  000bc	f2 0f 11 4d c0	 movsd	 QWORD PTR thrustL$[rbp-216], xmm1
  000c1	f2 0f 10 48 18	 movsd	 xmm1, QWORD PTR [rax+24]
  000c6	0f 57 c0	 xorps	 xmm0, xmm0
  000c9	f2 0f 11 7d a8	 movsd	 QWORD PTR thrustL$[rbp-240], xmm7
  000ce	f2 0f 11 7d d8	 movsd	 QWORD PTR thrustR$[rbp-240], xmm7
  000d3	f2 0f 11 4d f0	 movsd	 QWORD PTR thrustR$[rbp-216], xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 157  : 	return a.x * b.x + a.y * b.y + a.z * b.z;

  000d8	f2 0f 58 e3	 addsd	 xmm4, xmm3

; 162  : 	return sqrt(dot(a, a));

  000dc	66 0f 2e c4	 ucomisd xmm0, xmm4
  000e0	77 09		 ja	 SHORT $LN82@ed_fm_simu
  000e2	0f 57 c0	 xorps	 xmm0, xmm0
  000e5	f2 0f 51 c4	 sqrtsd	 xmm0, xmm4
  000e9	eb 08		 jmp	 SHORT $LN83@ed_fm_simu
$LN82@ed_fm_simu:
  000eb	0f 28 c4	 movaps	 xmm0, xmm4
  000ee	e8 00 00 00 00	 call	 sqrt
$LN83@ed_fm_simu:
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 116  : 	double dyPre = 0.5 * world->getAtmDensity() * asMag * asMag;

  000f3	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?world@@3PEAVWorld@Aircraft@@EA
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 85   : 		calAeroCoeffs(mach, aoa);

  000fa	f2 0f 10 13	 movsd	 xmm2, QWORD PTR [rbx]
  000fe	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?aeroModel@@3PEAVAeroModel@Aircraft@@EA
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 116  : 	double dyPre = 0.5 * world->getAtmDensity() * asMag * asMag;

  00105	f2 0f 10 70 20	 movsd	 xmm6, QWORD PTR [rax+32]
  0010a	f2 0f 59 35 00
	00 00 00	 mulsd	 xmm6, QWORD PTR __real@3fe0000000000000
  00112	f2 0f 59 f0	 mulsd	 xmm6, xmm0
  00116	f2 0f 59 f0	 mulsd	 xmm6, xmm0
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\units.h

; 8    : 	return speed / SPEED_OF_SOUND;

  0011a	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4074000000000000
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 85   : 		calAeroCoeffs(mach, aoa);

  00122	0f 28 c8	 movaps	 xmm1, xmm0
  00125	e8 00 00 00 00	 call	 ?calAeroCoeffs@AeroModel@Aircraft@@AEAAXNN@Z ; Aircraft::AeroModel::calAeroCoeffs
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 126  : 	double pitchTrim = input->getPitchTrim();

  0012a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?input@@3PEAVInput@Aircraft@@EA
  00131	0f 57 c0	 xorps	 xmm0, xmm0
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  00134	f2 0f 10 49 50	 movsd	 xmm1, QWORD PTR [rcx+80]
  00139	0f 11 45 f8	 movups	 XMMWORD PTR aeroForce$[rbp-256], xmm0
  0013d	0f 10 41 40	 movups	 xmm0, XMMWORD PTR [rcx+64]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 130  : 	LOG("aircraft stick roll: %f\n", stickRoll);

  00141	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?g_log@@3PEAU_iobuf@@EA ; g_log
  00148	f2 44 0f 10 90
	88 01 00 00	 movsd	 xmm10, QWORD PTR [rax+392]
  00151	f2 44 0f 10 80
	a8 00 00 00	 movsd	 xmm8, QWORD PTR [rax+168]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  0015a	f2 0f 11 7d 08	 movsd	 QWORD PTR aeroForce$[rbp-240], xmm7
  0015f	f2 0f 11 4d 20	 movsd	 QWORD PTR aeroForce$[rbp-216], xmm1
  00164	0f 11 45 10	 movups	 XMMWORD PTR aeroForce$[rbp-232], xmm0
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 130  : 	LOG("aircraft stick roll: %f\n", stickRoll);

  00168	48 85 c9	 test	 rcx, rcx
  0016b	74 16		 je	 SHORT $LN4@ed_fm_simu
  0016d	f2 0f 10 50 70	 movsd	 xmm2, QWORD PTR [rax+112]
  00172	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@PEIMFPFO@aircraft?5stick?5roll?3?5?$CFf?6@
  00179	66 49 0f 7e d0	 movq	 r8, xmm2
  0017e	e8 00 00 00 00	 call	 fprintf
$LN4@ed_fm_simu:

; 131  : 
; 132  : 	airFrame->simulate(dt, mach, stickPitch, pitchTrim, stickRoll, rollTrim, rudderYaw, yawDamper, yawTrim);

  00183	41 0f 28 c9	 movaps	 xmm1, xmm9
  00187	f2 44 0f 11 54
	24 20		 movsd	 QWORD PTR [rsp+32], xmm10
  0018e	e8 00 00 00 00	 call	 ?simulate@AirFrame@Aircraft@@QEAAXNNNNNNNNN@Z ; Aircraft::AirFrame::simulate
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  00193	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?aeroModel@@3PEAVAeroModel@Aircraft@@EA
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 143  : 	state->addForce(thrustL);

  0019a	48 8d 55 98	 lea	 rdx, QWORD PTR thrustL$[rbp-256]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 159  : 		return Force((0, 0, 0.05 * stickRaw * dyPre * eleArea), rudderPos);

  0019e	f2 44 0f 59 05
	00 00 00 00	 mulsd	 xmm8, QWORD PTR __real@3fa999999999999a
  001a7	0f 57 c0	 xorps	 xmm0, xmm0
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  001aa	0f 11 45 28	 movups	 XMMWORD PTR alrnLeftF$[rbp-256], xmm0
  001ae	0f 10 40 58	 movups	 xmm0, XMMWORD PTR [rax+88]
  001b2	f2 0f 10 48 68	 movsd	 xmm1, QWORD PTR [rax+104]
  001b7	0f 11 45 40	 movups	 XMMWORD PTR alrnLeftF$[rbp-232], xmm0
  001bb	0f 57 c0	 xorps	 xmm0, xmm0
  001be	f2 0f 11 4d 50	 movsd	 QWORD PTR alrnLeftF$[rbp-216], xmm1
  001c3	f2 0f 10 88 80
	00 00 00	 movsd	 xmm1, QWORD PTR [rax+128]
  001cb	0f 11 45 58	 movups	 XMMWORD PTR alrnRightF$[rbp-256], xmm0
  001cf	0f 10 40 70	 movups	 xmm0, XMMWORD PTR [rax+112]
  001d3	f2 0f 11 8d 80
	00 00 00	 movsd	 QWORD PTR alrnRightF$[rbp-216], xmm1
  001db	f2 0f 10 88 a0
	00 00 00	 movsd	 xmm1, QWORD PTR [rax+160]
  001e3	0f 11 45 70	 movups	 XMMWORD PTR alrnRightF$[rbp-232], xmm0
  001e7	0f 57 c0	 xorps	 xmm0, xmm0
  001ea	f2 0f 11 8d b0
	00 00 00	 movsd	 QWORD PTR eleLeftF$[rbp-216], xmm1
  001f2	f2 0f 10 88 b8
	00 00 00	 movsd	 xmm1, QWORD PTR [rax+184]
  001fa	0f 11 85 88 00
	00 00		 movups	 XMMWORD PTR eleLeftF$[rbp-256], xmm0
  00201	0f 10 80 90 00
	00 00		 movups	 xmm0, XMMWORD PTR [rax+144]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 159  : 		return Force((0, 0, 0.05 * stickRaw * dyPre * eleArea), rudderPos);

  00208	f2 44 0f 59 c6	 mulsd	 xmm8, xmm6
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  0020d	0f 11 85 a0 00
	00 00		 movups	 XMMWORD PTR eleLeftF$[rbp-232], xmm0
  00214	0f 57 c0	 xorps	 xmm0, xmm0
  00217	f2 0f 11 8d e0
	00 00 00	 movsd	 QWORD PTR eleRightF$[rbp-216], xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 159  : 		return Force((0, 0, 0.05 * stickRaw * dyPre * eleArea), rudderPos);

  0021f	f2 44 0f 59 80
	c0 00 00 00	 mulsd	 xmm8, QWORD PTR [rax+192]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  00228	f2 0f 10 88 d8
	00 00 00	 movsd	 xmm1, QWORD PTR [rax+216]
  00230	0f 11 85 b8 00
	00 00		 movups	 XMMWORD PTR eleRightF$[rbp-256], xmm0
  00237	0f 10 80 a8 00
	00 00		 movups	 xmm0, XMMWORD PTR [rax+168]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aeromodel.h

; 159  : 		return Force((0, 0, 0.05 * stickRaw * dyPre * eleArea), rudderPos);

  0023e	66 45 0f 14 c0	 unpcklpd xmm8, xmm8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  00243	0f 11 85 d0 00
	00 00		 movups	 XMMWORD PTR eleRightF$[rbp-232], xmm0
  0024a	0f 10 80 c8 00
	00 00		 movups	 xmm0, XMMWORD PTR [rax+200]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h

; 128  : 		force = Vec3();

  00251	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?state@@3PEAVState@Aircraft@@EA
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  00258	f2 0f 11 7d 38	 movsd	 QWORD PTR alrnLeftF$[rbp-240], xmm7
  0025d	0f 11 45 80	 movups	 XMMWORD PTR rudderF$[rbp-232], xmm0
  00261	0f 57 c0	 xorps	 xmm0, xmm0
  00264	f2 0f 11 7d 68	 movsd	 QWORD PTR alrnRightF$[rbp-240], xmm7
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h

; 128  : 		force = Vec3();

  00269	0f 11 80 e8 00
	00 00		 movups	 XMMWORD PTR [rax+232], xmm0

; 129  : 		moment = Vec3();

  00270	0f 11 80 d0 00
	00 00		 movups	 XMMWORD PTR [rax+208], xmm0
  00277	f2 0f 11 b8 f8
	00 00 00	 movsd	 QWORD PTR [rax+248], xmm7
  0027f	f2 0f 11 b8 e0
	00 00 00	 movsd	 QWORD PTR [rax+224], xmm7
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  00287	f2 0f 11 bd 98
	00 00 00	 movsd	 QWORD PTR eleLeftF$[rbp-240], xmm7
  0028f	f2 0f 11 bd c8
	00 00 00	 movsd	 QWORD PTR eleRightF$[rbp-240], xmm7
  00297	f2 44 0f 11 44
	24 78		 movsd	 QWORD PTR rudderF$[rsp+16], xmm8
  0029e	44 0f 11 44 24
	68		 movups	 XMMWORD PTR rudderF$[rsp], xmm8
  002a4	f2 0f 11 4d 90	 movsd	 QWORD PTR rudderF$[rbp-216], xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 143  : 	state->addForce(thrustL);

  002a9	e8 00 00 00 00	 call	 ?addForce@State@Aircraft@@QEAAXAEBUForce@@@Z ; Aircraft::State::addForce

; 144  : 	state->addForce(thrustR);

  002ae	48 8d 55 c8	 lea	 rdx, QWORD PTR thrustR$[rbp-256]
  002b2	e8 00 00 00 00	 call	 ?addForce@State@Aircraft@@QEAAXAEBUForce@@@Z ; Aircraft::State::addForce

; 145  : 	state->addForce(aeroForce);

  002b7	48 8d 55 f8	 lea	 rdx, QWORD PTR aeroForce$[rbp-256]
  002bb	e8 00 00 00 00	 call	 ?addForce@State@Aircraft@@QEAAXAEBUForce@@@Z ; Aircraft::State::addForce

; 146  : 	state->addForce(alrnLeftF);

  002c0	48 8d 55 28	 lea	 rdx, QWORD PTR alrnLeftF$[rbp-256]
  002c4	e8 00 00 00 00	 call	 ?addForce@State@Aircraft@@QEAAXAEBUForce@@@Z ; Aircraft::State::addForce

; 147  : 	state->addForce(alrnRightF);

  002c9	48 8d 55 58	 lea	 rdx, QWORD PTR alrnRightF$[rbp-256]
  002cd	e8 00 00 00 00	 call	 ?addForce@State@Aircraft@@QEAAXAEBUForce@@@Z ; Aircraft::State::addForce

; 148  : 	state->addForce(eleLeftF);

  002d2	48 8d 95 88 00
	00 00		 lea	 rdx, QWORD PTR eleLeftF$[rbp-256]
  002d9	e8 00 00 00 00	 call	 ?addForce@State@Aircraft@@QEAAXAEBUForce@@@Z ; Aircraft::State::addForce

; 149  : 	state->addForce(eleRightF);

  002de	48 8d 95 b8 00
	00 00		 lea	 rdx, QWORD PTR eleRightF$[rbp-256]
  002e5	e8 00 00 00 00	 call	 ?addForce@State@Aircraft@@QEAAXAEBUForce@@@Z ; Aircraft::State::addForce

; 150  : 	state->addForce(rudderF);

  002ea	48 8d 54 24 68	 lea	 rdx, QWORD PTR rudderF$[rsp]
  002ef	e8 00 00 00 00	 call	 ?addForce@State@Aircraft@@QEAAXAEBUForce@@@Z ; Aircraft::State::addForce
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\fuelsys.h

; 65   : 			fuelCons = internalFuel;

  002f4	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?fuelSys@@3PEAVFuelSys@Aircraft@@EA
  002fb	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?input@@3PEAVInput@Aircraft@@EA
  00302	f2 0f 10 11	 movsd	 xmm2, QWORD PTR [rcx]
  00306	f2 0f 10 49 10	 movsd	 xmm1, QWORD PTR [rcx+16]
  0030b	0f 28 c2	 movaps	 xmm0, xmm2
  0030e	f2 0f 59 08	 mulsd	 xmm1, QWORD PTR [rax]

; 66   : 		}
; 67   : 
; 68   : 		preInterFuel = internalFuel;

  00312	f2 0f 11 51 08	 movsd	 QWORD PTR [rcx+8], xmm2
  00317	f2 41 0f 59 c9	 mulsd	 xmm1, xmm9
  0031c	f2 0f 5d c1	 minsd	 xmm0, xmm1

; 69   : 		internalFuel = internalFuel - fuelCons;

  00320	f2 0f 5c d0	 subsd	 xmm2, xmm0
  00324	f2 0f 11 11	 movsd	 QWORD PTR [rcx], xmm2
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 153  : 	LOG("aircraft simulate complete\n");

  00328	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?g_log@@3PEAU_iobuf@@EA ; g_log
  0032f	48 85 c9	 test	 rcx, rcx
  00332	74 0c		 je	 SHORT $LN5@ed_fm_simu
  00334	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BM@JFGCJAHJ@aircraft?5simulate?5complete?6@
  0033b	e8 00 00 00 00	 call	 fprintf
$LN5@ed_fm_simu:

; 154  : }

  00340	4c 8d 9c 24 40
	02 00 00	 lea	 r11, QWORD PTR [rsp+576]
  00348	49 8b 5b 10	 mov	 rbx, QWORD PTR [r11+16]
  0034c	41 0f 28 73 f0	 movaps	 xmm6, XMMWORD PTR [r11-16]
  00351	41 0f 28 7b e0	 movaps	 xmm7, XMMWORD PTR [r11-32]
  00356	45 0f 28 43 d0	 movaps	 xmm8, XMMWORD PTR [r11-48]
  0035b	45 0f 28 4b c0	 movaps	 xmm9, XMMWORD PTR [r11-64]
  00360	45 0f 28 53 b0	 movaps	 xmm10, XMMWORD PTR [r11-80]
  00365	49 8b e3	 mov	 rsp, r11
  00368	5d		 pop	 rbp
  00369	c3		 ret	 0
ed_fm_simulate ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_set_atmosphere
_TEXT	SEGMENT
h$ = 8
t$ = 16
a$ = 24
ro$ = 32
p$ = 40
wind_vx$ = 48
wind_vy$ = 56
wind_vz$ = 64
ed_fm_set_atmosphere PROC				; COMDAT
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h

; 17   : 		void setWind(const Vec3& wind_) { wind = wind_; }

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?world@@3PEAVWorld@Aircraft@@EA
  00007	f2 0f 10 54 24
	40		 movsd	 xmm2, QWORD PTR wind_vz$[rsp]
  0000d	66 0f 14 d2	 unpcklpd xmm2, xmm2
  00011	0f 11 10	 movups	 XMMWORD PTR [rax], xmm2
  00014	f2 0f 11 50 10	 movsd	 QWORD PTR [rax+16], xmm2
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 168  : 	world->setAtmPre(p);

  00019	f2 0f 10 54 24
	28		 movsd	 xmm2, QWORD PTR p$[rsp]
  0001f	f2 0f 11 50 28	 movsd	 QWORD PTR [rax+40], xmm2
  00024	f2 0f 11 58 20	 movsd	 QWORD PTR [rax+32], xmm3

; 169  : 	world->setAltitude(h);

  00029	f2 0f 11 40 38	 movsd	 QWORD PTR [rax+56], xmm0

; 170  : 	world->setAtmTemp(t);

  0002e	f2 0f 11 48 18	 movsd	 QWORD PTR [rax+24], xmm1

; 171  : }

  00033	c3		 ret	 0
ed_fm_set_atmosphere ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_set_current_mass_state
_TEXT	SEGMENT
mass$ = 48
center_of_mass_x$ = 56
center_of_mass_y$ = 64
center_of_mass_z$ = 72
moment_of_inertia_x$ = 80
moment_of_inertia_y$ = 88
moment_of_inertia_z$ = 96
ed_fm_set_current_mass_state PROC			; COMDAT

; 182  : {

$LN8:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 183  : 	state->setMass(mass);

  00004	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?state@@3PEAVState@Aircraft@@EA
  0000b	f2 0f 11 80 b0
	00 00 00	 movsd	 QWORD PTR [rax+176], xmm0
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h

; 33   : 			cg = cg_;

  00013	0f 28 c3	 movaps	 xmm0, xmm3
  00016	66 0f 14 c3	 unpcklpd xmm0, xmm3
  0001a	0f 11 80 b8 00
	00 00		 movups	 XMMWORD PTR [rax+184], xmm0
  00021	f2 0f 11 98 c8
	00 00 00	 movsd	 QWORD PTR [rax+200], xmm3
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 185  : }

  00029	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002d	c3		 ret	 0
ed_fm_set_current_mass_state ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_set_current_state
_TEXT	SEGMENT
ax$ = 128
ay$ = 136
az$ = 144
vx$ = 152
vy$ = 160
vz$ = 168
px$ = 176
py$ = 184
pz$ = 192
omegadotx$ = 200
omegadoty$ = 208
omegadotz$ = 216
omegax$ = 224
omegay$ = 232
omegaz$ = 240
quaternion_x$ = 248
quaternion_y$ = 256
quaternion_z$ = 264
quaternion_w$ = 272
ed_fm_set_current_state PROC				; COMDAT

; 209  : {

$LN24:
  00000	48 83 ec 78	 sub	 rsp, 120		; 00000078H
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h

; 35   : 		void setPos(const Vec3& pos_) { pos = pos_; }

  00004	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?world@@3PEAVWorld@Aircraft@@EA
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 21   : 	Vec3(double v) : x(v), y(v), z(v) {}

  0000b	f2 0f 10 8c 24
	c0 00 00 00	 movsd	 xmm1, QWORD PTR pz$[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 225  : 	double xy = x * y2;

  00014	f2 0f 10 9c 24
	f8 00 00 00	 movsd	 xmm3, QWORD PTR quaternion_x$[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h

; 35   : 		void setPos(const Vec3& pos_) { pos = pos_; }

  0001d	0f 28 c1	 movaps	 xmm0, xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 228  : 	double wz = w * z2;

  00020	f2 0f 10 ac 24
	10 01 00 00	 movsd	 xmm5, QWORD PTR quaternion_w$[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h

; 35   : 		void setPos(const Vec3& pos_) { pos = pos_; }

  00029	66 0f 14 c1	 unpcklpd xmm0, xmm1
  0002d	0f 11 40 40	 movups	 XMMWORD PTR [rax+64], xmm0
  00031	0f 29 74 24 60	 movaps	 XMMWORD PTR [rsp+96], xmm6
  00036	0f 29 7c 24 50	 movaps	 XMMWORD PTR [rsp+80], xmm7
  0003b	44 0f 29 44 24
	40		 movaps	 XMMWORD PTR [rsp+64], xmm8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 231  : 	direction.x = 1.0 - (yy + zz);

  00041	f2 44 0f 10 05
	00 00 00 00	 movsd	 xmm8, QWORD PTR __real@3ff0000000000000
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h

; 35   : 		void setPos(const Vec3& pos_) { pos = pos_; }

  0004a	f2 0f 11 48 50	 movsd	 QWORD PTR [rax+80], xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 231  : 	direction.x = 1.0 - (yy + zz);

  0004f	41 0f 28 d0	 movaps	 xmm2, xmm8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 21   : 	Vec3(double v) : x(v), y(v), z(v) {}

  00053	f2 0f 10 8c 24
	a8 00 00 00	 movsd	 xmm1, QWORD PTR vz$[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h

; 38   : 		void setVelocity(const Vec3& velocity_) { velocity = velocity_; }

  0005c	0f 28 c1	 movaps	 xmm0, xmm1
  0005f	44 0f 29 4c 24
	30		 movaps	 XMMWORD PTR [rsp+48], xmm9
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 219  : 	double y2 = y + y;

  00065	f2 44 0f 10 8c
	24 00 01 00 00	 movsd	 xmm9, QWORD PTR quaternion_y$[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h

; 38   : 		void setVelocity(const Vec3& velocity_) { velocity = velocity_; }

  0006f	66 0f 14 c1	 unpcklpd xmm0, xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 219  : 	double y2 = y + y;

  00073	41 0f 28 e1	 movaps	 xmm4, xmm9
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h

; 38   : 		void setVelocity(const Vec3& velocity_) { velocity = velocity_; }

  00077	0f 11 40 58	 movups	 XMMWORD PTR [rax+88], xmm0
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 220  : 	double z2 = z + z;

  0007b	f2 0f 10 84 24
	08 01 00 00	 movsd	 xmm0, QWORD PTR quaternion_z$[rsp]
  00084	f2 41 0f 58 e1	 addsd	 xmm4, xmm9
  00089	44 0f 29 54 24
	20		 movaps	 XMMWORD PTR [rsp+32], xmm10
  0008f	44 0f 28 d0	 movaps	 xmm10, xmm0
  00093	f2 44 0f 58 d0	 addsd	 xmm10, xmm0
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h

; 38   : 		void setVelocity(const Vec3& velocity_) { velocity = velocity_; }

  00098	f2 0f 11 48 68	 movsd	 QWORD PTR [rax+104], xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 225  : 	double xy = x * y2;

  0009d	0f 28 fc	 movaps	 xmm7, xmm4
  000a0	0f 28 cc	 movaps	 xmm1, xmm4
  000a3	f2 41 0f 59 c9	 mulsd	 xmm1, xmm9
  000a8	41 0f 28 f2	 movaps	 xmm6, xmm10
  000ac	f2 0f 59 fb	 mulsd	 xmm7, xmm3
  000b0	f2 0f 59 f0	 mulsd	 xmm6, xmm0

; 228  : 	double wz = w * z2;

  000b4	41 0f 28 c2	 movaps	 xmm0, xmm10
  000b8	f2 0f 59 c5	 mulsd	 xmm0, xmm5

; 229  : 	double wy = w * y2;

  000bc	f2 0f 59 e5	 mulsd	 xmm4, xmm5

; 231  : 	direction.x = 1.0 - (yy + zz);

  000c0	f2 0f 58 ce	 addsd	 xmm1, xmm6

; 232  : 	direction.y = xy + wz;

  000c4	f2 0f 58 f8	 addsd	 xmm7, xmm0
  000c8	f2 0f 5c d1	 subsd	 xmm2, xmm1
  000cc	41 0f 28 ca	 movaps	 xmm1, xmm10

; 238  : 	double yz = y * z2;

  000d0	f2 45 0f 59 d1	 mulsd	 xmm10, xmm9

; 247  : }

  000d5	44 0f 28 4c 24
	30		 movaps	 xmm9, XMMWORD PTR [rsp+48]
  000db	f2 0f 59 cb	 mulsd	 xmm1, xmm3
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h

; 41   : 		void setDirection(const Vec3& direction_) { direction = direction_; }

  000df	0f 28 c2	 movaps	 xmm0, xmm2
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 237  : 	double x2 = x + x;

  000e2	0f 28 d3	 movaps	 xmm2, xmm3
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h

; 41   : 		void setDirection(const Vec3& direction_) { direction = direction_; }

  000e5	66 0f 14 c7	 unpcklpd xmm0, xmm7
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 237  : 	double x2 = x + x;

  000e9	f2 0f 58 d3	 addsd	 xmm2, xmm3
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h

; 41   : 		void setDirection(const Vec3& direction_) { direction = direction_; }

  000ed	0f 11 40 70	 movups	 XMMWORD PTR [rax+112], xmm0
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 233  : 	direction.z = xz - wy;

  000f1	f2 0f 5c cc	 subsd	 xmm1, xmm4

; 239  : 	double wx = w * x2;
; 240  : 
; 241  : 	double xx = x * x2;

  000f5	0f 28 c2	 movaps	 xmm0, xmm2
  000f8	f2 0f 59 d5	 mulsd	 xmm2, xmm5
  000fc	f2 0f 59 c3	 mulsd	 xmm0, xmm3
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h

; 41   : 		void setDirection(const Vec3& direction_) { direction = direction_; }

  00100	f2 0f 11 88 80
	00 00 00	 movsd	 QWORD PTR [rax+128], xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 245  : 	globalUp.z = yz - wx;

  00108	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __xmm@80000000000000008000000000000000
  00110	f2 44 0f 5c d2	 subsd	 xmm10, xmm2
  00115	0f 57 f9	 xorps	 xmm7, xmm1
  00118	f2 0f 58 c6	 addsd	 xmm0, xmm6

; 247  : }

  0011c	0f 28 74 24 60	 movaps	 xmm6, XMMWORD PTR [rsp+96]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 31   : 		result.y = -this->y;

  00121	44 0f 57 d1	 xorps	 xmm10, xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 244  : 	globalUp.y = 1.0 - (xx + zz);

  00125	f2 44 0f 5c c0	 subsd	 xmm8, xmm0
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h

; 44   : 		void setGlobalDown(const Vec3& globalDown_) { globalDown = globalDown_; }

  0012a	0f 28 c7	 movaps	 xmm0, xmm7
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 247  : }

  0012d	0f 28 7c 24 50	 movaps	 xmm7, XMMWORD PTR [rsp+80]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 30   : 		result.x = -this->x;

  00132	44 0f 57 c1	 xorps	 xmm8, xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h

; 44   : 		void setGlobalDown(const Vec3& globalDown_) { globalDown = globalDown_; }

  00136	66 41 0f 14 c0	 unpcklpd xmm0, xmm8
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 247  : }

  0013b	44 0f 28 44 24
	40		 movaps	 xmm8, XMMWORD PTR [rsp+64]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h

; 44   : 		void setGlobalDown(const Vec3& globalDown_) { globalDown = globalDown_; }

  00141	0f 11 80 88 00
	00 00		 movups	 XMMWORD PTR [rax+136], xmm0
  00148	f2 44 0f 11 90
	98 00 00 00	 movsd	 QWORD PTR [rax+152], xmm10
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 247  : }

  00151	44 0f 28 54 24
	20		 movaps	 xmm10, XMMWORD PTR [rsp+32]
  00157	48 83 c4 78	 add	 rsp, 120		; 00000078H
  0015b	c3		 ret	 0
ed_fm_set_current_state ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_set_current_state_body_axis
_TEXT	SEGMENT
ax$ = 48
ay$ = 56
az$ = 64
vx$ = 72
vy$ = 80
vz$ = 88
wind_vx$ = 96
wind_vy$ = 104
wind_vz$ = 112
omegadotx$ = 120
omegadoty$ = 128
omegadotz$ = 136
omegax$ = 144
omegay$ = 152
omegaz$ = 160
yaw$ = 168
pitch$ = 176
roll$ = 184
common_angle_of_attack$ = 192
common_angle_of_slide$ = 200
ed_fm_set_current_state_body_axis PROC			; COMDAT

; 271  : {

$LN30:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h

; 23   : 			aoa = aoa_;

  00004	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?state@@3PEAVState@Aircraft@@EA
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 271  : {

  0000b	0f 28 e2	 movaps	 xmm4, xmm2
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 21   : 	Vec3(double v) : x(v), y(v), z(v) {}

  0000e	f2 0f 10 9c 24
	b0 00 00 00	 movsd	 xmm3, QWORD PTR pitch$[rsp]
  00017	f2 0f 10 94 24
	88 00 00 00	 movsd	 xmm2, QWORD PTR omegadotz$[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h

; 23   : 			aoa = aoa_;

  00020	f2 0f 10 84 24
	c0 00 00 00	 movsd	 xmm0, QWORD PTR common_angle_of_attack$[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 273  : 	state->setAos(common_angle_of_slide);

  00029	f2 0f 10 8c 24
	c8 00 00 00	 movsd	 xmm1, QWORD PTR common_angle_of_slide$[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h

; 23   : 			aoa = aoa_;

  00032	f2 0f 11 00	 movsd	 QWORD PTR [rax], xmm0

; 83   : 		void setAngle(const Vec3& angle_) { angle = angle_; }

  00036	0f 28 c3	 movaps	 xmm0, xmm3
  00039	66 0f 14 c3	 unpcklpd xmm0, xmm3
  0003d	0f 11 40 10	 movups	 XMMWORD PTR [rax+16], xmm0
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 273  : 	state->setAos(common_angle_of_slide);

  00041	f2 0f 11 48 08	 movsd	 QWORD PTR [rax+8], xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 21   : 	Vec3(double v) : x(v), y(v), z(v) {}

  00046	f2 0f 10 8c 24
	a0 00 00 00	 movsd	 xmm1, QWORD PTR omegaz$[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h

; 89   : 		void setAngVelo(const Vec3& angVelo_) { angVelo = angVelo_; }

  0004f	0f 28 c1	 movaps	 xmm0, xmm1

; 83   : 		void setAngle(const Vec3& angle_) { angle = angle_; }

  00052	f2 0f 11 58 20	 movsd	 QWORD PTR [rax+32], xmm3

; 89   : 		void setAngVelo(const Vec3& angVelo_) { angVelo = angVelo_; }

  00057	66 0f 14 c1	 unpcklpd xmm0, xmm1
  0005b	0f 11 40 40	 movups	 XMMWORD PTR [rax+64], xmm0
  0005f	f2 0f 11 48 50	 movsd	 QWORD PTR [rax+80], xmm1

; 86   : 		void setAngAcc(const Vec3& angAcc_) { angAcc = angAcc_; }

  00064	0f 28 c2	 movaps	 xmm0, xmm2
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 21   : 	Vec3(double v) : x(v), y(v), z(v) {}

  00067	f2 0f 10 4c 24
	58		 movsd	 xmm1, QWORD PTR vz$[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h

; 86   : 		void setAngAcc(const Vec3& angAcc_) { angAcc = angAcc_; }

  0006d	66 0f 14 c2	 unpcklpd xmm0, xmm2
  00071	0f 11 40 28	 movups	 XMMWORD PTR [rax+40], xmm0

; 92   : 		void setLocalSpeed(const Vec3& localSpeed_) { localSpeed = localSpeed_; }

  00075	0f 28 c1	 movaps	 xmm0, xmm1

; 86   : 		void setAngAcc(const Vec3& angAcc_) { angAcc = angAcc_; }

  00078	f2 0f 11 50 38	 movsd	 QWORD PTR [rax+56], xmm2

; 92   : 		void setLocalSpeed(const Vec3& localSpeed_) { localSpeed = localSpeed_; }

  0007d	66 0f 14 c1	 unpcklpd xmm0, xmm1
  00081	0f 11 40 58	 movups	 XMMWORD PTR [rax+88], xmm0
  00085	f2 0f 11 48 68	 movsd	 QWORD PTR [rax+104], xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 278  : 	state->setAirspeed((vx - wind_vx, vy - wind_vy, vz - wind_vz));

  0008a	f2 0f 5c 4c 24
	70		 subsd	 xmm1, QWORD PTR wind_vz$[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\state.h

; 43   : 			airspeed = airspeed_;

  00090	0f 28 c1	 movaps	 xmm0, xmm1
  00093	66 0f 14 c1	 unpcklpd xmm0, xmm1
  00097	0f 11 40 70	 movups	 XMMWORD PTR [rax+112], xmm0

; 95   : 		void setAccel(const Vec3& accel_) { accel = accel_; }

  0009b	0f 28 c4	 movaps	 xmm0, xmm4

; 43   : 			airspeed = airspeed_;

  0009e	f2 0f 11 88 80
	00 00 00	 movsd	 QWORD PTR [rax+128], xmm1

; 95   : 		void setAccel(const Vec3& accel_) { accel = accel_; }

  000a6	66 0f 14 c4	 unpcklpd xmm0, xmm4
  000aa	0f 11 80 88 00
	00 00		 movups	 XMMWORD PTR [rax+136], xmm0
  000b1	f2 0f 11 a0 98
	00 00 00	 movsd	 QWORD PTR [rax+152], xmm4
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 280  : }

  000b9	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000bd	c3		 ret	 0
ed_fm_set_current_state_body_axis ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_set_command
_TEXT	SEGMENT
command$ = 8
value$ = 16
ed_fm_set_command PROC					; COMDAT

; 287  : 	switch (command)

  00000	81 e9 d1 07 00
	00		 sub	 ecx, 2001		; 000007d1H
  00006	74 65		 je	 SHORT $LN6@ed_fm_set_
  00008	83 e9 01	 sub	 ecx, 1
  0000b	74 45		 je	 SHORT $LN5@ed_fm_set_
  0000d	83 e9 01	 sub	 ecx, 1
  00010	74 1f		 je	 SHORT $LN7@ed_fm_set_
  00012	83 f9 01	 cmp	 ecx, 1
  00015	75 70		 jne	 SHORT $LN8@ed_fm_set_
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h

; 43   : 	value = axis;

  00017	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?input@@3PEAVInput@Aircraft@@EA
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 290  : 		input->setThrottle(value);

  0001e	0f 57 c0	 xorps	 xmm0, xmm0
  00021	f3 0f 5a c1	 cvtss2sd xmm0, xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h

; 44   : 	dir = 0;

  00025	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [rax+8], 0
  0002c	f2 0f 11 00	 movsd	 QWORD PTR [rax], xmm0
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 303  : }

  00030	c3		 ret	 0
$LN7@ed_fm_set_:
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h

; 178  : 		yawAxis.updateAxis(yaw);

  00031	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?input@@3PEAVInput@Aircraft@@EA
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 299  : 		input->setPedalYaw(value);

  00038	0f 57 c0	 xorps	 xmm0, xmm0
  0003b	f3 0f 5a c1	 cvtss2sd xmm0, xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h

; 44   : 	dir = 0;

  0003f	c7 80 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+176], 0
  00049	f2 0f 11 80 a8
	00 00 00	 movsd	 QWORD PTR [rax+168], xmm0
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 303  : }

  00051	c3		 ret	 0
$LN5@ed_fm_set_:
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h

; 173  : 		rollAxis.updateAxis(roll);

  00052	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?input@@3PEAVInput@Aircraft@@EA
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 293  : 		input->setStickRoll(value);

  00059	0f 57 c0	 xorps	 xmm0, xmm0
  0005c	f3 0f 5a c1	 cvtss2sd xmm0, xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h

; 44   : 	dir = 0;

  00060	c7 40 78 00 00
	00 00		 mov	 DWORD PTR [rax+120], 0
  00067	f2 0f 11 40 70	 movsd	 QWORD PTR [rax+112], xmm0
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 303  : }

  0006c	c3		 ret	 0
$LN6@ed_fm_set_:
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h

; 168  : 		pitchAxis.updateAxis(pitch);

  0006d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?input@@3PEAVInput@Aircraft@@EA
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 296  : 		input->setStickPitch(value);

  00074	0f 57 c0	 xorps	 xmm0, xmm0
  00077	f3 0f 5a c1	 cvtss2sd xmm0, xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\axis.h

; 44   : 	dir = 0;

  0007b	c7 40 40 00 00
	00 00		 mov	 DWORD PTR [rax+64], 0
  00082	f2 0f 11 40 38	 movsd	 QWORD PTR [rax+56], xmm0
$LN8@ed_fm_set_:
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 303  : }

  00087	c3		 ret	 0
ed_fm_set_command ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\fuelsys.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\fuelsys.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_change_mass
_TEXT	SEGMENT
delta_mass$ = 48
delta_mass_pos_x$ = 56
delta_mass_pos_y$ = 64
delta_mass_pos_z$ = 72
delta_mass_moment_of_inertia_x$ = 80
delta_mass_moment_of_inertia_y$ = 88
delta_mass_moment_of_inertia_z$ = 96
ed_fm_change_mass PROC					; COMDAT

; 331  : {

$LN10:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\fuelsys.h

; 28   : 		Vec3 getPos() const { return pos; }

  00004	4c 8b 15 00 00
	00 00		 mov	 r10, QWORD PTR ?fuelSys@@3PEAVFuelSys@Aircraft@@EA

; 74   : 		return preInterFuel - internalFuel;

  0000b	f2 41 0f 10 42
	08		 movsd	 xmm0, QWORD PTR [r10+8]

; 28   : 		Vec3 getPos() const { return pos; }

  00011	41 0f 10 4a 18	 movups	 xmm1, XMMWORD PTR [r10+24]

; 74   : 		return preInterFuel - internalFuel;

  00016	f2 41 0f 5c 02	 subsd	 xmm0, QWORD PTR [r10]

; 28   : 		Vec3 getPos() const { return pos; }

  0001b	f2 41 0f 10 52
	28		 movsd	 xmm2, QWORD PTR [r10+40]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 333  : 	delta_mass = fuelSys->getFuelQtyDelta();

  00021	f2 0f 11 01	 movsd	 QWORD PTR [rcx], xmm0
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\fuelsys.h

; 31   : 		void setPreInterFuel() { preInterFuel = internalFuel; }

  00025	49 8b 02	 mov	 rax, QWORD PTR [r10]
  00028	49 89 42 08	 mov	 QWORD PTR [r10+8], rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 340  : 	return true;

  0002c	b0 01		 mov	 al, 1
  0002e	f2 0f 11 0a	 movsd	 QWORD PTR [rdx], xmm1
  00032	66 0f 15 c9	 unpckhpd xmm1, xmm1
  00036	f2 41 0f 11 08	 movsd	 QWORD PTR [r8], xmm1
  0003b	f2 41 0f 11 11	 movsd	 QWORD PTR [r9], xmm2

; 341  : }

  00040	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00044	c3		 ret	 0
ed_fm_change_mass ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\fuelsys.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_set_internal_fuel
_TEXT	SEGMENT
fuel$ = 8
ed_fm_set_internal_fuel PROC				; COMDAT
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\fuelsys.h

; 42   : 		internalFuel = fuel;

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?fuelSys@@3PEAVFuelSys@Aircraft@@EA
  00007	f2 0f 11 00	 movsd	 QWORD PTR [rax], xmm0
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 349  : }

  0000b	c3		 ret	 0
ed_fm_set_internal_fuel ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_get_internal_fuel
_TEXT	SEGMENT
ed_fm_get_internal_fuel PROC				; COMDAT

; 355  : 	return fuelSys->getInternalFuel();

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?fuelSys@@3PEAVFuelSys@Aircraft@@EA
  00007	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [rax]

; 356  : }

  0000b	c3		 ret	 0
ed_fm_get_internal_fuel ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_set_external_fuel
_TEXT	SEGMENT
station$ = 8
fuel$ = 16
x$ = 24
y$ = 32
z$ = 40
ed_fm_set_external_fuel PROC				; COMDAT

; 366  : }

  00000	c2 00 00	 ret	 0
ed_fm_set_external_fuel ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_get_external_fuel
_TEXT	SEGMENT
ed_fm_get_external_fuel PROC				; COMDAT

; 371  : {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 372  : 	return 0;
; 373  : }

  00003	c3		 ret	 0
ed_fm_get_external_fuel ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\maths.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_set_draw_args
_TEXT	SEGMENT
drawargs$ = 8
size$ = 16
ed_fm_set_draw_args PROC				; COMDAT

; 377  : 	drawargs[28].f = input->getThrottle();

  00000	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?input@@3PEAVInput@Aircraft@@EA
  00007	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [rax]
  0000b	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0000f	f3 0f 11 81 e0
	00 00 00	 movss	 DWORD PTR [rcx+224], xmm0
  00017	f2 0f 10 08	 movsd	 xmm1, QWORD PTR [rax]
  0001b	66 0f 5a c9	 cvtpd2ps xmm1, xmm1
  0001f	f3 0f 11 89 e8
	00 00 00	 movss	 DWORD PTR [rcx+232], xmm1

; 378  : 	drawargs[29].f = input->getThrottle();
; 379  : 
; 380  : 	if (size > 616)

  00027	48 81 fa 68 02
	00 00		 cmp	 rdx, 616		; 00000268H
  0002e	76 1a		 jbe	 SHORT $LN2@ed_fm_set_

; 381  : 	{
; 382  : 		drawargs[611].f = drawargs[0].f;

  00030	8b 01		 mov	 eax, DWORD PTR [rcx]
  00032	89 81 18 13 00
	00		 mov	 DWORD PTR [rcx+4888], eax

; 383  : 		drawargs[614].f = drawargs[3].f;

  00038	8b 41 18	 mov	 eax, DWORD PTR [rcx+24]
  0003b	89 81 30 13 00
	00		 mov	 DWORD PTR [rcx+4912], eax

; 384  : 		drawargs[616].f = drawargs[5].f;

  00041	8b 41 28	 mov	 eax, DWORD PTR [rcx+40]
  00044	89 81 40 13 00
	00		 mov	 DWORD PTR [rcx+4928], eax
$LN2@ed_fm_set_:

; 385  : 	}
; 386  : 
; 387  : 	drawargs[LEFT_AILERON].f = airFrame->getLeftAlrnPos();

  0004a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  00051	f2 0f 10 40 28	 movsd	 xmm0, QWORD PTR [rax+40]
  00056	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0005a	f3 0f 11 41 60	 movss	 DWORD PTR [rcx+96], xmm0
  0005f	f2 0f 10 48 50	 movsd	 xmm1, QWORD PTR [rax+80]

; 388  : 	drawargs[RIGHT_AILERON].f = airFrame->getRightAlrnPos();

  00064	66 0f 5a c9	 cvtpd2ps xmm1, xmm1
  00068	f3 0f 11 49 58	 movss	 DWORD PTR [rcx+88], xmm1
  0006d	f2 0f 10 40 78	 movsd	 xmm0, QWORD PTR [rax+120]

; 389  : 	drawargs[LEFT_ELEVATOR].f = airFrame->getLeftElePos();

  00072	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00076	f3 0f 11 81 80
	00 00 00	 movss	 DWORD PTR [rcx+128], xmm0
  0007e	f2 0f 10 88 a0
	00 00 00	 movsd	 xmm1, QWORD PTR [rax+160]

; 390  : 	drawargs[RIGHT_ELEVATOR].f = airFrame->getRightElePos();

  00086	66 0f 5a c9	 cvtpd2ps xmm1, xmm1
  0008a	f3 0f 11 49 78	 movss	 DWORD PTR [rcx+120], xmm1
  0008f	f2 0f 10 80 c8
	00 00 00	 movsd	 xmm0, QWORD PTR [rax+200]

; 391  : 	drawargs[RUDDER].f = airFrame->getRudderPos();

  00097	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0009b	f3 0f 11 81 88
	00 00 00	 movss	 DWORD PTR [rcx+136], xmm0
  000a3	f2 0f 10 88 d8
	00 00 00	 movsd	 xmm1, QWORD PTR [rax+216]

; 392  : 	drawargs[LEFT_FLAP].f = airFrame->getLeftFlpPos();

  000ab	66 0f 5a c9	 cvtpd2ps xmm1, xmm1
  000af	f3 0f 11 49 48	 movss	 DWORD PTR [rcx+72], xmm1
  000b4	f2 0f 10 80 e0
	00 00 00	 movsd	 xmm0, QWORD PTR [rax+224]

; 393  : 	drawargs[RIGHT_FLAP].f = airFrame->getRightFlpPos();

  000bc	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  000c0	f3 0f 11 41 50	 movss	 DWORD PTR [rcx+80], xmm0
  000c5	0f 57 c0	 xorps	 xmm0, xmm0
  000c8	f2 0f 10 88 d0
	00 00 00	 movsd	 xmm1, QWORD PTR [rax+208]

; 394  : 	drawargs[AIRBRAKE].f = airFrame->getSpdBrkPos();

  000d0	66 0f 5a c9	 cvtpd2ps xmm1, xmm1
  000d4	f3 0f 11 89 a0
	0f 00 00	 movss	 DWORD PTR [rcx+4000], xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\maths.h

; 26   : 	return radians * 180.0 / PI;

  000dc	f2 0f 10 10	 movsd	 xmm2, QWORD PTR [rax]
  000e0	f2 0f 59 15 00
	00 00 00	 mulsd	 xmm2, QWORD PTR __real@4066800000000000
  000e8	f2 0f 5e 15 00
	00 00 00	 divsd	 xmm2, QWORD PTR __real@400921fb54442eea
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 79   : 			if (stab > 0.0)

  000f0	66 0f 2f d0	 comisd	 xmm2, xmm0
  000f4	76 08		 jbe	 SHORT $LN13@ed_fm_set_

; 80   : 			{
; 81   : 				return stab / 12.25;

  000f6	f2 0f 5e 15 00
	00 00 00	 divsd	 xmm2, QWORD PTR __real@4028800000000000
$LN13@ed_fm_set_:
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 395  : 	drawargs[STABILIZER_TRIM].f = airFrame->getStabAnim();

  000fe	66 0f 5a c2	 cvtpd2ps xmm0, xmm2
  00102	f3 0f 11 81 a8
	03 00 00	 movss	 DWORD PTR [rcx+936], xmm0
  0010a	f2 0f 10 88 e8
	00 00 00	 movsd	 xmm1, QWORD PTR [rax+232]

; 396  : 	drawargs[LEFT_SLAT].f = airFrame->getLeftSltPos();

  00112	66 0f 5a c9	 cvtpd2ps xmm1, xmm1
  00116	f3 0f 11 49 70	 movss	 DWORD PTR [rcx+112], xmm1
  0011b	f2 0f 10 80 f0
	00 00 00	 movsd	 xmm0, QWORD PTR [rax+240]
  00123	f3 0f 10 89 38
	03 00 00	 movss	 xmm1, DWORD PTR [rcx+824]

; 397  : 	drawargs[RIGHT_SLAT].f = airFrame->getRightSltPos();

  0012b	66 0f 5a c0	 cvtpd2ps xmm0, xmm0

; 398  : 
; 399  : 	drawargs[22].f = 1.0;

  0012f	c7 81 b0 00 00
	00 00 00 80 3f	 mov	 DWORD PTR [rcx+176], 1065353216 ; 3f800000H

; 400  : 
; 401  : 	airFrame->setLeftWhlArg(drawargs[103].f);

  00139	0f 5a c9	 cvtps2pd xmm1, xmm1
  0013c	f3 0f 11 41 68	 movss	 DWORD PTR [rcx+104], xmm0
  00141	f2 0f 11 88 10
	01 00 00	 movsd	 QWORD PTR [rax+272], xmm1
  00149	f3 0f 10 81 30
	03 00 00	 movss	 xmm0, DWORD PTR [rcx+816]

; 402  : 	airFrame->setRightWhlArg(drawargs[102].f);

  00151	0f 5a c0	 cvtps2pd xmm0, xmm0
  00154	f2 0f 11 80 38
	01 00 00	 movsd	 QWORD PTR [rax+312], xmm0

; 403  : }

  0015c	c3		 ret	 0
ed_fm_set_draw_args ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_configure
_TEXT	SEGMENT
cfg_path$ = 8
ed_fm_configure PROC					; COMDAT

; 407  : }

  00000	c2 00 00	 ret	 0
ed_fm_configure ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\engine.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_get_param
_TEXT	SEGMENT
index$ = 8
max$ = 16
max$ = 16
value$ = 24
value$ = 24
ed_fm_get_param PROC					; COMDAT

; 412  : 	double throttle = input->getThrottle();

  00000	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR ?input@@3PEAVInput@Aircraft@@EA
  00007	f2 41 0f 10 00	 movsd	 xmm0, QWORD PTR [r8]

; 413  : 	switch (index)

  0000c	81 f9 d2 07 00
	00		 cmp	 ecx, 2002		; 000007d2H
  00012	77 76		 ja	 SHORT $LN38@ed_fm_get_
  00014	0f 84 c3 00 00
	00		 je	 $LN26@ed_fm_get_
  0001a	81 f9 d7 00 00
	00		 cmp	 ecx, 215		; 000000d7H
  00020	0f 87 97 01 00
	00		 ja	 $LN2@ed_fm_get_
  00026	8b c1		 mov	 eax, ecx
  00028	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:__ImageBase
  0002f	0f b6 84 02 00
	00 00 00	 movzx	 eax, BYTE PTR $LN123@ed_fm_get_[rdx+rax]
  00037	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR $LN124@ed_fm_get_[rdx+rax*4]
  0003e	48 03 ca	 add	 rcx, rdx
  00041	ff e1		 jmp	 rcx
$LN13@ed_fm_get_:
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\engine.h

; 49   : 		return throttle * 3000;

  00043	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@40a7700000000000
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 475  : }

  0004b	c3		 ret	 0
$LN14@ed_fm_get_:

; 414  : 	{
; 415  : 	case ED_FM_ENGINE_0_RPM:
; 416  : 	case ED_FM_ENGINE_0_RELATED_RPM:
; 417  : 	case ED_FM_ENGINE_0_THRUST:
; 418  : 	case ED_FM_ENGINE_0_RELATED_THRUST:
; 419  : 		return 0; // APU
; 420  : 	case ED_FM_ENGINE_1_RPM:
; 421  : 		return engineL->getRPM(throttle);
; 422  : 	case ED_FM_ENGINE_1_RELATED_RPM:
; 423  : 		return engineL->getRPMNorm();
; 424  : 	case ED_FM_ENGINE_1_THRUST:
; 425  : 		return magnitude(engineL->getThrust(throttle).force);
; 426  : 	case ED_FM_ENGINE_1_RELATED_THRUST:
; 427  : 		return magnitude(engineL->getThrust(throttle).force);
; 428  : 	case ED_FM_ENGINE_1_COMBUSTION:
; 429  : 		return fuelSys->getFuelFlow();
; 430  : 	case ED_FM_ENGINE_2_RPM:
; 431  : 		return engineR->getRPM(throttle);
; 432  : 	case ED_FM_ENGINE_2_RELATED_RPM:
; 433  : 		return engineR->getRPMNorm();

  0004c	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@40c9640000000000

; 475  : }

  00054	c3		 ret	 0
$LN16@ed_fm_get_:
  00055	0f 57 c0	 xorps	 xmm0, xmm0
  00058	0f 57 c9	 xorps	 xmm1, xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 162  : 	return sqrt(dot(a, a));

  0005b	66 0f 2e c1	 ucomisd xmm0, xmm1
  0005f	77 05		 ja	 SHORT $LN121@ed_fm_get_
  00061	66 0f 51 c1	 sqrtpd	 xmm0, xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 475  : }

  00065	c3		 ret	 0
$LN121@ed_fm_get_:
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 162  : 	return sqrt(dot(a, a));

  00066	e9 00 00 00 00	 jmp	 sqrt
$LN17@ed_fm_get_:
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 439  : 		return fuelSys->getFuelFlow();

  0006b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?fuelSys@@3PEAVFuelSys@Aircraft@@EA
  00072	f2 0f 10 40 10	 movsd	 xmm0, QWORD PTR [rax+16]

; 475  : }

  00077	c3		 ret	 0
$LN34@ed_fm_get_:

; 462  : 	case ED_FM_ENGINE_1_TEMPERATURE:
; 463  : 		return 23.0;
; 464  : 	case ED_FM_ENGINE_1_OIL_PRESSURE:
; 465  : 		return 600.0;
; 466  : 	case ED_FM_ENGINE_2_TEMPERATURE:
; 467  : 		return 23.0;

  00078	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4037000000000000

; 475  : }

  00080	c3		 ret	 0
$LN35@ed_fm_get_:

; 468  : 	case ED_FM_ENGINE_2_OIL_PRESSURE:
; 469  : 		return 600.0;

  00081	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4082c00000000000

; 475  : }

  00089	c3		 ret	 0
$LN38@ed_fm_get_:

; 413  : 	switch (index)

  0008a	81 c1 2d f8 ff
	ff		 add	 ecx, -2003		; fffff82dH
  00090	83 f9 7c	 cmp	 ecx, 124		; 0000007cH
  00093	0f 87 24 01 00
	00		 ja	 $LN2@ed_fm_get_
  00099	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:__ImageBase
  000a0	0f b6 84 0a 00
	00 00 00	 movzx	 eax, BYTE PTR $LN119@ed_fm_get_[rdx+rcx]
  000a8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR $LN120@ed_fm_get_[rdx+rax*4]
  000af	48 03 ca	 add	 rcx, rdx
  000b2	ff e1		 jmp	 rcx
$LN18@ed_fm_get_:

; 440  : 	case ED_FM_SUSPENSION_0_WHEEL_YAW:
; 441  : 		return airFrame->getNoseWhlAng();

  000b4	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  000bb	f2 0f 10 80 a0
	01 00 00	 movsd	 xmm0, QWORD PTR [rax+416]

; 475  : }

  000c3	c3		 ret	 0
$LN19@ed_fm_get_:

; 442  : 	case ED_FM_SUSPENSION_0_WHEEL_SELF_ATTITUDE:
; 443  : 		return true;

  000c4	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000

; 475  : }

  000cc	c3		 ret	 0
$LN23@ed_fm_get_:

; 444  : 	case ED_FM_SUSPENSION_0_GEAR_POST_STATE:
; 445  : 	case ED_FM_SUSPENSION_0_DOWN_LOCK:
; 446  : 	case ED_FM_SUSPENSION_0_UP_LOCK:
; 447  : 		return airFrame->getNoseGrPos();
; 448  : 	case ED_FM_SUSPENSION_1_GEAR_POST_STATE:
; 449  : 	case ED_FM_SUSPENSION_1_DOWN_LOCK:
; 450  : 	case ED_FM_SUSPENSION_1_UP_LOCK:
; 451  : 		return airFrame->getLeftGrPos();

  000cd	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  000d4	f2 0f 10 80 f8
	00 00 00	 movsd	 xmm0, QWORD PTR [rax+248]

; 475  : }

  000dc	c3		 ret	 0
$LN26@ed_fm_get_:

; 452  : 	case ED_FM_SUSPENSION_2_GEAR_POST_STATE:
; 453  : 	case ED_FM_SUSPENSION_2_DOWN_LOCK:
; 454  : 	case ED_FM_SUSPENSION_2_UP_LOCK:
; 455  : 		return airFrame->getNoseGrPos();

  000dd	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  000e4	f2 0f 10 80 08
	01 00 00	 movsd	 xmm0, QWORD PTR [rax+264]

; 475  : }

  000ec	c3		 ret	 0
$LN29@ed_fm_get_:

; 456  : 	case ED_FM_STICK_FORCE_CENTRAL_ROLL: // i.e. trimmered position where force feeled by pilot is zero
; 457  : 		return input->getRollTrim();

  000ed	f2 41 0f 10 80
	90 01 00 00	 movsd	 xmm0, QWORD PTR [r8+400]

; 475  : }

  000f6	c3		 ret	 0
$LN30@ed_fm_get_:
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h

; 109  : 			return (1.0 - clamp(yawAxis.getValue(), 0.0, 1.0)) * leftBrkAxis.getValue();

  000f7	f2 41 0f 10 80
	a8 00 00 00	 movsd	 xmm0, QWORD PTR [r8+168]
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 66   :     return _Right < _Left ? _Right : _Left;

  00100	48 8d 44 24 10	 lea	 rax, QWORD PTR max$[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h

; 109  : 			return (1.0 - clamp(yawAxis.getValue(), 0.0, 1.0)) * leftBrkAxis.getValue();

  00105	f2 0f 10 15 00
	00 00 00	 movsd	 xmm2, QWORD PTR __real@3ff0000000000000
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 66   :     return _Right < _Left ? _Right : _Left;

  0010d	48 8d 4c 24 18	 lea	 rcx, QWORD PTR value$[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h

; 109  : 			return (1.0 - clamp(yawAxis.getValue(), 0.0, 1.0)) * leftBrkAxis.getValue();

  00112	66 0f 2f c2	 comisd	 xmm0, xmm2
  00116	f2 0f 11 44 24
	18		 movsd	 QWORD PTR value$[rsp], xmm0
  0011c	0f 57 c0	 xorps	 xmm0, xmm0
  0011f	f2 0f 11 54 24
	10		 movsd	 QWORD PTR max$[rsp], xmm2
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 66   :     return _Right < _Left ? _Right : _Left;

  00125	48 0f 46 c1	 cmovbe	 rax, rcx

; 43   :     return _Left < _Right ? _Right : _Left;

  00129	f2 0f 10 08	 movsd	 xmm1, QWORD PTR [rax]
  0012d	66 0f 2f c1	 comisd	 xmm0, xmm1
  00131	77 03		 ja	 SHORT $LN118@ed_fm_get_
  00133	0f 28 c1	 movaps	 xmm0, xmm1
$LN118@ed_fm_get_:
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 459  : 		return pow(input->setLeftBrk(), 3.0);

  00136	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4008000000000000
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h

; 109  : 			return (1.0 - clamp(yawAxis.getValue(), 0.0, 1.0)) * leftBrkAxis.getValue();

  0013e	f2 0f 5c d0	 subsd	 xmm2, xmm0
  00142	f2 41 0f 59 90
	e0 00 00 00	 mulsd	 xmm2, QWORD PTR [r8+224]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 459  : 		return pow(input->setLeftBrk(), 3.0);

  0014b	0f 28 c2	 movaps	 xmm0, xmm2
  0014e	e9 00 00 00 00	 jmp	 pow
$LN31@ed_fm_get_:
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h

; 127  : 			return (1.0 - clamp(yawAxis.getValue(), -1.0, 0.0)) * rightBrkAxis.getValue();

  00153	f2 41 0f 10 80
	a8 00 00 00	 movsd	 xmm0, QWORD PTR [r8+168]
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 66   :     return _Right < _Left ? _Right : _Left;

  0015c	48 8d 44 24 10	 lea	 rax, QWORD PTR max$[rsp]
  00161	0f 57 c9	 xorps	 xmm1, xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h

; 127  : 			return (1.0 - clamp(yawAxis.getValue(), -1.0, 0.0)) * rightBrkAxis.getValue();

  00164	f2 0f 11 44 24
	18		 movsd	 QWORD PTR value$[rsp], xmm0
  0016a	66 0f 2f c1	 comisd	 xmm0, xmm1
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 66   :     return _Right < _Left ? _Right : _Left;

  0016e	48 8d 4c 24 18	 lea	 rcx, QWORD PTR value$[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h

; 127  : 			return (1.0 - clamp(yawAxis.getValue(), -1.0, 0.0)) * rightBrkAxis.getValue();

  00173	f2 0f 11 4c 24
	10		 movsd	 QWORD PTR max$[rsp], xmm1
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 43   :     return _Left < _Right ? _Right : _Left;

  00179	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bff0000000000000

; 66   :     return _Right < _Left ? _Right : _Left;

  00181	48 0f 46 c1	 cmovbe	 rax, rcx

; 43   :     return _Left < _Right ? _Right : _Left;

  00185	f2 0f 10 10	 movsd	 xmm2, QWORD PTR [rax]
  00189	66 0f 2f ca	 comisd	 xmm1, xmm2
  0018d	77 03		 ja	 SHORT $LN116@ed_fm_get_
  0018f	0f 28 ca	 movaps	 xmm1, xmm2
$LN116@ed_fm_get_:
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h

; 127  : 			return (1.0 - clamp(yawAxis.getValue(), -1.0, 0.0)) * rightBrkAxis.getValue();

  00192	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  0019a	f2 0f 5c c1	 subsd	 xmm0, xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 461  : 		return pow(input->setRightBrk(), 3.0);

  0019e	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4008000000000000
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\input.h

; 127  : 			return (1.0 - clamp(yawAxis.getValue(), -1.0, 0.0)) * rightBrkAxis.getValue();

  001a6	f2 41 0f 59 80
	18 01 00 00	 mulsd	 xmm0, QWORD PTR [r8+280]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 461  : 		return pow(input->setRightBrk(), 3.0);

  001af	e9 00 00 00 00	 jmp	 pow
$LN36@ed_fm_get_:

; 470  : 	case ED_FM_CAN_ACCEPT_FUEL_FROM_TANKER:
; 471  : 		return 1000.0;

  001b4	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@408f400000000000

; 475  : }

  001bc	c3		 ret	 0
$LN2@ed_fm_get_:
  001bd	0f 57 c0	 xorps	 xmm0, xmm0
  001c0	c3		 ret	 0
  001c1	0f 1f 00	 npad	 3
$LN124@ed_fm_get_:
  001c4	00 00 00 00	 DD	 $LN2@ed_fm_get_
  001c8	00 00 00 00	 DD	 $LN13@ed_fm_get_
  001cc	00 00 00 00	 DD	 $LN14@ed_fm_get_
  001d0	00 00 00 00	 DD	 $LN16@ed_fm_get_
  001d4	00 00 00 00	 DD	 $LN34@ed_fm_get_
  001d8	00 00 00 00	 DD	 $LN35@ed_fm_get_
  001dc	00 00 00 00	 DD	 $LN17@ed_fm_get_
  001e0	00 00 00 00	 DD	 $LN2@ed_fm_get_
$LN123@ed_fm_get_:
  001e4	00		 DB	 0
  001e5	00		 DB	 0
  001e6	07		 DB	 7
  001e7	07		 DB	 7
  001e8	00		 DB	 0
  001e9	00		 DB	 0
  001ea	07		 DB	 7
  001eb	07		 DB	 7
  001ec	07		 DB	 7
  001ed	07		 DB	 7
  001ee	07		 DB	 7
  001ef	07		 DB	 7
  001f0	07		 DB	 7
  001f1	07		 DB	 7
  001f2	07		 DB	 7
  001f3	07		 DB	 7
  001f4	07		 DB	 7
  001f5	07		 DB	 7
  001f6	07		 DB	 7
  001f7	07		 DB	 7
  001f8	07		 DB	 7
  001f9	07		 DB	 7
  001fa	07		 DB	 7
  001fb	07		 DB	 7
  001fc	07		 DB	 7
  001fd	07		 DB	 7
  001fe	07		 DB	 7
  001ff	07		 DB	 7
  00200	07		 DB	 7
  00201	07		 DB	 7
  00202	07		 DB	 7
  00203	07		 DB	 7
  00204	07		 DB	 7
  00205	07		 DB	 7
  00206	07		 DB	 7
  00207	07		 DB	 7
  00208	07		 DB	 7
  00209	07		 DB	 7
  0020a	07		 DB	 7
  0020b	07		 DB	 7
  0020c	07		 DB	 7
  0020d	07		 DB	 7
  0020e	07		 DB	 7
  0020f	07		 DB	 7
  00210	07		 DB	 7
  00211	07		 DB	 7
  00212	07		 DB	 7
  00213	07		 DB	 7
  00214	07		 DB	 7
  00215	07		 DB	 7
  00216	07		 DB	 7
  00217	07		 DB	 7
  00218	07		 DB	 7
  00219	07		 DB	 7
  0021a	07		 DB	 7
  0021b	07		 DB	 7
  0021c	07		 DB	 7
  0021d	07		 DB	 7
  0021e	07		 DB	 7
  0021f	07		 DB	 7
  00220	07		 DB	 7
  00221	07		 DB	 7
  00222	07		 DB	 7
  00223	07		 DB	 7
  00224	07		 DB	 7
  00225	07		 DB	 7
  00226	07		 DB	 7
  00227	07		 DB	 7
  00228	07		 DB	 7
  00229	07		 DB	 7
  0022a	07		 DB	 7
  0022b	07		 DB	 7
  0022c	07		 DB	 7
  0022d	07		 DB	 7
  0022e	07		 DB	 7
  0022f	07		 DB	 7
  00230	07		 DB	 7
  00231	07		 DB	 7
  00232	07		 DB	 7
  00233	07		 DB	 7
  00234	07		 DB	 7
  00235	07		 DB	 7
  00236	07		 DB	 7
  00237	07		 DB	 7
  00238	07		 DB	 7
  00239	07		 DB	 7
  0023a	07		 DB	 7
  0023b	07		 DB	 7
  0023c	07		 DB	 7
  0023d	07		 DB	 7
  0023e	07		 DB	 7
  0023f	07		 DB	 7
  00240	07		 DB	 7
  00241	07		 DB	 7
  00242	07		 DB	 7
  00243	07		 DB	 7
  00244	07		 DB	 7
  00245	07		 DB	 7
  00246	07		 DB	 7
  00247	07		 DB	 7
  00248	01		 DB	 1
  00249	02		 DB	 2
  0024a	07		 DB	 7
  0024b	07		 DB	 7
  0024c	03		 DB	 3
  0024d	03		 DB	 3
  0024e	07		 DB	 7
  0024f	07		 DB	 7
  00250	07		 DB	 7
  00251	07		 DB	 7
  00252	07		 DB	 7
  00253	07		 DB	 7
  00254	04		 DB	 4
  00255	05		 DB	 5
  00256	07		 DB	 7
  00257	06		 DB	 6
  00258	07		 DB	 7
  00259	07		 DB	 7
  0025a	07		 DB	 7
  0025b	07		 DB	 7
  0025c	07		 DB	 7
  0025d	07		 DB	 7
  0025e	07		 DB	 7
  0025f	07		 DB	 7
  00260	07		 DB	 7
  00261	07		 DB	 7
  00262	07		 DB	 7
  00263	07		 DB	 7
  00264	07		 DB	 7
  00265	07		 DB	 7
  00266	07		 DB	 7
  00267	07		 DB	 7
  00268	07		 DB	 7
  00269	07		 DB	 7
  0026a	07		 DB	 7
  0026b	07		 DB	 7
  0026c	07		 DB	 7
  0026d	07		 DB	 7
  0026e	07		 DB	 7
  0026f	07		 DB	 7
  00270	07		 DB	 7
  00271	07		 DB	 7
  00272	07		 DB	 7
  00273	07		 DB	 7
  00274	07		 DB	 7
  00275	07		 DB	 7
  00276	07		 DB	 7
  00277	07		 DB	 7
  00278	07		 DB	 7
  00279	07		 DB	 7
  0027a	07		 DB	 7
  0027b	07		 DB	 7
  0027c	07		 DB	 7
  0027d	07		 DB	 7
  0027e	07		 DB	 7
  0027f	07		 DB	 7
  00280	07		 DB	 7
  00281	07		 DB	 7
  00282	07		 DB	 7
  00283	07		 DB	 7
  00284	07		 DB	 7
  00285	07		 DB	 7
  00286	07		 DB	 7
  00287	07		 DB	 7
  00288	07		 DB	 7
  00289	07		 DB	 7
  0028a	07		 DB	 7
  0028b	07		 DB	 7
  0028c	07		 DB	 7
  0028d	07		 DB	 7
  0028e	07		 DB	 7
  0028f	07		 DB	 7
  00290	07		 DB	 7
  00291	07		 DB	 7
  00292	07		 DB	 7
  00293	07		 DB	 7
  00294	07		 DB	 7
  00295	07		 DB	 7
  00296	07		 DB	 7
  00297	07		 DB	 7
  00298	07		 DB	 7
  00299	07		 DB	 7
  0029a	07		 DB	 7
  0029b	07		 DB	 7
  0029c	07		 DB	 7
  0029d	07		 DB	 7
  0029e	07		 DB	 7
  0029f	07		 DB	 7
  002a0	07		 DB	 7
  002a1	07		 DB	 7
  002a2	07		 DB	 7
  002a3	07		 DB	 7
  002a4	07		 DB	 7
  002a5	07		 DB	 7
  002a6	07		 DB	 7
  002a7	07		 DB	 7
  002a8	07		 DB	 7
  002a9	07		 DB	 7
  002aa	07		 DB	 7
  002ab	07		 DB	 7
  002ac	01		 DB	 1
  002ad	02		 DB	 2
  002ae	07		 DB	 7
  002af	07		 DB	 7
  002b0	03		 DB	 3
  002b1	03		 DB	 3
  002b2	07		 DB	 7
  002b3	07		 DB	 7
  002b4	07		 DB	 7
  002b5	07		 DB	 7
  002b6	07		 DB	 7
  002b7	07		 DB	 7
  002b8	04		 DB	 4
  002b9	05		 DB	 5
  002ba	07		 DB	 7
  002bb	06		 DB	 6
$LN120@ed_fm_get_:
  002bc	00 00 00 00	 DD	 $LN26@ed_fm_get_
  002c0	00 00 00 00	 DD	 $LN18@ed_fm_get_
  002c4	00 00 00 00	 DD	 $LN19@ed_fm_get_
  002c8	00 00 00 00	 DD	 $LN30@ed_fm_get_
  002cc	00 00 00 00	 DD	 $LN23@ed_fm_get_
  002d0	00 00 00 00	 DD	 $LN31@ed_fm_get_
  002d4	00 00 00 00	 DD	 $LN36@ed_fm_get_
  002d8	00 00 00 00	 DD	 $LN29@ed_fm_get_
  002dc	00 00 00 00	 DD	 $LN2@ed_fm_get_
$LN119@ed_fm_get_:
  002e0	00		 DB	 0
  002e1	00		 DB	 0
  002e2	01		 DB	 1
  002e3	02		 DB	 2
  002e4	08		 DB	 8
  002e5	08		 DB	 8
  002e6	08		 DB	 8
  002e7	08		 DB	 8
  002e8	03		 DB	 3
  002e9	04		 DB	 4
  002ea	04		 DB	 4
  002eb	04		 DB	 4
  002ec	08		 DB	 8
  002ed	08		 DB	 8
  002ee	08		 DB	 8
  002ef	08		 DB	 8
  002f0	08		 DB	 8
  002f1	08		 DB	 8
  002f2	05		 DB	 5
  002f3	00		 DB	 0
  002f4	00		 DB	 0
  002f5	00		 DB	 0
  002f6	08		 DB	 8
  002f7	08		 DB	 8
  002f8	08		 DB	 8
  002f9	08		 DB	 8
  002fa	08		 DB	 8
  002fb	08		 DB	 8
  002fc	08		 DB	 8
  002fd	08		 DB	 8
  002fe	08		 DB	 8
  002ff	08		 DB	 8
  00300	08		 DB	 8
  00301	08		 DB	 8
  00302	08		 DB	 8
  00303	08		 DB	 8
  00304	08		 DB	 8
  00305	08		 DB	 8
  00306	08		 DB	 8
  00307	08		 DB	 8
  00308	08		 DB	 8
  00309	08		 DB	 8
  0030a	08		 DB	 8
  0030b	08		 DB	 8
  0030c	08		 DB	 8
  0030d	08		 DB	 8
  0030e	08		 DB	 8
  0030f	08		 DB	 8
  00310	08		 DB	 8
  00311	08		 DB	 8
  00312	08		 DB	 8
  00313	08		 DB	 8
  00314	08		 DB	 8
  00315	08		 DB	 8
  00316	08		 DB	 8
  00317	08		 DB	 8
  00318	08		 DB	 8
  00319	08		 DB	 8
  0031a	08		 DB	 8
  0031b	08		 DB	 8
  0031c	08		 DB	 8
  0031d	08		 DB	 8
  0031e	08		 DB	 8
  0031f	08		 DB	 8
  00320	08		 DB	 8
  00321	08		 DB	 8
  00322	08		 DB	 8
  00323	08		 DB	 8
  00324	08		 DB	 8
  00325	08		 DB	 8
  00326	08		 DB	 8
  00327	08		 DB	 8
  00328	08		 DB	 8
  00329	08		 DB	 8
  0032a	08		 DB	 8
  0032b	08		 DB	 8
  0032c	08		 DB	 8
  0032d	08		 DB	 8
  0032e	08		 DB	 8
  0032f	08		 DB	 8
  00330	08		 DB	 8
  00331	08		 DB	 8
  00332	08		 DB	 8
  00333	08		 DB	 8
  00334	08		 DB	 8
  00335	08		 DB	 8
  00336	08		 DB	 8
  00337	08		 DB	 8
  00338	08		 DB	 8
  00339	08		 DB	 8
  0033a	08		 DB	 8
  0033b	08		 DB	 8
  0033c	08		 DB	 8
  0033d	08		 DB	 8
  0033e	08		 DB	 8
  0033f	08		 DB	 8
  00340	08		 DB	 8
  00341	08		 DB	 8
  00342	08		 DB	 8
  00343	08		 DB	 8
  00344	08		 DB	 8
  00345	06		 DB	 6
  00346	08		 DB	 8
  00347	08		 DB	 8
  00348	08		 DB	 8
  00349	08		 DB	 8
  0034a	08		 DB	 8
  0034b	08		 DB	 8
  0034c	08		 DB	 8
  0034d	08		 DB	 8
  0034e	08		 DB	 8
  0034f	08		 DB	 8
  00350	08		 DB	 8
  00351	08		 DB	 8
  00352	08		 DB	 8
  00353	08		 DB	 8
  00354	08		 DB	 8
  00355	08		 DB	 8
  00356	08		 DB	 8
  00357	08		 DB	 8
  00358	08		 DB	 8
  00359	08		 DB	 8
  0035a	08		 DB	 8
  0035b	08		 DB	 8
  0035c	07		 DB	 7
ed_fm_get_param ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_cold_start
_TEXT	SEGMENT
ed_fm_cold_start PROC					; COMDAT

; 479  : 	LOG("aircraft cold start...\n");

  00000	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?g_log@@3PEAU_iobuf@@EA ; g_log
  00007	48 85 c9	 test	 rcx, rcx
  0000a	74 0c		 je	 SHORT $LN2@ed_fm_cold
  0000c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@BFHMAGFM@aircraft?5cold?5start?4?4?4?6@
  00013	e9 00 00 00 00	 jmp	 fprintf
$LN2@ed_fm_cold:

; 480  : }

  00018	c3		 ret	 0
ed_fm_cold_start ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_hot_start
_TEXT	SEGMENT
ed_fm_hot_start PROC					; COMDAT

; 484  : 	LOG("aircraft hot start...\n");

  00000	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?g_log@@3PEAU_iobuf@@EA ; g_log
  00007	48 85 c9	 test	 rcx, rcx
  0000a	74 0c		 je	 SHORT $LN2@ed_fm_hot_
  0000c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BH@GEHOAKIO@aircraft?5hot?5start?4?4?4?6@
  00013	e9 00 00 00 00	 jmp	 fprintf
$LN2@ed_fm_hot_:

; 485  : }

  00018	c3		 ret	 0
ed_fm_hot_start ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_hot_start_in_air
_TEXT	SEGMENT
ed_fm_hot_start_in_air PROC				; COMDAT

; 489  : 	LOG("aircraft start in air...\n");

  00000	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?g_log@@3PEAU_iobuf@@EA ; g_log
  00007	48 85 c9	 test	 rcx, rcx
  0000a	74 0c		 je	 SHORT $LN2@ed_fm_hot_
  0000c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BK@FFHCECAO@aircraft?5start?5in?5air?4?4?4?6@
  00013	e9 00 00 00 00	 jmp	 fprintf
$LN2@ed_fm_hot_:

; 490  : }

  00018	c3		 ret	 0
ed_fm_hot_start_in_air ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_add_local_force_component
_TEXT	SEGMENT
x$ = 8
y$ = 16
z$ = 24
pos_x$ = 32
pos_y$ = 40
pos_z$ = 48
ed_fm_add_local_force_component PROC			; COMDAT

; 494  : 	return false;

  00000	32 c0		 xor	 al, al

; 495  : }

  00002	c3		 ret	 0
ed_fm_add_local_force_component ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_add_global_force_component
_TEXT	SEGMENT
x$ = 8
y$ = 16
z$ = 24
pos_x$ = 32
pos_y$ = 40
pos_z$ = 48
ed_fm_add_global_force_component PROC			; COMDAT

; 499  : 	return false;

  00000	32 c0		 xor	 al, al

; 500  : }

  00002	c3		 ret	 0
ed_fm_add_global_force_component ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_add_local_moment_component
_TEXT	SEGMENT
x$ = 8
y$ = 16
z$ = 24
ed_fm_add_local_moment_component PROC			; COMDAT

; 504  : 	return false;

  00000	32 c0		 xor	 al, al

; 505  : }

  00002	c3		 ret	 0
ed_fm_add_local_moment_component ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_add_global_moment_component
_TEXT	SEGMENT
x$ = 8
y$ = 16
z$ = 24
ed_fm_add_global_moment_component PROC			; COMDAT

; 509  : 	return false;

  00000	32 c0		 xor	 al, al

; 510  : }

  00002	c3		 ret	 0
ed_fm_add_global_moment_component ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_set_plugin_data_install_path
_TEXT	SEGMENT
logFile$ = 32
__$ArrayPad$ = 240
path$ = 272
ed_fm_set_plugin_data_install_path PROC			; COMDAT

; 513  : {

$LN7:
  00000	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00007	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0000e	48 33 c4	 xor	 rax, rsp
  00011	48 89 84 24 f0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 514  : #ifdef LOGGING
; 515  : 	char logFile[200];
; 516  : 	sprintf_s(logFile, 200, "%s/efm_log.txt", path);

  00019	4c 8b c9	 mov	 r9, rcx
  0001c	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0P@HEFKKHPJ@?$CFs?1efm_log?4txt@
  00023	48 8d 4c 24 20	 lea	 rcx, QWORD PTR logFile$[rsp]
  00028	ba c8 00 00 00	 mov	 edx, 200		; 000000c8H
  0002d	e8 00 00 00 00	 call	 sprintf_s

; 517  : 	fopen_s(&g_log, logFile, "a+");

  00032	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_02DPNLHKJD@a?$CL@
  00039	48 8d 54 24 20	 lea	 rdx, QWORD PTR logFile$[rsp]
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?g_log@@3PEAU_iobuf@@EA ; g_log
  00045	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fopen_s

; 518  : #endif
; 519  : 	printf("%s\n", srcvers);

  0004b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?srcvers@@3QBDB
  00052	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_03OFAPEBGM@?$CFs?6@
  00059	e8 00 00 00 00	 call	 printf

; 520  : 
; 521  : 	LOG_BREAK();

  0005e	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?g_log@@3PEAU_iobuf@@EA ; g_log
  00065	48 85 c9	 test	 rcx, rcx
  00068	74 43		 je	 SHORT $LN4@ed_fm_set_
  0006a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@HCDPKGIN@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?6@
  00071	e8 00 00 00 00	 call	 fprintf

; 522  : 	LOG("Begin Log, %s\n", srcvers);

  00076	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?g_log@@3PEAU_iobuf@@EA ; g_log
  0007d	48 85 c9	 test	 rcx, rcx
  00080	74 2b		 je	 SHORT $LN4@ed_fm_set_
  00082	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:?srcvers@@3QBDB
  00089	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0P@DMMMFIGI@Begin?5Log?0?5?$CFs?6@
  00090	e8 00 00 00 00	 call	 fprintf

; 523  : 	LOG("Initializing Components...\n");

  00095	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?g_log@@3PEAU_iobuf@@EA ; g_log
  0009c	48 85 c9	 test	 rcx, rcx
  0009f	74 0c		 je	 SHORT $LN4@ed_fm_set_
  000a1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BM@BGPAKLO@Initializing?5Components?4?4?4?6@
  000a8	e8 00 00 00 00	 call	 fprintf
$LN4@ed_fm_set_:

; 524  : 
; 525  : 	g_safeToRun = 1;

  000ad	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?g_safeToRun@@3HA, 1 ; g_safeToRun

; 526  : 
; 527  : 	init();

  000b7	e8 00 00 00 00	 call	 ?init@@YAXXZ		; init

; 528  : }

  000bc	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000c4	48 33 cc	 xor	 rcx, rsp
  000c7	e8 00 00 00 00	 call	 __security_check_cookie
  000cc	48 81 c4 08 01
	00 00		 add	 rsp, 264		; 00000108H
  000d3	c3		 ret	 0
ed_fm_set_plugin_data_install_path ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_release
_TEXT	SEGMENT
ed_fm_release PROC					; COMDAT

; 531  : {

$LN50:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 53   : 	delete world;

  00006	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?world@@3PEAVWorld@Aircraft@@EA
  0000d	48 85 c9	 test	 rcx, rcx
  00010	74 0a		 je	 SHORT $LN25@ed_fm_rele
  00012	ba c0 00 00 00	 mov	 edx, 192		; 000000c0H
  00017	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN25@ed_fm_rele:

; 54   : 	delete state;

  0001c	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?state@@3PEAVState@Aircraft@@EA
  00023	48 85 c9	 test	 rcx, rcx
  00026	74 0a		 je	 SHORT $LN28@ed_fm_rele
  00028	ba 00 01 00 00	 mov	 edx, 256		; 00000100H
  0002d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN28@ed_fm_rele:

; 55   : 	delete aeroModel;

  00032	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?aeroModel@@3PEAVAeroModel@Aircraft@@EA
  00039	48 85 c9	 test	 rcx, rcx
  0003c	74 0a		 je	 SHORT $LN31@ed_fm_rele
  0003e	ba e8 00 00 00	 mov	 edx, 232		; 000000e8H
  00043	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN31@ed_fm_rele:

; 56   : 	delete fuelSys;

  00048	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?fuelSys@@3PEAVFuelSys@Aircraft@@EA
  0004f	48 85 c9	 test	 rcx, rcx
  00052	74 0a		 je	 SHORT $LN34@ed_fm_rele
  00054	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  00059	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN34@ed_fm_rele:

; 57   : 	delete engineL;

  0005e	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?engineL@@3PEAVEngine@Aircraft@@EA
  00065	48 85 c9	 test	 rcx, rcx
  00068	74 0a		 je	 SHORT $LN37@ed_fm_rele
  0006a	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  0006f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN37@ed_fm_rele:

; 58   : 	delete engineR;

  00074	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?engineR@@3PEAVEngine@Aircraft@@EA
  0007b	48 85 c9	 test	 rcx, rcx
  0007e	74 0a		 je	 SHORT $LN40@ed_fm_rele
  00080	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00085	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN40@ed_fm_rele:

; 59   : 	delete input;

  0008a	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?input@@3PEAVInput@Aircraft@@EA
  00091	48 85 c9	 test	 rcx, rcx
  00094	74 0a		 je	 SHORT $LN43@ed_fm_rele
  00096	ba a0 01 00 00	 mov	 edx, 416		; 000001a0H
  0009b	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN43@ed_fm_rele:

; 60   : 	delete airFrame;

  000a0	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  000a7	48 85 c9	 test	 rcx, rcx
  000aa	74 0a		 je	 SHORT $LN46@ed_fm_rele
  000ac	ba c8 01 00 00	 mov	 edx, 456		; 000001c8H
  000b1	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN46@ed_fm_rele:

; 535  : #ifdef LOGGING
; 536  : 	LOG("Releasing Components...\n");

  000b6	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?g_log@@3PEAU_iobuf@@EA ; g_log

; 62   : 	world = NULL;

  000bd	33 db		 xor	 ebx, ebx
  000bf	48 89 1d 00 00
	00 00		 mov	 QWORD PTR ?world@@3PEAVWorld@Aircraft@@EA, rbx

; 63   : 	state = NULL;

  000c6	48 89 1d 00 00
	00 00		 mov	 QWORD PTR ?state@@3PEAVState@Aircraft@@EA, rbx

; 64   : 	aeroModel = NULL;

  000cd	48 89 1d 00 00
	00 00		 mov	 QWORD PTR ?aeroModel@@3PEAVAeroModel@Aircraft@@EA, rbx

; 65   : 	fuelSys = NULL;

  000d4	48 89 1d 00 00
	00 00		 mov	 QWORD PTR ?fuelSys@@3PEAVFuelSys@Aircraft@@EA, rbx

; 66   : 	engineL = NULL;

  000db	48 89 1d 00 00
	00 00		 mov	 QWORD PTR ?engineL@@3PEAVEngine@Aircraft@@EA, rbx

; 67   : 	engineR = NULL;

  000e2	48 89 1d 00 00
	00 00		 mov	 QWORD PTR ?engineR@@3PEAVEngine@Aircraft@@EA, rbx

; 68   : 	input = NULL;

  000e9	48 89 1d 00 00
	00 00		 mov	 QWORD PTR ?input@@3PEAVInput@Aircraft@@EA, rbx

; 69   : 	airFrame = NULL;

  000f0	48 89 1d 00 00
	00 00		 mov	 QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA, rbx

; 70   : 	window = NULL;

  000f7	48 89 1d 00 00
	00 00		 mov	 QWORD PTR ?window@@3PEAUHWND__@@EA, rbx

; 532  : 	cleanup();
; 533  : 	aircraftInited = false;

  000fe	88 1d 00 00 00
	00		 mov	 BYTE PTR ?aircraftInited@@3_NA, bl

; 534  : 	g_safeToRun = false;

  00104	89 1d 00 00 00
	00		 mov	 DWORD PTR ?g_safeToRun@@3HA, ebx ; g_safeToRun

; 535  : #ifdef LOGGING
; 536  : 	LOG("Releasing Components...\n");

  0010a	48 85 c9	 test	 rcx, rcx
  0010d	74 3d		 je	 SHORT $LN4@ed_fm_rele
  0010f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@BIFCCFJO@Releasing?5Components?4?4?4?6@
  00116	e8 00 00 00 00	 call	 fprintf

; 537  : 	LOG("Closing Log...\n");

  0011b	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?g_log@@3PEAU_iobuf@@EA ; g_log
  00122	48 85 c9	 test	 rcx, rcx
  00125	74 25		 je	 SHORT $LN4@ed_fm_rele
  00127	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BA@CIMAFJHJ@Closing?5Log?4?4?4?6@
  0012e	e8 00 00 00 00	 call	 fprintf

; 538  : 	if (g_log)

  00133	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?g_log@@3PEAU_iobuf@@EA ; g_log
  0013a	48 85 c9	 test	 rcx, rcx
  0013d	74 0d		 je	 SHORT $LN4@ed_fm_rele

; 539  : 	{
; 540  : 		fclose(g_log);

  0013f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fclose

; 541  : 		g_log = NULL;

  00145	48 89 1d 00 00
	00 00		 mov	 QWORD PTR ?g_log@@3PEAU_iobuf@@EA, rbx ; g_log
$LN4@ed_fm_rele:

; 542  : 	}
; 543  : #endif
; 544  : }

  0014c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00150	5b		 pop	 rbx
  00151	c3		 ret	 0
ed_fm_release ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_enable_debug_info
_TEXT	SEGMENT
ed_fm_enable_debug_info PROC				; COMDAT

; 548  : 	return false;

  00000	32 c0		 xor	 al, al

; 549  : }

  00002	c3		 ret	 0
ed_fm_enable_debug_info ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_suspension_feedback
_TEXT	SEGMENT
$T5 = 56
idx$ = 128
info$ = 136
ed_fm_suspension_feedback PROC				; COMDAT

; 552  : {

$LN16:
  00000	48 83 ec 78	 sub	 rsp, 120		; 00000078H

; 553  : 
; 554  : 	if (idx == 0)

  00004	85 c9		 test	 ecx, ecx
  00006	75 5f		 jne	 SHORT $LN2@ed_fm_susp

; 555  : 	{
; 556  : 		airFrame->setNoseWhlGS(info->wheel_speed_X);

  00008	48 8b 42 40	 mov	 rax, QWORD PTR [rdx+64]
  0000c	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  00013	48 89 81 60 01
	00 00		 mov	 QWORD PTR [rcx+352], rax
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  0001a	0f 10 42 18	 movups	 xmm0, XMMWORD PTR [rdx+24]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 20   : 	Vec3(double x_, double y_, double z_) :x(x_), y(y_), z(z_) {}

  0001e	f2 0f 10 5a 10	 movsd	 xmm3, QWORD PTR [rdx+16]
  00023	f2 0f 10 62 28	 movsd	 xmm4, QWORD PTR [rdx+40]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\force.h

; 9    : 	Force(const Vec3& force_, const Vec3& pos_) : force(force_), pos(pos_) {}

  00028	0f 10 12	 movups	 xmm2, XMMWORD PTR [rdx]
  0002b	0f 11 44 24 50	 movups	 XMMWORD PTR $T5[rsp+24], xmm0
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\airframe.h

; 157  : 		void setNoseWhlForce(const Force& noseWhlForce_) { noseWhlForce = noseWhlForce_; }

  00030	0f 10 44 24 48	 movups	 xmm0, XMMWORD PTR $T5[rsp+16]
  00035	0f 10 4c 24 58	 movups	 xmm1, XMMWORD PTR $T5[rsp+32]
  0003a	0f 11 91 70 01
	00 00		 movups	 XMMWORD PTR [rcx+368], xmm2
  00041	f2 0f 10 c3	 movsd	 xmm0, xmm3
  00045	66 0f 14 cc	 unpcklpd xmm1, xmm4
  00049	0f 11 81 80 01
	00 00		 movups	 XMMWORD PTR [rcx+384], xmm0
  00050	0f 11 89 90 01
	00 00		 movups	 XMMWORD PTR [rcx+400], xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 561  : 		airFrame->setNoseWhlComp(info->struct_compression);

  00057	48 8b 42 38	 mov	 rax, QWORD PTR [rdx+56]
  0005b	48 89 81 68 01
	00 00		 mov	 QWORD PTR [rcx+360], rax

; 587  : 	}
; 588  : 
; 589  : 	//
; 590  : 	//("Force(%lf, %lf, %lf)\n", info->acting_force[0], info->acting_force[1], info->acting_force[2]);
; 591  : 	// printf("Position(%lf, %lf, %lf)\n", info->acting_force_point[0], info->acting_force_point[1], info->acting_force_point[2]);
; 592  : 	// printf("Struct Compression %d: %lf\n", idx, info->struct_compression);
; 593  : 	// printf("Integrity Factor: %lf", info->integrity_factor);
; 594  : }

  00062	48 83 c4 78	 add	 rsp, 120		; 00000078H
  00066	c3		 ret	 0
$LN2@ed_fm_susp:

; 562  : 	}
; 563  : 
; 564  : 	if (idx == 1)

  00067	83 f9 01	 cmp	 ecx, 1
  0006a	75 22		 jne	 SHORT $LN3@ed_fm_susp

; 565  : 	{
; 566  : 		airFrame->setLeftWhlGS(info->wheel_speed_X);

  0006c	48 8b 42 40	 mov	 rax, QWORD PTR [rdx+64]
  00070	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  00077	48 89 81 28 01
	00 00		 mov	 QWORD PTR [rcx+296], rax

; 567  : 		airFrame->setLeftWhlComp(info->struct_compression);

  0007e	48 8b 42 38	 mov	 rax, QWORD PTR [rdx+56]
  00082	48 89 81 30 01
	00 00		 mov	 QWORD PTR [rcx+304], rax

; 587  : 	}
; 588  : 
; 589  : 	//
; 590  : 	//("Force(%lf, %lf, %lf)\n", info->acting_force[0], info->acting_force[1], info->acting_force[2]);
; 591  : 	// printf("Position(%lf, %lf, %lf)\n", info->acting_force_point[0], info->acting_force_point[1], info->acting_force_point[2]);
; 592  : 	// printf("Struct Compression %d: %lf\n", idx, info->struct_compression);
; 593  : 	// printf("Integrity Factor: %lf", info->integrity_factor);
; 594  : }

  00089	48 83 c4 78	 add	 rsp, 120		; 00000078H
  0008d	c3		 ret	 0
$LN3@ed_fm_susp:

; 568  : 		/*printf( "wheel speed: %lf, force: %lf,%lf,%lf, point: %lf, %lf, %lf\n",
; 569  : 			info->wheel_speed_X,
; 570  : 			info->acting_force[0],
; 571  : 			info->acting_force[1],
; 572  : 			info->acting_force[2],
; 573  : 			info->acting_force_point[0],
; 574  : 			info->acting_force_point[1],
; 575  : 			info->acting_force_point[2] );*/
; 576  : 	}
; 577  : 
; 578  : 	if (idx == 2)

  0008e	83 f9 02	 cmp	 ecx, 2
  00091	75 22		 jne	 SHORT $LN4@ed_fm_susp

; 579  : 	{
; 580  : 		airFrame->setRightWhlGS(info->wheel_speed_X);

  00093	48 8b 42 40	 mov	 rax, QWORD PTR [rdx+64]
  00097	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?airFrame@@3PEAVAirFrame@Aircraft@@EA
  0009e	48 89 81 50 01
	00 00		 mov	 QWORD PTR [rcx+336], rax

; 581  : 		airFrame->setRightWhlComp(info->struct_compression);

  000a5	48 8b 42 38	 mov	 rax, QWORD PTR [rdx+56]
  000a9	48 89 81 58 01
	00 00		 mov	 QWORD PTR [rcx+344], rax

; 587  : 	}
; 588  : 
; 589  : 	//
; 590  : 	//("Force(%lf, %lf, %lf)\n", info->acting_force[0], info->acting_force[1], info->acting_force[2]);
; 591  : 	// printf("Position(%lf, %lf, %lf)\n", info->acting_force_point[0], info->acting_force_point[1], info->acting_force_point[2]);
; 592  : 	// printf("Struct Compression %d: %lf\n", idx, info->struct_compression);
; 593  : 	// printf("Integrity Factor: %lf", info->integrity_factor);
; 594  : }

  000b0	48 83 c4 78	 add	 rsp, 120		; 00000078H
  000b4	c3		 ret	 0
$LN4@ed_fm_susp:

; 582  : 	}
; 583  : 
; 584  : 	if (idx > 2)

  000b5	7e 10		 jle	 SHORT $LN5@ed_fm_susp

; 585  : 	{
; 586  : 		printf("Something Else\n");

  000b7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@GDCNBPJJ@Something?5Else?6@

; 587  : 	}
; 588  : 
; 589  : 	//
; 590  : 	//("Force(%lf, %lf, %lf)\n", info->acting_force[0], info->acting_force[1], info->acting_force[2]);
; 591  : 	// printf("Position(%lf, %lf, %lf)\n", info->acting_force_point[0], info->acting_force_point[1], info->acting_force_point[2]);
; 592  : 	// printf("Struct Compression %d: %lf\n", idx, info->struct_compression);
; 593  : 	// printf("Integrity Factor: %lf", info->integrity_factor);
; 594  : }

  000be	48 83 c4 78	 add	 rsp, 120		; 00000078H

; 585  : 	{
; 586  : 		printf("Something Else\n");

  000c2	e9 00 00 00 00	 jmp	 printf
$LN5@ed_fm_susp:

; 587  : 	}
; 588  : 
; 589  : 	//
; 590  : 	//("Force(%lf, %lf, %lf)\n", info->acting_force[0], info->acting_force[1], info->acting_force[2]);
; 591  : 	// printf("Position(%lf, %lf, %lf)\n", info->acting_force_point[0], info->acting_force_point[1], info->acting_force_point[2]);
; 592  : 	// printf("Struct Compression %d: %lf\n", idx, info->struct_compression);
; 593  : 	// printf("Integrity Factor: %lf", info->integrity_factor);
; 594  : }

  000c7	48 83 c4 78	 add	 rsp, 120		; 00000078H
  000cb	c3		 ret	 0
ed_fm_suspension_feedback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp
;	COMDAT ed_fm_set_surface
_TEXT	SEGMENT
h$ = 112
h_obj$ = 120
surface_type$ = 128
normal_x$ = 136
normal_y$ = 144
normal_z$ = 152
ed_fm_set_surface PROC					; COMDAT

; 604  : {

$LN10:
  00000	48 83 ec 68	 sub	 rsp, 104		; 00000068H
  00004	0f 29 74 24 50	 movaps	 XMMWORD PTR [rsp+80], xmm6

; 605  : 	printf("Type: %d\n", surface_type);

  00009	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_09MDKJOJFC@Type?3?5?$CFd?6@
  00010	0f 29 7c 24 40	 movaps	 XMMWORD PTR [rsp+64], xmm7
  00015	41 8b d0	 mov	 edx, r8d
  00018	0f 28 fb	 movaps	 xmm7, xmm3
  0001b	0f 28 f1	 movaps	 xmm6, xmm1
  0001e	e8 00 00 00 00	 call	 printf
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h

; 34   : 		Vec3 getPos() const { return pos; }

  00023	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?world@@3PEAVWorld@Aircraft@@EA

; 47   : 		void setSurfNorm(const Vec3& surfNorm_) { surfNorm = surfNorm_; }

  0002a	0f 28 cf	 movaps	 xmm1, xmm7
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 20   : 	Vec3(double x_, double y_, double z_) :x(x_), y(y_), z(z_) {}

  0002d	f2 0f 10 84 24
	90 00 00 00	 movsd	 xmm0, QWORD PTR normal_y$[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 608  : }

  00036	0f 28 7c 24 40	 movaps	 xmm7, XMMWORD PTR [rsp+64]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h

; 47   : 		void setSurfNorm(const Vec3& surfNorm_) { surfNorm = surfNorm_; }

  0003b	66 0f 14 c8	 unpcklpd xmm1, xmm0
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 606  : 	world->setSurfHeight(world->getPos().y - h_obj);

  0003f	f2 0f 10 50 48	 movsd	 xmm2, QWORD PTR [rax+72]
  00044	f2 0f 5c d6	 subsd	 xmm2, xmm6

; 608  : }

  00048	0f 28 74 24 50	 movaps	 xmm6, XMMWORD PTR [rsp+80]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h

; 47   : 		void setSurfNorm(const Vec3& surfNorm_) { surfNorm = surfNorm_; }

  0004d	0f 11 88 a0 00
	00 00		 movups	 XMMWORD PTR [rax+160], xmm1
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 606  : 	world->setSurfHeight(world->getPos().y - h_obj);

  00054	f2 0f 11 90 b8
	00 00 00	 movsd	 QWORD PTR [rax+184], xmm2
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\vec3.h

; 20   : 	Vec3(double x_, double y_, double z_) :x(x_), y(y_), z(z_) {}

  0005c	f2 0f 10 94 24
	98 00 00 00	 movsd	 xmm2, QWORD PTR normal_z$[rsp]
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\world.h

; 47   : 		void setSurfNorm(const Vec3& surfNorm_) { surfNorm = surfNorm_; }

  00065	f2 0f 11 90 b0
	00 00 00	 movsd	 QWORD PTR [rax+176], xmm2
; File E:\Saved Games\DCS\Mods\aircraft\YF-23A Black Widow\EFM\FM\aircraft.cpp

; 608  : }

  0006d	48 83 c4 68	 add	 rsp, 104		; 00000068H
  00071	c3		 ret	 0
ed_fm_set_surface ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
;	COMDAT ??$min@N@std@@YAAEBNAEBN0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$min@N@std@@YAAEBNAEBN0@Z PROC			; std::min<double>, COMDAT

; 65   :     // return smaller of _Left and _Right
; 66   :     return _Right < _Left ? _Right : _Left;

  00000	f2 0f 10 01	 movsd	 xmm0, QWORD PTR [rcx]
  00004	66 0f 2f 02	 comisd	 xmm0, QWORD PTR [rdx]
  00008	48 0f 47 ca	 cmova	 rcx, rdx
  0000c	48 8b c1	 mov	 rax, rcx

; 67   : }

  0000f	c3		 ret	 0
??$min@N@std@@YAAEBNAEBN0@Z ENDP			; std::min<double>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
;	COMDAT ??$max@N@std@@YAAEBNAEBN0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$max@N@std@@YAAEBNAEBN0@Z PROC			; std::max<double>, COMDAT

; 42   :     // return larger of _Left and _Right
; 43   :     return _Left < _Right ? _Right : _Left;

  00000	f2 0f 10 02	 movsd	 xmm0, QWORD PTR [rdx]
  00004	66 0f 2f 01	 comisd	 xmm0, QWORD PTR [rcx]
  00008	48 0f 47 ca	 cmova	 rcx, rdx
  0000c	48 8b c1	 mov	 rax, rcx

; 44   : }

  0000f	c3		 ret	 0
??$max@N@std@@YAAEBNAEBN0@Z ENDP			; std::max<double>
_TEXT	ENDS
END
